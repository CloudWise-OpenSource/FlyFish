{"version":3,"sources":["out-vscode/bootstrap-node.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n//@ts-check\n'use strict';\n\n// Setup current working directory in all our node & electron processes\n// - Windows: call `process.chdir()` to always set application folder as cwd\n// -   Posix: allow to change the current working dir via `VSCODE_CWD` if defined\n// -  all OS: store the `process.cwd()` inside `VSCODE_CWD` for consistent lookups\n// TODO@bpasero revisit if chdir() on Windows is needed in the future still\nfunction setupCurrentWorkingDirectory() {\n\tconst path = require('path');\n\n\ttry {\n\t\tlet cwd = process.env['VSCODE_CWD'];\n\n\t\t// remember current working directory in environment\n\t\t// unless it was given to us already from outside\n\t\tif (typeof cwd !== 'string') {\n\t\t\tcwd = process.cwd();\n\t\t\tprocess.env['VSCODE_CWD'] = cwd;\n\t\t}\n\n\t\t// Windows: always set application folder as current working dir\n\t\tif (process.platform === 'win32') {\n\t\t\tprocess.chdir(path.dirname(process.execPath));\n\t\t}\n\n\t\t// Linux/macOS: allow to change current working dir based on env\n\t\telse {\n\t\t\tif (cwd !== process.cwd()) {\n\t\t\t\tprocess.chdir(cwd);\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n}\n\nsetupCurrentWorkingDirectory();\n\n/**\n * Add support for redirecting the loading of node modules\n *\n * @param {string} injectPath\n */\nexports.injectNodeModuleLookupPath = function (injectPath) {\n\tif (!injectPath) {\n\t\tthrow new Error('Missing injectPath');\n\t}\n\n\tconst Module = require('module');\n\tconst path = require('path');\n\n\tconst nodeModulesPath = path.join(__dirname, '../node_modules');\n\n\t// @ts-ignore\n\tconst originalResolveLookupPaths = Module._resolveLookupPaths;\n\n\t// @ts-ignore\n\tModule._resolveLookupPaths = function (moduleName, parent) {\n\t\tconst paths = originalResolveLookupPaths(moduleName, parent);\n\t\tif (Array.isArray(paths)) {\n\t\t\tfor (let i = 0, len = paths.length; i < len; i++) {\n\t\t\t\tif (paths[i] === nodeModulesPath) {\n\t\t\t\t\tpaths.splice(i, 0, injectPath);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn paths;\n\t};\n};\n\nexports.removeGlobalNodeModuleLookupPaths = function () {\n\tconst Module = require('module');\n\t// @ts-ignore\n\tconst globalPaths = Module.globalPaths;\n\n\t// @ts-ignore\n\tconst originalResolveLookupPaths = Module._resolveLookupPaths;\n\n\t// @ts-ignore\n\tModule._resolveLookupPaths = function (moduleName, parent) {\n\t\tconst paths = originalResolveLookupPaths(moduleName, parent);\n\t\tlet commonSuffixLength = 0;\n\t\twhile (commonSuffixLength < paths.length && paths[paths.length - 1 - commonSuffixLength] === globalPaths[globalPaths.length - 1 - commonSuffixLength]) {\n\t\t\tcommonSuffixLength++;\n\t\t}\n\t\treturn paths.slice(0, paths.length - commonSuffixLength);\n\t};\n};\n\n/**\n * Helper to enable portable mode.\n *\n * @param {Partial<import('./vs/base/common/product').IProductConfiguration>} product\n * @returns {{ portableDataPath: string; isPortable: boolean; }}\n */\nexports.configurePortable = function (product) {\n\tconst fs = require('fs');\n\tconst path = require('path');\n\n\tconst appRoot = path.dirname(__dirname);\n\n\t/**\n\t * @param {import('path')} path\n\t */\n\tfunction getApplicationPath(path) {\n\t\tif (process.env['VSCODE_DEV']) {\n\t\t\treturn appRoot;\n\t\t}\n\n\t\tif (process.platform === 'darwin') {\n\t\t\treturn path.dirname(path.dirname(path.dirname(appRoot)));\n\t\t}\n\n\t\treturn path.dirname(path.dirname(appRoot));\n\t}\n\n\t/**\n\t * @param {import('path')} path\n\t */\n\tfunction getPortableDataPath(path) {\n\t\tif (process.env['VSCODE_PORTABLE']) {\n\t\t\treturn process.env['VSCODE_PORTABLE'];\n\t\t}\n\n\t\tif (process.platform === 'win32' || process.platform === 'linux') {\n\t\t\treturn path.join(getApplicationPath(path), 'data');\n\t\t}\n\n\t\t// @ts-ignore\n\t\tconst portableDataName = product.portable || `${product.applicationName}-portable-data`;\n\t\treturn path.join(path.dirname(getApplicationPath(path)), portableDataName);\n\t}\n\n\tconst portableDataPath = getPortableDataPath(path);\n\tconst isPortable = !('target' in product) && fs.existsSync(portableDataPath);\n\tconst portableTempPath = path.join(portableDataPath, 'tmp');\n\tconst isTempPortable = isPortable && fs.existsSync(portableTempPath);\n\n\tif (isPortable) {\n\t\tprocess.env['VSCODE_PORTABLE'] = portableDataPath;\n\t} else {\n\t\tdelete process.env['VSCODE_PORTABLE'];\n\t}\n\n\tif (isTempPortable) {\n\t\tif (process.platform === 'win32') {\n\t\t\tprocess.env['TMP'] = portableTempPath;\n\t\t\tprocess.env['TEMP'] = portableTempPath;\n\t\t} else {\n\t\t\tprocess.env['TMPDIR'] = portableTempPath;\n\t\t}\n\t}\n\n\treturn {\n\t\tportableDataPath,\n\t\tisPortable\n\t};\n};\n"],"mappings":"aAaA,wCACC,KAAM,GAAO,QAAQ,QAErB,IACC,GAAI,GAAM,QAAQ,IAAI,WAItB,AAAI,MAAO,IAAQ,UAClB,GAAM,QAAQ,MACd,QAAQ,IAAI,WAAgB,GAI7B,AAAI,QAAQ,WAAa,QACxB,QAAQ,MAAM,EAAK,QAAQ,QAAQ,WAK/B,IAAQ,QAAQ,OACnB,QAAQ,MAAM,SAGR,GACR,QAAQ,MAAM,IAIhB,+BAOA,QAAQ,2BAA6B,SAAU,GAC9C,GAAI,CAAC,EACJ,KAAM,IAAI,OAAM,sBAGjB,KAAM,GAAS,QAAQ,UAGjB,EAAkB,AAFX,QAAQ,QAEQ,KAAK,UAAW,mBAGvC,EAA6B,EAAO,oBAG1C,EAAO,oBAAsB,SAAU,EAAY,GAClD,KAAM,GAAQ,EAA2B,EAAY,GACrD,GAAI,MAAM,QAAQ,IACjB,OAAS,GAAI,EAAG,EAAM,EAAM,OAAQ,EAAI,EAAK,IAC5C,GAAI,EAAM,KAAO,GAChB,EAAM,OAAO,EAAG,EAAG,GACnB,OAKH,MAAO,KAIT,QAAQ,kCAAoC,WAC3C,KAAM,GAAS,QAAQ,UAEjB,EAAc,EAAO,YAGrB,EAA6B,EAAO,oBAG1C,EAAO,oBAAsB,SAAU,EAAY,GAClD,KAAM,GAAQ,EAA2B,EAAY,GACrD,GAAI,GAAqB,EACzB,KAAO,EAAqB,EAAM,QAAU,EAAM,EAAM,OAAS,EAAI,KAAwB,EAAY,EAAY,OAAS,EAAI,IACjI,IAED,MAAO,GAAM,MAAM,EAAG,EAAM,OAAS,KAUvC,QAAQ,kBAAoB,SAAU,GACrC,KAAM,GAAK,QAAQ,MACb,EAAO,QAAQ,QAEf,EAAU,EAAK,QAAQ,WAK7B,WAA4B,GAC3B,MAAI,SAAQ,IAAI,WACR,EAGJ,QAAQ,WAAa,SACjB,EAAK,QAAQ,EAAK,QAAQ,EAAK,QAAQ,KAGxC,EAAK,QAAQ,EAAK,QAAQ,IAMlC,WAA6B,GAC5B,GAAI,QAAQ,IAAI,gBACf,MAAO,SAAQ,IAAI,gBAGpB,GAAI,QAAQ,WAAa,SAAW,QAAQ,WAAa,QACxD,MAAO,GAAK,KAAK,EAAmB,GAAO,QAI5C,KAAM,GAAmB,EAAQ,UAAY,GAAG,EAAQ,gCACxD,MAAO,GAAK,KAAK,EAAK,QAAQ,EAAmB,IAAQ,GAG1D,KAAM,GAAmB,EAAoB,GACvC,EAAa,CAAE,WAAY,KAAY,EAAG,WAAW,GACrD,EAAmB,EAAK,KAAK,EAAkB,OAC/C,EAAiB,GAAc,EAAG,WAAW,GAEnD,MAAI,GACH,QAAQ,IAAI,gBAAqB,EAEjC,MAAO,SAAQ,IAAI,gBAGhB,GACH,CAAI,QAAQ,WAAa,QACxB,SAAQ,IAAI,IAAS,EACrB,QAAQ,IAAI,KAAU,GAEtB,QAAQ,IAAI,OAAY,GAInB,CACN,mBACA","names":[],"file":"bootstrap-node.js"}