{"version":3,"sources":["out-vscode/vs/server/fake","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/assert.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/decorators.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/errors.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/arrays.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/functional.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/iterator.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/json.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/lifecycle.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/linkedList.ts","out-vscode/vs/server/vs/base/common/performance.js","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/platform.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/process.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/path.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/processes.ts","out-vscode/vs/server/vs/base/common/semver/semver.js","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/stopwatch.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/event.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/cancellation.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/stream.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/strings.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/buffer.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/severity.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/types.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/extpath.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/objects.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/uri.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/console.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/map.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/marshalling.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/network.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/normalization.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/resources.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/async.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/glob.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/labels.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/uriIpc.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/uuid.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/decoder.ts","out-vscode/vs/server/vs/base/node/languagePacks.js","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/macAddress.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/id.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/pfs.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/extpath.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/powershell.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/proxy_agent.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/watcher.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/parts/ipc/common/ipc.net.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/parts/storage/common/storage.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/actions.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/date.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/errorMessage.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/jsonErrorMessages.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/processes.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/shell.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/debug/common/extensionHostDebugIpc.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/environment/common/environmentService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/environment/node/argv.ts","out-vscode/vs/server/vs/platform/environment/node/userDataPath.js","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/environment/node/environmentService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementIpc.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/common/extensionNls.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensions/common/extensionValidator.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/common/ipcFileSystemProvider.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/node/watcher/win32/csharpWatcherService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/node/watcher/win32/watcherService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/descriptors.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/graph.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/contextkey/common/contextkey.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/download/common/download.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/environment/common/environment.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagement.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensions/common/extensions.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementCLIService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/node/extensionsManifestCache.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/common/files.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/environment/node/argvHelper.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/environment/node/shellEnv.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/node/watcher/watcher.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/node/watcher/nodejs/watcherService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/instantiationService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/label/common/label.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/localizations/common/localizations.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/log/common/log.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/node/extensionDownloader.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/node/extensionLifecycle.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/node/extensionsWatcher.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/localizations/node/localizations.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/log/common/bufferLog.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/log/common/fileLog.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/log/common/logIpc.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/log/node/spdlogLog.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/log/node/loggerService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/notification/common/notification.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/product/common/product.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/common/io.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/common/fileService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/node/diskFileSystemProvider.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/product/common/productService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/registry/common/platform.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/configuration/common/configurationRegistry.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/configuration/common/configuration.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/configuration/common/configurationModels.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/configuration/common/configurationService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/remote/common/remoteAuthorityResolver.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/request/common/request.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/request/common/requestIpc.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/request/node/proxy.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/serviceMachineId/common/serviceMachineId.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/state/node/state.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/state/node/stateService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/storage/common/storage.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/common/commonProperties.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/common/errorTelemetry.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/browser/errorTelemetry.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/common/telemetry.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/common/extensionGalleryService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/common/telemetryService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/common/telemetryLogAppender.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/node/appInsightsAppender.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/node/telemetry.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/terminal/common/terminal.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/terminal/node/ptyHostService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/workspace/common/workspace.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/common/telemetry.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/insights.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/logger.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/nls.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/connection.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/util.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/terminal/common/environmentVariable.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/terminal/common/environmentVariableCollection.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/terminal/common/environmentVariableShared.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalEnvironment.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/terminal/node/terminalEnvironment.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/configuration/common/configuration.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/configurationResolver/common/configurationResolver.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/configurationResolver/common/variableResolver.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/editor/common/editorService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/common/editor.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/terminal/common/remoteTerminalChannel.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/extensions/common/extensionPoints.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/extensions/node/extensionPoints.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/channel.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentFileSystemChannel.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/zip.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/node/extensionsScanner.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/marketplace.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/parts/ipc/node/ipc.net.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/request/node/requestService.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/code/node/cliProcessMain.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/protocol.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/server.ts","out-vscode/vs/server/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/entry.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: unknown, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nlet memoizeId = 0;\nexport function createMemoizer() {\n\tconst memoizeKeyPrefix = `$memoize${memoizeId++}`;\n\tlet self: any = undefined;\n\n\tconst result = function memoize(target: any, key: string, descriptor: any) {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\n\t\t\tif (fn!.length !== 0) {\n\t\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t\t}\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tconst memoizeKey = `${memoizeKeyPrefix}:${key}`;\n\t\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\t\tself = this;\n\n\t\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this[memoizeKey];\n\t\t};\n\t};\n\n\tresult.clear = () => {\n\t\tif (typeof self === 'undefined') {\n\t\t\treturn;\n\t\t}\n\t\tObject.getOwnPropertyNames(self).forEach(property => {\n\t\t\tif (property.indexOf(memoizeKeyPrefix) === 0) {\n\t\t\t\tdelete self[property];\n\t\t\t}\n\t\t});\n\t};\n\n\treturn result;\n}\n\nexport function memoize(target: any, key: string, descriptor: any) {\n\treturn createMemoizer()(target, key, descriptor);\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction } from 'vs/base/common/actions';\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n\tconstructor() {\n\t\tsuper(canceledName);\n\t\tthis.name = this.message;\n\t}\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class ExpectedError extends Error {\n\treadonly isExpected = true;\n}\n\nexport interface IErrorOptions {\n\tactions?: readonly IAction[];\n}\n\nexport interface IErrorWithActions {\n\tactions?: readonly IAction[];\n}\n\nexport function isErrorWithActions(obj: unknown): obj is IErrorWithActions {\n\tconst candidate = obj as IErrorWithActions | undefined;\n\n\treturn candidate instanceof Error && Array.isArray(candidate.actions);\n}\n\nexport function createErrorWithActions(message: string, options: IErrorOptions = Object.create(null)): Error & IErrorWithActions {\n\tconst result = new Error(message);\n\n\tif (options.actions) {\n\t\t(result as IErrorWithActions).actions = options.actions;\n\t}\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n\nexport function quickSelect<T>(nth: number, data: T[], compare: Compare<T>): T {\n\n\tnth = nth | 0;\n\n\tif (nth >= data.length) {\n\t\tthrow new TypeError('invalid index');\n\t}\n\n\tlet pivotValue = data[Math.floor(data.length * Math.random())];\n\tlet lower: T[] = [];\n\tlet higher: T[] = [];\n\tlet pivots: T[] = [];\n\n\tfor (let value of data) {\n\t\tconst val = compare(value, pivotValue);\n\t\tif (val < 0) {\n\t\t\tlower.push(value);\n\t\t} else if (val > 0) {\n\t\t\thigher.push(value);\n\t\t} else {\n\t\t\tpivots.push(value);\n\t\t}\n\t}\n\n\tif (nth < lower.length) {\n\t\treturn quickSelect(nth, lower, compare);\n\t} else if (nth < lower.length + pivots.length) {\n\t\treturn pivots[0];\n\t} else {\n\t\treturn quickSelect(nth - (lower.length + pivots.length), higher, compare);\n\t}\n}\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of data.slice(0).sort(compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[];\nexport function asArray<T>(x: T | readonly T[]): readonly T[];\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFind<T, R>(array: Iterable<T>, mapFn: (value: T) => R | undefined): R | undefined {\n\tfor (const value of array) {\n\t\tconst mapped = mapFn(value);\n\t\tif (mapped !== undefined) {\n\t\t\treturn mapped;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function isEmpty<T>(iterable: Iterable<T> | undefined | null): boolean {\n\t\treturn !iterable || iterable[Symbol.iterator]().next().done === true;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function find<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\texport function filter<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): Iterable<R>;\n\texport function filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T>;\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T) => R): Iterable<R> {\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* concatNested<T>(iterables: Iterable<Iterable<T>>): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function reduce<T, R>(iterable: Iterable<T>, reducer: (previousValue: R, currentValue: T) => R, initialValue: R): R {\n\t\tlet value = initialValue;\n\t\tfor (const element of iterable) {\n\t\t\tvalue = reducer(value, element);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n\t */\n\texport function* slice<T>(arr: ReadonlyArray<T>, from: number, to = arr.length): Iterable<T> {\n\t\tif (from < 0) {\n\t\t\tfrom += arr.length;\n\t\t}\n\n\t\tif (to < 0) {\n\t\t\tto += arr.length;\n\t\t} else if (to > arr.length) {\n\t\t\tto = arr.length;\n\t\t}\n\n\t\tfor (; from < to; from++) {\n\t\t\tyield arr[from];\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n\n\t/**\n\t * Returns whether the iterables are the same length and all items are\n\t * equal using the comparator function.\n\t */\n\texport function equals<T>(a: Iterable<T>, b: Iterable<T>, comparator = (at: T, bt: T) => at === bt) {\n\t\tconst ai = a[Symbol.iterator]();\n\t\tconst bi = b[Symbol.iterator]();\n\t\twhile (true) {\n\t\t\tconst an = ai.next();\n\t\t\tconst bn = bi.next();\n\n\t\t\tif (an.done !== bn.done) {\n\t\t\t\treturn false;\n\t\t\t} else if (an.done) {\n\t\t\t\treturn true;\n\t\t\t} else if (!comparator(an.value, bn.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequence of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n\tallowEmptyContent?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet hexValue = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\thexValue = -1;\n\t\t}\n\t\treturn hexValue;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst ch2 = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch2) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch3 = scanHexDigits(4);\n\t\t\t\t\t\tif (ch3 >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhitespace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhitespace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhitespace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhitespace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty !== null) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\tif (options.allowEmptyContent) {\n\t\t\treturn true;\n\t\t}\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function getNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tcase 'object': {\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\treturn 'object';\n\t\t}\n\t\tdefault: return 'null';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker: IDisposableTracker | null = null;\n\nexport interface IDisposableTracker {\n\ttrackDisposable(x: IDisposable): void;\n\tmarkTracked(x: IDisposable): void;\n}\n\nexport function setDisposableTracker(tracker: IDisposableTracker | null): void {\n\tdisposableTracker = tracker;\n}\n\nif (TRACK_DISPOSABLES) {\n\tconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\tdisposableTracker = new class implements IDisposableTracker {\n\t\ttrackDisposable(x: IDisposable): void {\n\t\t\tconst stack = new Error('Potentially leaked disposable').stack!;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\t\t\tconsole.log(stack);\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\tmarkTracked(x: IDisposable): void {\n\t\t\tif (x && x !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!disposableTracker) {\n\t\treturn;\n\t}\n\tdisposableTracker.markTracked(x);\n}\n\nexport function trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!disposableTracker) {\n\t\treturn x;\n\t}\n\tdisposableTracker.trackDisposable(x);\n\treturn x;\n}\n\nexport class MultiDisposeError extends Error {\n\tconstructor(\n\t\tpublic readonly errors: any[]\n\t) {\n\t\tsuper(`Encountered errors while disposing of store. Errors: [${errors.join(', ')}]`);\n\t}\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tlet errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new MultiDisposeError(errors);\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\tmarkTracked(arg);\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn toDisposable(() => dispose(disposables));\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\ttry {\n\t\t\tdispose(this._toDispose.values());\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._value?.dispose();\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tthis._value?.dispose();\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\n(function () {\n\n\t/**\n\t * @returns {{mark(name:string):void, getMarks():{name:string, startTime:number}[]}}\n\t */\n\tfunction _definePolyfillMarks(timeOrigin) {\n\n\t\tconst _data = [];\n\t\tif (typeof timeOrigin === 'number') {\n\t\t\t_data.push('code/timeOrigin', timeOrigin);\n\t\t}\n\n\t\tfunction mark(name) {\n\t\t\t_data.push(name, Date.now());\n\t\t}\n\t\tfunction getMarks() {\n\t\t\tconst result = [];\n\t\t\tfor (let i = 0; i < _data.length; i += 2) {\n\t\t\t\tresult.push({\n\t\t\t\t\tname: _data[i],\n\t\t\t\t\tstartTime: _data[i + 1],\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn { mark, getMarks };\n\t}\n\n\t/**\n\t * @returns {{mark(name:string):void, getMarks():{name:string, startTime:number}[]}}\n\t */\n\tfunction _define() {\n\n\t\tif (typeof performance === 'object' && typeof performance.mark === 'function') {\n\t\t\t// in a browser context, reuse performance-util\n\n\t\t\tif (typeof performance.timeOrigin !== 'number' && !performance.timing) {\n\t\t\t\t// safari & webworker: because there is no timeOrigin and no workaround\n\t\t\t\t// we use the `Date.now`-based polyfill.\n\t\t\t\treturn _definePolyfillMarks();\n\n\t\t\t} else {\n\t\t\t\t// use \"native\" performance for mark and getMarks\n\t\t\t\treturn {\n\t\t\t\t\tmark(name) {\n\t\t\t\t\t\tperformance.mark(name);\n\t\t\t\t\t},\n\t\t\t\t\tgetMarks() {\n\t\t\t\t\t\tlet timeOrigin = performance.timeOrigin;\n\t\t\t\t\t\tif (typeof timeOrigin !== 'number') {\n\t\t\t\t\t\t\t// safari: there is no timerOrigin but in renderers there is the timing-property\n\t\t\t\t\t\t\t// see https://bugs.webkit.org/show_bug.cgi?id=174862\n\t\t\t\t\t\t\ttimeOrigin = performance.timing.navigationStart || performance.timing.redirectStart || performance.timing.fetchStart;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst result = [{ name: 'code/timeOrigin', startTime: Math.round(timeOrigin) }];\n\t\t\t\t\t\tfor (const entry of performance.getEntriesByType('mark')) {\n\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\tname: entry.name,\n\t\t\t\t\t\t\t\tstartTime: Math.round(timeOrigin + entry.startTime)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t} else if (typeof process === 'object') {\n\t\t\t// node.js: use the normal polyfill but add the timeOrigin\n\t\t\t// from the node perf_hooks API as very first mark\n\t\t\tconst timeOrigin = Math.round((require.nodeRequire || require)('perf_hooks').performance.timeOrigin);\n\t\t\treturn _definePolyfillMarks(timeOrigin);\n\n\t\t} else {\n\t\t\t// unknown environment\n\t\t\tconsole.trace('perf-util loaded in UNKNOWN environment');\n\t\t\treturn _definePolyfillMarks();\n\t\t}\n\t}\n\n\tfunction _factory(sharedObj) {\n\t\tif (!sharedObj.MonacoPerformanceMarks) {\n\t\t\tsharedObj.MonacoPerformanceMarks = _define();\n\t\t}\n\t\treturn sharedObj.MonacoPerformanceMarks;\n\t}\n\n\t// This module can be loaded in an amd and commonjs-context.\n\t// Because we want both instances to use the same perf-data\n\t// we store them globally\n\n\t// eslint-disable-next-line no-var\n\tvar sharedObj;\n\tif (typeof global === 'object') {\n\t\t// nodejs\n\t\tsharedObj = global;\n\t} else if (typeof self === 'object') {\n\t\t// browser\n\t\tsharedObj = self;\n\t} else {\n\t\tsharedObj = {};\n\t}\n\n\tif (typeof define === 'function') {\n\t\t// amd\n\t\tdefine(\"vs/base/common/performance\", [], function () { return _factory(sharedObj); });\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t\t// commonjs\n\t\tmodule.exports = _factory(sharedObj);\n\t} else {\n\t\tconsole.trace('perf-util defined in UNKNOWN context (neither requirejs or commonjs)');\n\t\tsharedObj.perf = _factory(sharedObj);\n\t}\n\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string | undefined;\n}\n\n/**\n * This interface is intentionally not identical to node.js\n * process because it also works in sandboxed environments\n * where the process object is implemented differently. We\n * define the properties here that we need for `platform`\n * to work and nothing else.\n */\nexport interface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tnextTick?: (callback: (...args: any[]) => void) => void;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\tsandboxed?: boolean;\n\ttype?: string;\n\tcwd: () => string;\n}\n\ndeclare const process: INodeProcess;\ndeclare const global: unknown;\ndeclare const self: unknown;\n\nexport const globals: any = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof globals.vscode !== 'undefined') {\n\t// Native environment (sandboxed)\n\tnodeProcess = globals.vscode.process;\n} else if (typeof process !== 'undefined') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n}\n\nconst isElectronRenderer = typeof nodeProcess?.versions?.electron === 'string' && nodeProcess.type === 'renderer';\nexport const isElectronSandboxed = isElectronRenderer && nodeProcess?.sandboxed;\nexport const browserCodeLoadingCacheStrategy: 'none' | 'code' | 'bypassHeatCheck' | 'bypassHeatCheckAndEagerCompile' | undefined = (() => {\n\n\t// Always enabled when sandbox is enabled\n\tif (isElectronSandboxed) {\n\t\treturn 'bypassHeatCheck';\n\t}\n\n\t// Otherwise, only enabled conditionally\n\tconst env = nodeProcess?.env['VSCODE_BROWSER_CODE_LOADING'];\n\tif (typeof env === 'string') {\n\t\tif (env === 'none' || env === 'code' || env === 'bypassHeatCheck' || env === 'bypassHeatCheckAndEagerCompile') {\n\t\t\treturn env;\n\t\t}\n\n\t\treturn 'bypassHeatCheck';\n\t}\n\n\treturn undefined;\n})();\nexport const isPreferringBrowserCodeLoad = typeof browserCodeLoadingCacheStrategy === 'string';\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\n\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n}\n\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isLinuxSnap = _isLinuxSnap;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\ninterface ISetImmediate {\n\t(callback: (...args: unknown[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (typeof nodeProcess?.nextTick === 'function') {\n\t\treturn nodeProcess.nextTick.bind(nodeProcess);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: unknown[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, globals, INodeProcess } from 'vs/base/common/platform';\n\nlet safeProcess: INodeProcess & { nextTick: (callback: (...args: any[]) => void) => void; };\ndeclare const process: INodeProcess;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined') {\n\tconst sandboxProcess: INodeProcess = globals.vscode.process;\n\tsafeProcess = {\n\t\tget platform() { return sandboxProcess.platform; },\n\t\tget env() { return sandboxProcess.env; },\n\t\tcwd() { return sandboxProcess.cwd(); },\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); }\n\t};\n}\n\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n\tsafeProcess = {\n\t\tget platform() { return process.platform; },\n\t\tget env() { return process.env; },\n\t\tcwd() { return process.env['VSCODE_CWD'] || process.cwd(); },\n\t\tnextTick(callback: (...args: any[]) => void): void { return process.nextTick!(callback); }\n\t};\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); },\n\n\t\t// Unsupported\n\t\tget env() { return Object.create(null); },\n\t\tcwd() { return '/'; }\n\t};\n}\n\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n\n/**\n * Provides safe access to the `nextTick` method in node.js, sandboxed or web\n * environments.\n */\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: unknown) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\tlen > 2 &&\n\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisPathSeparator(path.charCodeAt(2));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\n/**\n * Options to be passed to the external program or shell.\n */\nexport interface CommandOptions {\n\t/**\n\t * The current working directory of the executed program or shell.\n\t * If omitted VSCode's current workspace root is used.\n\t */\n\tcwd?: string;\n\n\t/**\n\t * The environment of the executed program or shell. If omitted\n\t * the parent process' environment is used.\n\t */\n\tenv?: { [key: string]: string; };\n}\n\nexport interface Executable {\n\t/**\n\t * The command to be executed. Can be an external program or a shell\n\t * command.\n\t */\n\tcommand: string;\n\n\t/**\n\t * Specifies whether the command is a shell command and therefore must\n\t * be executed in a shell interpreter (e.g. cmd.exe, bash, ...).\n\t */\n\tisShellCommand: boolean;\n\n\t/**\n\t * The arguments passed to the command.\n\t */\n\targs: string[];\n\n\t/**\n\t * The command options used when the command is executed. Can be omitted.\n\t */\n\toptions?: CommandOptions;\n}\n\nexport interface ForkOptions extends CommandOptions {\n\texecArgv?: string[];\n}\n\nexport const enum Source {\n\tstdout,\n\tstderr\n}\n\n/**\n * The data send via a success callback\n */\nexport interface SuccessData {\n\terror?: Error;\n\tcmdCode?: number;\n\tterminated?: boolean;\n}\n\n/**\n * The data send via a error callback\n */\nexport interface ErrorData {\n\terror?: Error;\n\tterminated?: boolean;\n\tstdout?: string;\n\tstderr?: string;\n}\n\nexport interface TerminateResponse {\n\tsuccess: boolean;\n\tcode?: TerminateResponseCode;\n\terror?: any;\n}\n\nexport const enum TerminateResponseCode {\n\tSuccess = 0,\n\tUnknown = 1,\n\tAccessDenied = 2,\n\tProcessNotFound = 3,\n}\n\nexport interface ProcessItem {\n\tname: string;\n\tcmd: string;\n\tpid: number;\n\tppid: number;\n\tload: number;\n\tmem: number;\n\n\tchildren?: ProcessItem[];\n}\n\n/**\n * Sanitizes a VS Code process environment by removing all Electron/VS Code-related values.\n */\nexport function sanitizeProcessEnvironment(env: IProcessEnvironment, ...preserve: string[]): void {\n\tconst set = preserve.reduce((set, key) => {\n\t\tset[key] = true;\n\t\treturn set;\n\t}, {} as Record<string, boolean>);\n\tconst keysToRemove = [\n\t\t/^ELECTRON_.+$/,\n\t\t/^VSCODE_.+$/,\n\t\t/^SNAP(|_.*)$/,\n\t\t/^GDK_PIXBUF_.+$/,\n\t\t/^CODE_SERVER_.+$/,\n\t];\n\tconst envKeys = Object.keys(env);\n\tenvKeys\n\t\t.filter(key => !set[key])\n\t\t.forEach(envKey => {\n\t\t\tfor (let i = 0; i < keysToRemove.length; i++) {\n\t\t\t\tif (envKey.search(keysToRemove[i]) !== -1) {\n\t\t\t\t\tdelete env[envKey];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n}\n","/**\n * Semver UMD module\n * Copyright (c) Isaac Z. Schlueter and Contributors\n * https://github.com/npm/node-semver\n */\n\n/**\n * DO NOT EDIT THIS FILE\n */\n\n!function(e,r){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=r();else if(\"function\"==typeof define&&define.amd)define(\"vs/base/common/semver/semver\", [],r);else{var t=r();for(var n in t)(\"object\"==typeof exports?exports:e)[n]=t[n]}}(\"undefined\"!=typeof self?self:this,(function(){return function(e){var r={};function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&r&&\"string\"!=typeof e)for(var o in e)t.d(n,o,function(r){return e[r]}.bind(null,o));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,\"a\",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p=\"\",t(t.s=0)}([function(e,r,t){(function(t){var n;r=e.exports=H,n=\"object\"==typeof t&&t.env&&t.env.NODE_DEBUG&&/\\bsemver\\b/i.test(t.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:function(){},r.SEMVER_SPEC_VERSION=\"2.0.0\";var o=256,i=Number.MAX_SAFE_INTEGER||9007199254740991,s=r.re=[],a=r.src=[],u=0,c=u++;a[c]=\"0|[1-9]\\\\d*\";var p=u++;a[p]=\"[0-9]+\";var f=u++;a[f]=\"\\\\d*[a-zA-Z-][a-zA-Z0-9-]*\";var l=u++;a[l]=\"(\"+a[c]+\")\\\\.(\"+a[c]+\")\\\\.(\"+a[c]+\")\";var h=u++;a[h]=\"(\"+a[p]+\")\\\\.(\"+a[p]+\")\\\\.(\"+a[p]+\")\";var v=u++;a[v]=\"(?:\"+a[c]+\"|\"+a[f]+\")\";var m=u++;a[m]=\"(?:\"+a[p]+\"|\"+a[f]+\")\";var w=u++;a[w]=\"(?:-(\"+a[v]+\"(?:\\\\.\"+a[v]+\")*))\";var g=u++;a[g]=\"(?:-?(\"+a[m]+\"(?:\\\\.\"+a[m]+\")*))\";var y=u++;a[y]=\"[0-9A-Za-z-]+\";var d=u++;a[d]=\"(?:\\\\+(\"+a[y]+\"(?:\\\\.\"+a[y]+\")*))\";var b=u++,j=\"v?\"+a[l]+a[w]+\"?\"+a[d]+\"?\";a[b]=\"^\"+j+\"$\";var E=\"[v=\\\\s]*\"+a[h]+a[g]+\"?\"+a[d]+\"?\",T=u++;a[T]=\"^\"+E+\"$\";var x=u++;a[x]=\"((?:<|>)?=?)\";var $=u++;a[$]=a[p]+\"|x|X|\\\\*\";var k=u++;a[k]=a[c]+\"|x|X|\\\\*\";var S=u++;a[S]=\"[v=\\\\s]*(\"+a[k]+\")(?:\\\\.(\"+a[k]+\")(?:\\\\.(\"+a[k]+\")(?:\"+a[w]+\")?\"+a[d]+\"?)?)?\";var R=u++;a[R]=\"[v=\\\\s]*(\"+a[$]+\")(?:\\\\.(\"+a[$]+\")(?:\\\\.(\"+a[$]+\")(?:\"+a[g]+\")?\"+a[d]+\"?)?)?\";var I=u++;a[I]=\"^\"+a[x]+\"\\\\s*\"+a[S]+\"$\";var _=u++;a[_]=\"^\"+a[x]+\"\\\\s*\"+a[R]+\"$\";var O=u++;a[O]=\"(?:^|[^\\\\d])(\\\\d{1,16})(?:\\\\.(\\\\d{1,16}))?(?:\\\\.(\\\\d{1,16}))?(?:$|[^\\\\d])\";var A=u++;a[A]=\"(?:~>?)\";var M=u++;a[M]=\"(\\\\s*)\"+a[A]+\"\\\\s+\",s[M]=new RegExp(a[M],\"g\");var V=u++;a[V]=\"^\"+a[A]+a[S]+\"$\";var P=u++;a[P]=\"^\"+a[A]+a[R]+\"$\";var C=u++;a[C]=\"(?:\\\\^)\";var L=u++;a[L]=\"(\\\\s*)\"+a[C]+\"\\\\s+\",s[L]=new RegExp(a[L],\"g\");var N=u++;a[N]=\"^\"+a[C]+a[S]+\"$\";var q=u++;a[q]=\"^\"+a[C]+a[R]+\"$\";var D=u++;a[D]=\"^\"+a[x]+\"\\\\s*(\"+E+\")$|^$\";var X=u++;a[X]=\"^\"+a[x]+\"\\\\s*(\"+j+\")$|^$\";var z=u++;a[z]=\"(\\\\s*)\"+a[x]+\"\\\\s*(\"+E+\"|\"+a[S]+\")\",s[z]=new RegExp(a[z],\"g\");var G=u++;a[G]=\"^\\\\s*(\"+a[S]+\")\\\\s+-\\\\s+(\"+a[S]+\")\\\\s*$\";var Z=u++;a[Z]=\"^\\\\s*(\"+a[R]+\")\\\\s+-\\\\s+(\"+a[R]+\")\\\\s*$\";var B=u++;a[B]=\"(<|>)?=?\\\\s*\\\\*\";for(var U=0;U<35;U++)n(U,a[U]),s[U]||(s[U]=new RegExp(a[U]));function F(e,r){if(e instanceof H)return e;if(\"string\"!=typeof e)return null;if(e.length>o)return null;if(!(r?s[T]:s[b]).test(e))return null;try{return new H(e,r)}catch(e){return null}}function H(e,r){if(e instanceof H){if(e.loose===r)return e;e=e.version}else if(\"string\"!=typeof e)throw new TypeError(\"Invalid Version: \"+e);if(e.length>o)throw new TypeError(\"version is longer than \"+o+\" characters\");if(!(this instanceof H))return new H(e,r);n(\"SemVer\",e,r),this.loose=r;var t=e.trim().match(r?s[T]:s[b]);if(!t)throw new TypeError(\"Invalid Version: \"+e);if(this.raw=e,this.major=+t[1],this.minor=+t[2],this.patch=+t[3],this.major>i||this.major<0)throw new TypeError(\"Invalid major version\");if(this.minor>i||this.minor<0)throw new TypeError(\"Invalid minor version\");if(this.patch>i||this.patch<0)throw new TypeError(\"Invalid patch version\");t[4]?this.prerelease=t[4].split(\".\").map((function(e){if(/^[0-9]+$/.test(e)){var r=+e;if(r>=0&&r<i)return r}return e})):this.prerelease=[],this.build=t[5]?t[5].split(\".\"):[],this.format()}r.parse=F,r.valid=function(e,r){var t=F(e,r);return t?t.version:null},r.clean=function(e,r){var t=F(e.trim().replace(/^[=v]+/,\"\"),r);return t?t.version:null},r.SemVer=H,H.prototype.format=function(){return this.version=this.major+\".\"+this.minor+\".\"+this.patch,this.prerelease.length&&(this.version+=\"-\"+this.prerelease.join(\".\")),this.version},H.prototype.toString=function(){return this.version},H.prototype.compare=function(e){return n(\"SemVer.compare\",this.version,this.loose,e),e instanceof H||(e=new H(e,this.loose)),this.compareMain(e)||this.comparePre(e)},H.prototype.compareMain=function(e){return e instanceof H||(e=new H(e,this.loose)),K(this.major,e.major)||K(this.minor,e.minor)||K(this.patch,e.patch)},H.prototype.comparePre=function(e){if(e instanceof H||(e=new H(e,this.loose)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;var r=0;do{var t=this.prerelease[r],o=e.prerelease[r];if(n(\"prerelease compare\",r,t,o),void 0===t&&void 0===o)return 0;if(void 0===o)return 1;if(void 0===t)return-1;if(t!==o)return K(t,o)}while(++r)},H.prototype.inc=function(e,r){switch(e){case\"premajor\":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc(\"pre\",r);break;case\"preminor\":this.prerelease.length=0,this.patch=0,this.minor++,this.inc(\"pre\",r);break;case\"prepatch\":this.prerelease.length=0,this.inc(\"patch\",r),this.inc(\"pre\",r);break;case\"prerelease\":0===this.prerelease.length&&this.inc(\"patch\",r),this.inc(\"pre\",r);break;case\"major\":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case\"minor\":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case\"patch\":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case\"pre\":if(0===this.prerelease.length)this.prerelease=[0];else{for(var t=this.prerelease.length;--t>=0;)\"number\"==typeof this.prerelease[t]&&(this.prerelease[t]++,t=-2);-1===t&&this.prerelease.push(0)}r&&(this.prerelease[0]===r?isNaN(this.prerelease[1])&&(this.prerelease=[r,0]):this.prerelease=[r,0]);break;default:throw new Error(\"invalid increment argument: \"+e)}return this.format(),this.raw=this.version,this},r.inc=function(e,r,t,n){\"string\"==typeof t&&(n=t,t=void 0);try{return new H(e,t).inc(r,n).version}catch(e){return null}},r.diff=function(e,r){if(ee(e,r))return null;var t=F(e),n=F(r);if(t.prerelease.length||n.prerelease.length){for(var o in t)if((\"major\"===o||\"minor\"===o||\"patch\"===o)&&t[o]!==n[o])return\"pre\"+o;return\"prerelease\"}for(var o in t)if((\"major\"===o||\"minor\"===o||\"patch\"===o)&&t[o]!==n[o])return o},r.compareIdentifiers=K;var J=/^[0-9]+$/;function K(e,r){var t=J.test(e),n=J.test(r);return t&&n&&(e=+e,r=+r),t&&!n?-1:n&&!t?1:e<r?-1:e>r?1:0}function Q(e,r,t){return new H(e,t).compare(new H(r,t))}function W(e,r,t){return Q(e,r,t)>0}function Y(e,r,t){return Q(e,r,t)<0}function ee(e,r,t){return 0===Q(e,r,t)}function re(e,r,t){return 0!==Q(e,r,t)}function te(e,r,t){return Q(e,r,t)>=0}function ne(e,r,t){return Q(e,r,t)<=0}function oe(e,r,t,n){var o;switch(r){case\"===\":\"object\"==typeof e&&(e=e.version),\"object\"==typeof t&&(t=t.version),o=e===t;break;case\"!==\":\"object\"==typeof e&&(e=e.version),\"object\"==typeof t&&(t=t.version),o=e!==t;break;case\"\":case\"=\":case\"==\":o=ee(e,t,n);break;case\"!=\":o=re(e,t,n);break;case\">\":o=W(e,t,n);break;case\">=\":o=te(e,t,n);break;case\"<\":o=Y(e,t,n);break;case\"<=\":o=ne(e,t,n);break;default:throw new TypeError(\"Invalid operator: \"+r)}return o}function ie(e,r){if(e instanceof ie){if(e.loose===r)return e;e=e.value}if(!(this instanceof ie))return new ie(e,r);n(\"comparator\",e,r),this.loose=r,this.parse(e),this.semver===se?this.value=\"\":this.value=this.operator+this.semver.version,n(\"comp\",this)}r.rcompareIdentifiers=function(e,r){return K(r,e)},r.major=function(e,r){return new H(e,r).major},r.minor=function(e,r){return new H(e,r).minor},r.patch=function(e,r){return new H(e,r).patch},r.compare=Q,r.compareLoose=function(e,r){return Q(e,r,!0)},r.rcompare=function(e,r,t){return Q(r,e,t)},r.sort=function(e,t){return e.sort((function(e,n){return r.compare(e,n,t)}))},r.rsort=function(e,t){return e.sort((function(e,n){return r.rcompare(e,n,t)}))},r.gt=W,r.lt=Y,r.eq=ee,r.neq=re,r.gte=te,r.lte=ne,r.cmp=oe,r.Comparator=ie;var se={};function ae(e,r){if(e instanceof ae)return e.loose===r?e:new ae(e.raw,r);if(e instanceof ie)return new ae(e.value,r);if(!(this instanceof ae))return new ae(e,r);if(this.loose=r,this.raw=e,this.set=e.split(/\\s*\\|\\|\\s*/).map((function(e){return this.parseRange(e.trim())}),this).filter((function(e){return e.length})),!this.set.length)throw new TypeError(\"Invalid SemVer Range: \"+e);this.format()}function ue(e){return!e||\"x\"===e.toLowerCase()||\"*\"===e}function ce(e,r,t,n,o,i,s,a,u,c,p,f,l){return((r=ue(t)?\"\":ue(n)?\">=\"+t+\".0.0\":ue(o)?\">=\"+t+\".\"+n+\".0\":\">=\"+r)+\" \"+(a=ue(u)?\"\":ue(c)?\"<\"+(+u+1)+\".0.0\":ue(p)?\"<\"+u+\".\"+(+c+1)+\".0\":f?\"<=\"+u+\".\"+c+\".\"+p+\"-\"+f:\"<=\"+a)).trim()}function pe(e,r){for(var t=0;t<e.length;t++)if(!e[t].test(r))return!1;if(r.prerelease.length){for(t=0;t<e.length;t++)if(n(e[t].semver),e[t].semver!==se&&e[t].semver.prerelease.length>0){var o=e[t].semver;if(o.major===r.major&&o.minor===r.minor&&o.patch===r.patch)return!0}return!1}return!0}function fe(e,r,t){try{r=new ae(r,t)}catch(e){return!1}return r.test(e)}function le(e,r,t,n){var o,i,s,a,u;switch(e=new H(e,n),r=new ae(r,n),t){case\">\":o=W,i=ne,s=Y,a=\">\",u=\">=\";break;case\"<\":o=Y,i=te,s=W,a=\"<\",u=\"<=\";break;default:throw new TypeError('Must provide a hilo val of \"<\" or \">\"')}if(fe(e,r,n))return!1;for(var c=0;c<r.set.length;++c){var p=r.set[c],f=null,l=null;if(p.forEach((function(e){e.semver===se&&(e=new ie(\">=0.0.0\")),f=f||e,l=l||e,o(e.semver,f.semver,n)?f=e:s(e.semver,l.semver,n)&&(l=e)})),f.operator===a||f.operator===u)return!1;if((!l.operator||l.operator===a)&&i(e,l.semver))return!1;if(l.operator===u&&s(e,l.semver))return!1}return!0}ie.prototype.parse=function(e){var r=this.loose?s[D]:s[X],t=e.match(r);if(!t)throw new TypeError(\"Invalid comparator: \"+e);this.operator=t[1],\"=\"===this.operator&&(this.operator=\"\"),t[2]?this.semver=new H(t[2],this.loose):this.semver=se},ie.prototype.toString=function(){return this.value},ie.prototype.test=function(e){return n(\"Comparator.test\",e,this.loose),this.semver===se||(\"string\"==typeof e&&(e=new H(e,this.loose)),oe(e,this.operator,this.semver,this.loose))},ie.prototype.intersects=function(e,r){if(!(e instanceof ie))throw new TypeError(\"a Comparator is required\");var t;if(\"\"===this.operator)return t=new ae(e.value,r),fe(this.value,t,r);if(\"\"===e.operator)return t=new ae(this.value,r),fe(e.semver,t,r);var n=!(\">=\"!==this.operator&&\">\"!==this.operator||\">=\"!==e.operator&&\">\"!==e.operator),o=!(\"<=\"!==this.operator&&\"<\"!==this.operator||\"<=\"!==e.operator&&\"<\"!==e.operator),i=this.semver.version===e.semver.version,s=!(\">=\"!==this.operator&&\"<=\"!==this.operator||\">=\"!==e.operator&&\"<=\"!==e.operator),a=oe(this.semver,\"<\",e.semver,r)&&(\">=\"===this.operator||\">\"===this.operator)&&(\"<=\"===e.operator||\"<\"===e.operator),u=oe(this.semver,\">\",e.semver,r)&&(\"<=\"===this.operator||\"<\"===this.operator)&&(\">=\"===e.operator||\">\"===e.operator);return n||o||i&&s||a||u},r.Range=ae,ae.prototype.format=function(){return this.range=this.set.map((function(e){return e.join(\" \").trim()})).join(\"||\").trim(),this.range},ae.prototype.toString=function(){return this.range},ae.prototype.parseRange=function(e){var r=this.loose;e=e.trim(),n(\"range\",e,r);var t=r?s[Z]:s[G];e=e.replace(t,ce),n(\"hyphen replace\",e),e=e.replace(s[z],\"$1$2$3\"),n(\"comparator trim\",e,s[z]),e=(e=(e=e.replace(s[M],\"$1~\")).replace(s[L],\"$1^\")).split(/\\s+/).join(\" \");var o=r?s[D]:s[X],i=e.split(\" \").map((function(e){return function(e,r){return n(\"comp\",e),e=function(e,r){return e.trim().split(/\\s+/).map((function(e){return function(e,r){n(\"caret\",e,r);var t=r?s[q]:s[N];return e.replace(t,(function(r,t,o,i,s){var a;return n(\"caret\",e,r,t,o,i,s),ue(t)?a=\"\":ue(o)?a=\">=\"+t+\".0.0 <\"+(+t+1)+\".0.0\":ue(i)?a=\"0\"===t?\">=\"+t+\".\"+o+\".0 <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".0 <\"+(+t+1)+\".0.0\":s?(n(\"replaceCaret pr\",s),\"-\"!==s.charAt(0)&&(s=\"-\"+s),a=\"0\"===t?\"0\"===o?\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+o+\".\"+(+i+1):\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+(+t+1)+\".0.0\"):(n(\"no pr\"),a=\"0\"===t?\"0\"===o?\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+o+\".\"+(+i+1):\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".\"+i+\" <\"+(+t+1)+\".0.0\"),n(\"caret return\",a),a}))}(e,r)})).join(\" \")}(e,r),n(\"caret\",e),e=function(e,r){return e.trim().split(/\\s+/).map((function(e){return function(e,r){var t=r?s[P]:s[V];return e.replace(t,(function(r,t,o,i,s){var a;return n(\"tilde\",e,r,t,o,i,s),ue(t)?a=\"\":ue(o)?a=\">=\"+t+\".0.0 <\"+(+t+1)+\".0.0\":ue(i)?a=\">=\"+t+\".\"+o+\".0 <\"+t+\".\"+(+o+1)+\".0\":s?(n(\"replaceTilde pr\",s),\"-\"!==s.charAt(0)&&(s=\"-\"+s),a=\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+(+o+1)+\".0\"):a=\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+(+o+1)+\".0\",n(\"tilde return\",a),a}))}(e,r)})).join(\" \")}(e,r),n(\"tildes\",e),e=function(e,r){return n(\"replaceXRanges\",e,r),e.split(/\\s+/).map((function(e){return function(e,r){e=e.trim();var t=r?s[_]:s[I];return e.replace(t,(function(r,t,o,i,s,a){n(\"xRange\",e,r,t,o,i,s,a);var u=ue(o),c=u||ue(i),p=c||ue(s);return\"=\"===t&&p&&(t=\"\"),u?r=\">\"===t||\"<\"===t?\"<0.0.0\":\"*\":t&&p?(c&&(i=0),p&&(s=0),\">\"===t?(t=\">=\",c?(o=+o+1,i=0,s=0):p&&(i=+i+1,s=0)):\"<=\"===t&&(t=\"<\",c?o=+o+1:i=+i+1),r=t+o+\".\"+i+\".\"+s):c?r=\">=\"+o+\".0.0 <\"+(+o+1)+\".0.0\":p&&(r=\">=\"+o+\".\"+i+\".0 <\"+o+\".\"+(+i+1)+\".0\"),n(\"xRange return\",r),r}))}(e,r)})).join(\" \")}(e,r),n(\"xrange\",e),e=function(e,r){return n(\"replaceStars\",e,r),e.trim().replace(s[B],\"\")}(e,r),n(\"stars\",e),e}(e,r)})).join(\" \").split(/\\s+/);return this.loose&&(i=i.filter((function(e){return!!e.match(o)}))),i=i.map((function(e){return new ie(e,r)}))},ae.prototype.intersects=function(e,r){if(!(e instanceof ae))throw new TypeError(\"a Range is required\");return this.set.some((function(t){return t.every((function(t){return e.set.some((function(e){return e.every((function(e){return t.intersects(e,r)}))}))}))}))},r.toComparators=function(e,r){return new ae(e,r).set.map((function(e){return e.map((function(e){return e.value})).join(\" \").trim().split(\" \")}))},ae.prototype.test=function(e){if(!e)return!1;\"string\"==typeof e&&(e=new H(e,this.loose));for(var r=0;r<this.set.length;r++)if(pe(this.set[r],e))return!0;return!1},r.satisfies=fe,r.maxSatisfying=function(e,r,t){var n=null,o=null;try{var i=new ae(r,t)}catch(e){return null}return e.forEach((function(e){i.test(e)&&(n&&-1!==o.compare(e)||(o=new H(n=e,t)))})),n},r.minSatisfying=function(e,r,t){var n=null,o=null;try{var i=new ae(r,t)}catch(e){return null}return e.forEach((function(e){i.test(e)&&(n&&1!==o.compare(e)||(o=new H(n=e,t)))})),n},r.validRange=function(e,r){try{return new ae(e,r).range||\"*\"}catch(e){return null}},r.ltr=function(e,r,t){return le(e,r,\"<\",t)},r.gtr=function(e,r,t){return le(e,r,\">\",t)},r.outside=le,r.prerelease=function(e,r){var t=F(e,r);return t&&t.prerelease.length?t.prerelease:null},r.intersects=function(e,r,t){return e=new ae(e,t),r=new ae(r,t),e.intersects(r)},r.coerce=function(e){if(e instanceof H)return e;if(\"string\"!=typeof e)return null;var r=e.match(s[O]);return null==r?null:F((r[1]||\"0\")+\".\"+(r[2]||\"0\")+\".\"+(r[3]||\"0\"))}}).call(this,t(1))},function(e,r){var t,n,o=e.exports={};function i(){throw new Error(\"setTimeout has not been defined\")}function s(){throw new Error(\"clearTimeout has not been defined\")}function a(e){if(t===setTimeout)return setTimeout(e,0);if((t===i||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(r){try{return t.call(null,e,0)}catch(r){return t.call(this,e,0)}}}!function(){try{t=\"function\"==typeof setTimeout?setTimeout:i}catch(e){t=i}try{n=\"function\"==typeof clearTimeout?clearTimeout:s}catch(e){n=s}}();var u,c=[],p=!1,f=-1;function l(){p&&u&&(p=!1,u.length?c=u.concat(c):f=-1,c.length&&h())}function h(){if(!p){var e=a(l);p=!0;for(var r=c.length;r;){for(u=c,c=[];++f<r;)u&&u[f].run();f=-1,r=c.length}u=null,p=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===s||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(r){try{return n.call(null,e)}catch(r){return n.call(this,e)}}}(e)}}function v(e,r){this.fun=e,this.array=r}function m(){}o.nextTick=function(e){var r=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)r[t-1]=arguments[t];c.push(new v(e,r)),1!==c.length||p||a(h)},v.prototype.run=function(){this.fun.apply(null,this.array)},o.title=\"browser\",o.browser=!0,o.env={},o.argv=[],o.version=\"\",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error(\"process.binding is not supported\")},o.cwd=function(){return\"/\"},o.chdir=function(e){throw new Error(\"process.chdir is not supported\")},o.umask=function(){return 0}}])}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals } from 'vs/base/common/platform';\n\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\n\nexport class StopWatch {\n\n\tprivate _highResolution: boolean;\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tpublic static create(highResolution: boolean = true): StopWatch {\n\t\treturn new StopWatch(highResolution);\n\t}\n\n\tconstructor(highResolution: boolean) {\n\t\tthis._highResolution = hasPerformanceNow && highResolution;\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = this._now();\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn this._now() - this._startTime;\n\t}\n\n\tprivate _now(): number {\n\t\treturn this._highResolution ? globals.performance.now() : Date.now();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { StopWatch } from 'vs/base/common/stopwatch';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(resolve => once(event)(resolve));\n\t}\n}\n\nexport type Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n\n\t/** ONLY enable this during development */\n\t_profName?: string\n}\n\n\nclass EventProfiling {\n\n\tprivate static _idPool = 0;\n\n\tprivate _name: string;\n\tprivate _stopWatch?: StopWatch;\n\tprivate _listenerCount: number = 0;\n\tprivate _invocationCount = 0;\n\tprivate _elapsedOverall = 0;\n\n\tconstructor(name: string) {\n\t\tthis._name = `${name}_${EventProfiling._idPool++}`;\n\t}\n\n\tstart(listenerCount: number): void {\n\t\tthis._stopWatch = new StopWatch(true);\n\t\tthis._listenerCount = listenerCount;\n\t}\n\n\tstop(): void {\n\t\tif (this._stopWatch) {\n\t\t\tconst elapsed = this._stopWatch.elapsed();\n\t\t\tthis._elapsedOverall += elapsed;\n\t\t\tthis._invocationCount += 1;\n\n\t\t\tconsole.info(`did FIRE ${this._name}: elapsed_ms: ${elapsed.toFixed(5)}, listener: ${this._listenerCount} (elapsed_overall: ${this._elapsedOverall.toFixed(2)}, invocations: ${this._invocationCount})`);\n\t\t\tthis._stopWatch = undefined;\n\t\t}\n\t}\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate readonly _perfMon?: EventProfiling;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n\t\tthis._perfMon = this._options?._profName ? new EventProfiling(this._options._profName) : undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tconst removeMonitor = this._leakageMon?.check(this._listeners.size);\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\t// start/stop performance insight collection\n\t\t\tthis._perfMon?.start(this._deliveryQueue.size);\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._perfMon?.stop();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._listeners?.clear();\n\t\tthis._deliveryQueue?.clear();\n\t\tthis._leakageMon?.dispose();\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = Array.from(this._eventQueue);\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t *\n\t * NOTE: PLEASE UNDERSTAND THAT ADDING A DATA LISTENER CAN\n\t * TURN THE STREAM INTO FLOWING MODE. IT IS THEREFOR THE\n\t * LAST LISTENER THAT SHOULD BE ADDED AND NOT THE FIRST\n\t *\n\t * Use `listenStream` as a helper method to listen to\n\t * stream events in the right order.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t *\n\t * NOTE: call `end` to signal that the stream has ended,\n\t * this DOES NOT happen automatically from `error`.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is provided, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t */\n\tend(result?: T): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitData(data);\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitError(error);\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data if provided\n\t\tif (typeof result !== 'undefined') {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitEnd();\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\tprivate emitData(data: T): void {\n\t\tthis.listeners.data.slice(0).forEach(listener => listener(data)); // slice to avoid listener mutation from delivering event\n\t}\n\n\tprivate emitError(error: Error): void {\n\t\tif (this.listeners.error.length === 0) {\n\t\t\tonUnexpectedError(error); // nobody listened to this error so we log it as unexpected\n\t\t} else {\n\t\t\tthis.listeners.error.slice(0).forEach(listener => listener(error)); // slice to avoid listener mutation from delivering event\n\t\t}\n\t}\n\n\tprivate emitEnd(): void {\n\t\tthis.listeners.end.slice(0).forEach(listener => listener()); // slice to avoid listener mutation from delivering event\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.emitData(fullDataBuffer);\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.emitError(error);\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.emitEnd();\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T or consuming\n * a stream fully, awaiting all the events without caring\n * about the data.\n */\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T>): Promise<T>;\nexport function consumeStream(stream: ReadableStreamEvents<unknown>): Promise<undefined>;\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer?: IReducer<T>): Promise<T | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlistenStream(stream, {\n\t\t\tonData: chunk => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: error => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tresolve(reducer(chunks));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IStreamListener<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\tonData(data: T): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\tonError(err: Error): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\tonEnd(): void;\n}\n\n/**\n * Helper to listen to all events of a T stream in proper order.\n */\nexport function listenStream<T>(stream: ReadableStreamEvents<T>, listener: IStreamListener<T>): void {\n\tstream.on('error', error => listener.onError(error));\n\tstream.on('end', () => listener.onEnd());\n\n\t// Adding the `data` listener will turn the stream\n\t// into flowing mode. As such it is important to\n\t// add this listener last (DO NOT CHANGE!)\n\tstream.on('data', data => listener.onData(data));\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\t\tconst buffer: T[] = [];\n\n\t\t// Data Listener\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\t// End Listener\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\n\t\t// Important: leave the `data` listener last because\n\t\t// this can turn the stream into flowing mode and we\n\t\t// want `error` events to be received as well.\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to create an empty stream\n */\nexport function emptyStream(): ReadableStream<never> {\n\tconst stream = newWriteableStream<never>(() => { throw new Error('not supported'); });\n\tstream.end();\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => target.write(transformer.data(data)),\n\t\tonError: error => target.error(transformer.error ? transformer.error(error) : error),\n\t\tonEnd: () => target.end()\n\t});\n\n\treturn target;\n}\n\n/**\n * Helper to take an existing readable that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedReadable<T>(prefix: T, readable: Readable<T>, reducer: IReducer<T>): Readable<T> {\n\tlet prefixHandled = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tconst chunk = readable.read();\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\t// If we have also a read-result, make\n\t\t\t\t// sure to reduce it to a single result\n\t\t\t\tif (chunk !== null) {\n\t\t\t\t\treturn reducer([prefix, chunk]);\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, just return prefix directly\n\t\t\t\treturn prefix;\n\t\t\t}\n\n\t\t\treturn chunk;\n\t\t}\n\t};\n}\n\n/**\n * Helper to take an existing stream that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedStream<T>(prefix: T, stream: ReadableStream<T>, reducer: IReducer<T>): ReadableStream<T> {\n\tlet prefixHandled = false;\n\n\tconst target = newWriteableStream<T>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\treturn target.write(reducer([prefix, data]));\n\t\t\t}\n\n\t\t\treturn target.write(data);\n\t\t},\n\t\tonError: error => target.error(error),\n\t\tonEnd: () => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\ttarget.write(prefix);\n\t\t\t}\n\n\t\t\ttarget.end();\n\t\t}\n\t});\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Counts how often `character` occurs inside `value`.\n */\nexport function count(value: string, character: string): number {\n\tlet result = 0;\n\tconst ch = character.charCodeAt(0);\n\tfor (let i = value.length - 1; i >= 0; i--) {\n\t\tif (value.charCodeAt(i) === ch) {\n\t\t\tresult++;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function truncate(value: string, maxLength: number, suffix = '…'): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\treturn `${value.substr(0, maxLength)}${suffix}`;\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\nexport function splitLines(str: string): string[] {\n\treturn str.split(/\\r\\n|\\r|\\n/);\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\n\t\t\tcontinue;\n\n\t\t} else if (diff === -32 && isUpperAsciiLetter(codeA)) {  //codeB =[97-122] && codeA =[65-90]\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDED6])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n\t\t|| (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n\t\t|| (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n\t\t|| (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129750)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\tif (idx === -1) {\n\t\treturn str;\n\t}\n\n\tif (str[idx - 1] === '\\r') {\n\t\tidx--;\n\t}\n\n\treturn str.substr(0, idx);\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexdima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string, options?: { dontUseNodeBuffer?: boolean; }): VSBuffer {\n\t\tconst dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n\t\tif (!dontUseNodeBuffer && hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else {\n\t\t\tthis.buffer.set(array, offset);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n\nexport function prefixedBufferReadable(prefix: VSBuffer, readable: VSBufferReadable): VSBufferReadable {\n\treturn streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function prefixedBufferStream(prefix: VSBuffer, stream: VSBufferReadableStream): VSBufferReadableStream {\n\treturn streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tconst _error = 'error';\n\tconst _warning = 'warning';\n\tconst _warn = 'warn';\n\tconst _info = 'info';\n\tconst _ignore = 'ignore';\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\t\treturn Severity.Ignore;\n\t}\n\n\texport function toString(severity: Severity): string {\n\t\tswitch (severity) {\n\t\t\tcase Severity.Error: return _error;\n\t\t\tcase Severity.Warning: return _warning;\n\t\t\tcase Severity.Info: return _info;\n\t\t\tdefault: return _ignore;\n\t\t}\n\t}\n}\n\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: unknown): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: unknown): value is string[] {\n\treturn Array.isArray(value) && (<unknown[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: unknown): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: unknown): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable<T>(obj: unknown): obj is Iterable<T> {\n\treturn !!obj && typeof (obj as any)[Symbol.iterator] === 'function';\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: unknown): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: unknown): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: unknown): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: unknown, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: unknown): obj is object {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: unknown): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: unknown[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: unknown[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: unknown, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && (arg as any).constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: unknown[]) => unknown): T {\n\tconst createProxyMethod = (method: string): () => unknown => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\ntype AddFirstParameterToFunction<T, TargetFunctionsReturnType, FirstParameter> = T extends (...args: any[]) => TargetFunctionsReturnType ?\n\t// Function: add param to function\n\t(firstArg: FirstParameter, ...args: Parameters<T>) => ReturnType<T> :\n\n\t// Else: just leave as is\n\tT;\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\t// For every property\n\t[K in keyof Target]: AddFirstParameterToFunction<Target[K], TargetFunctionsReturnType, FirstParameter>;\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n */\nexport type Dto<T> = T extends { toJSON(): infer U }\n\t? U\n\t: T extends object\n\t? { [k in keyof T]: Dto<T[k]>; }\n\t: T;\n\nexport function NotImplementedProxy<T>(name: string): { new(): T } {\n\treturn <any>class {\n\t\tconstructor() {\n\t\t\treturn new Proxy({}, {\n\t\t\t\tget(target: any, prop: PropertyKey) {\n\t\t\t\t\tif (target[prop]) {\n\t\t\t\t\t\treturn target[prop];\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Not Implemented: ${name}->${String(prop)}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function assertNever(value: never) {\n\tthrow new Error('Unreachable');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string): boolean {\n\tif (isWindows) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string): string | undefined {\n\treturn hasDriveLetter(path) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tsegments.forEach(segment => {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t});\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen = new Set<any>();\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.has(value)) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n\nexport function getCaseInsensitive(target: obj, key: string): any {\n\tconst lowercaseKey = key.toLowerCase();\n\tconst equivalentKey = Object.keys(target).find(k => k.toLowerCase() === lowercaseKey);\n\treturn equivalentKey ? target[equivalentKey] : target[key];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as paths from 'vs/base/common/path';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'string'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPath on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatibile with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\toverride get fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\toverride toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\toverride toJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compareSubstringIgnoreCase, compare, compareSubstring, compareIgnoreCase } from 'vs/base/common/strings';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class ConfigKeysIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Period) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\tconstructor(private readonly _ignorePathCasing: (uri: URI) => boolean) { }\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\tthis._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (this._value.query) {\n\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t}\n\t\tif (this._value.fragment) {\n\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey!: K;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(ignorePathCasing: (key: URI) => boolean = () => false): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator(ignorePathCasing));\n\t}\n\n\tstatic forPaths<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tstatic forConfigKeys<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new ConfigKeysIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._getNode(key)?.value;\n\t}\n\n\tprivate _getNode(key: K) {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\thas(key: K): boolean {\n\t\tconst node = this._getNode(key);\n\t\treturn !(node?.value === undefined && node?.mid === undefined);\n\t}\n\n\tdelete(key: K): void {\n\t\treturn this._delete(key, false);\n\t}\n\n\tdeleteSuperstr(key: K): void {\n\t\treturn this._delete(key, true);\n\t}\n\n\tprivate _delete(key: K, superStr: boolean): void {\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tif (superStr) {\n\t\t\t\t\t// remove children\n\t\t\t\t\tnode.left = undefined;\n\t\t\t\t\tnode.mid = undefined;\n\t\t\t\t\tnode.right = undefined;\n\t\t\t\t} else {\n\t\t\t\t\t// remove element\n\t\t\t\t\tnode.value = undefined;\n\t\t\t\t}\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): IterableIterator<[K, V]> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._entries(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tforEach(callback: (value: V, index: K) => any): void {\n\t\tfor (const [key, value] of this) {\n\t\t\tcallback(value, key);\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\tyield* this._entries(this._root);\n\t}\n\n\tprivate *_entries(node: TernarySearchTreeNode<K, V> | undefined): IterableIterator<[K, V]> {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tyield* this._entries(node.left);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tyield [node.key, node.value];\n\t\t\t}\n\t\t\t// mid\n\t\t\tyield* this._entries(node.mid);\n\n\t\t\t// right\n\t\t\tyield* this._entries(node.right);\n\t\t}\n\t}\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, T>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), value);\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (let [index, value] of this.map) {\n\t\t\tclb(value, URI.parse(index), <any>this);\n\t\t}\n\t}\n\n\tvalues(): IterableIterator<T> {\n\t\treturn this.map.values();\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (let key of this.map.keys()) {\n\t\t\tyield URI.parse(key);\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (let tuple of this.map.entries()) {\n\t\t\tyield [URI.parse(tuple[0]), tuple[1]];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (let item of this.map) {\n\t\t\tyield [URI.parse(item[0]), item[1]];\n\t\t}\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\toverride get(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n\n/**\n * Wraps the map in type that only implements readonly properties. Useful\n * in the extension host to prevent the consumer from making any mutations.\n */\nexport class ReadonlyMapView<K, V> implements ReadonlyMap<K, V>{\n\treadonly #source: ReadonlyMap<K, V>;\n\n\tpublic get size() {\n\t\treturn this.#source.size;\n\t}\n\n\tconstructor(source: ReadonlyMap<K, V>) {\n\t\tthis.#source = source;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: ReadonlyMap<K, V>) => void, thisArg?: any): void {\n\t\tthis.#source.forEach(callbackfn, thisArg);\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this.#source.get(key);\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this.#source.has(key);\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\treturn this.#source.entries();\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\treturn this.#source.keys();\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\treturn this.#source.values();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.#source.entries();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { regExpFlags } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: number;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: 2,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\n\ntype Deserialize<T> = T extends UriComponents ? URI\n\t: T extends object\n\t? Revived<T>\n\t: T;\n\nexport type Revived<T> = { [K in keyof T]: Deserialize<T[K]> };\n\nexport function revive<T = any>(obj: any, depth = 0): Revived<T> {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase 1: return <any>URI.revive(obj);\n\t\t\tcase 2: return <any>new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\tif (\n\t\t\tobj instanceof VSBuffer\n\t\t\t|| obj instanceof Uint8Array\n\t\t) {\n\t\t\treturn <any>obj;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tfor (let i = 0; i < obj.length; ++i) {\n\t\t\t\tobj[i] = revive(obj[i], depth + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// walk object\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebook = 'vscode-notebook';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nclass FileAccessImpl {\n\n\tprivate readonly FALLBACK_AUTHORITY = 'vscode-app';\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(uri: URI): URI;\n\tasBrowserUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }, __forceCodeFileUri?: boolean): URI;\n\tasBrowserUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }, __forceCodeFileUri?: boolean): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Only convert the URI if we are in a native context and it has `file:` scheme\n\t\t// and we have explicitly enabled the conversion (sandbox, or VSCODE_BROWSER_CODE_LOADING)\n\t\tif (platform.isNative && (__forceCodeFileUri || platform.isPreferringBrowserCodeLoad) && uri.scheme === Schemas.file) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || this.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(uri: URI): URI;\n\tasFileUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasFileUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== this.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof (String.prototype as any /* standalone editor compilation */).normalize === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (!canNormalize) {\n\t\t// no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn normalizeNFD(str).replace(regex, '');\n\t\t};\n\t}\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\nimport { equalsIgnoreCase, compare as strCompare } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see ResourceMap\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\t\tpath = extpath.toSlashes(path);\n\t\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\t\tpath = '/' + path;\n\t\t\t}\n\t\t}\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string, a2: string) {\n\t\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { canceled, onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event, Listener } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { extUri as defaultExtUri, IExtUri } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as unknown as Promise<T>).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn Promise.race([promise, new Promise<T | undefined>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\n/**\n * Returns as soon as one of the promises is resolved and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\tconst result = await Promise.race(promises);\n\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\tif (index !== resolvedPromiseIndex) {\n\t\t\tcancellablePromise.cancel();\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(resolve => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(resolve);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.queuedPromise!.then(resolve, reject);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: T) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: unknown) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<unknown> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask(), () => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<unknown>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((resolve, reject) => {\n\t\t\t\tthis.doResolve = resolve;\n\t\t\t\tthis.doReject = reject;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as unknown as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently after a certain period of\n * time or when open is called explicitly\n */\nexport class AutoOpenBarrier extends Barrier {\n\n\tprivate readonly _timeout: any;\n\n\tconstructor(autoOpenTimeMs: number) {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n\t}\n\n\toverride open(): void {\n\t\tclearTimeout(this._timeout);\n\t\tsuper.open();\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: unknown) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI, extUri: IExtUri = defaultExtUri): Queue<void> {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\tlet queue = this.queues.get(key);\n\t\tif (!queue) {\n\t\t\tqueue = new Queue<void>();\n\t\t\tEvent.once(queue.onFinished)(() => {\n\t\t\t\tqueue?.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn queue;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: unknown[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected override doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: unknown;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number) { }\n\n\tincrement(): number {\n\t\tconst now = Date.now();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise<T> {\n\n\tprivate completeCallback!: ValueCallback<T>;\n\tprivate errorCallback!: (err: unknown) => void;\n\tprivate rejected = false;\n\tprivate resolved = false;\n\n\tpublic get isRejected() {\n\t\treturn this.rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn this.rejected || this.resolved;\n\t}\n\n\tpublic p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.completeCallback = c;\n\t\t\tthis.errorCallback = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.completeCallback(value);\n\t\t\tthis.resolved = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.errorCallback(err);\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic cancel() {\n\t\tnew Promise<void>(resolve => {\n\t\t\tthis.errorCallback(canceled());\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<unknown>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<unknown>, listener: Function) => Promise<unknown>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<unknown>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<unknown>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promises.settled(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\n//#endregion\n\n//#region Promises\n\nexport namespace Promises {\n\n\texport interface IResolvedPromise<T> {\n\t\tstatus: 'fulfilled';\n\t\tvalue: T;\n\t}\n\n\texport interface IRejectedPromise {\n\t\tstatus: 'rejected';\n\t\treason: Error;\n\t}\n\n\t/**\n\t * Interface of https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/allSettled\n\t */\n\tinterface PromiseWithAllSettled<T> {\n\t\tallSettled<T>(promises: Promise<T>[]): Promise<readonly (IResolvedPromise<T> | IRejectedPromise)[]>;\n\t}\n\n\t/**\n\t * A polyfill of `Promise.allSettled`: returns after all promises have\n\t * resolved or rejected and provides access to each result or error\n\t * in the order of the original passed in promises array.\n\t * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/allSettled\n\t */\n\texport async function allSettled<T>(promises: Promise<T>[]): Promise<readonly (IResolvedPromise<T> | IRejectedPromise)[]> {\n\t\tif (typeof (Promise as unknown as PromiseWithAllSettled<T>).allSettled === 'function') {\n\t\t\treturn allSettledNative(promises); // in some environments we can benefit from native implementation\n\t\t}\n\n\t\treturn allSettledShim(promises);\n\t}\n\n\tasync function allSettledNative<T>(promises: Promise<T>[]): Promise<readonly (IResolvedPromise<T> | IRejectedPromise)[]> {\n\t\treturn (Promise as unknown as PromiseWithAllSettled<T>).allSettled(promises);\n\t}\n\n\tasync function allSettledShim<T>(promises: Promise<T>[]): Promise<readonly (IResolvedPromise<T> | IRejectedPromise)[]> {\n\t\treturn Promise.all(promises.map(promise => (promise.then(value => {\n\t\t\tconst fulfilled: IResolvedPromise<T> = { status: 'fulfilled', value };\n\n\t\t\treturn fulfilled;\n\t\t}, error => {\n\t\t\tconst rejected: IRejectedPromise = { status: 'rejected', reason: error };\n\n\t\t\treturn rejected;\n\t\t}))));\n\t}\n\n\t/**\n\t * A drop-in replacement for `Promise.all` with the only difference\n\t * that the method awaits every promise to either fulfill or reject.\n\t *\n\t * Similar to `Promise.all`, only the first error will be returned\n\t * if any.\n\t */\n\texport async function settled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tlet firstError: Error | undefined = undefined;\n\n\t\tconst result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n\t\t\tif (!firstError) {\n\t\t\t\tfirstError = error;\n\t\t\t}\n\n\t\t\treturn undefined; // do not rethrow so that other promises can settle\n\t\t})));\n\n\t\tif (typeof firstError !== 'undefined') {\n\t\t\tthrow firstError;\n\t\t}\n\n\t\treturn result as unknown as T[]; // cast is needed and protected by the `throw` above\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst usingPosixSep = paths.sep === paths.posix.sep;\n\tconst nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, paths.sep);\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst targetPathEnd = paths.posix.sep + targetPath;\n\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (testPath, basename) {\n\t\treturn typeof testPath === 'string' &&\n\t\t\t((testPath === nativePath || testPath.endsWith(nativePathEnd))\n\t\t\t\t|| !usingPosixSep && (testPath === targetPath || testPath.endsWith(targetPathEnd)))\n\t\t\t? pattern : null;\n\t} : function (testPath, basename) {\n\t\treturn typeof testPath === 'string' &&\n\t\t\t(testPath === nativePath\n\t\t\t\t|| (!usingPosixSep && testPath === targetPath))\n\t\t\t? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { posix, normalize, win32, sep } from 'vs/base/common/path';\nimport { startsWithIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { isEqual, basename, relativePath } from 'vs/base/common/resources';\nimport { hasDriveLetter, isRootOrDriveLetter } from 'vs/base/common/extpath';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string; } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string; }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome?: URI;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\tpathLabel = relativePath(baseResource.uri, resource)!;\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = baseResource.name ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider?.userHome) {\n\t\tres = tildify(res, userHomeProvider.userHome.fsPath);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (isWindows && isRootOrDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nexport function normalizeDriveLetter(path: string): string {\n\tif (hasDriveLetter(path)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string; } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? path.startsWith(normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[], pathSeparator: string = sep): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${pathSeparator}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(pathSeparator) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t\tpath = path.substr(path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(pathSeparator);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(pathSeparator);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(pathSeparator) > -1) ? pathSeparator + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = paths[otherPathIndex].endsWith(subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (segments[0].endsWith(':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + pathSeparator + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + pathSeparator;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if neeeded\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + pathSeparator;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + pathSeparator + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which templating is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | undefined | null; } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string; } {\n\tconst p = fullPath.indexOf('/') !== -1 ? posix : win32;\n\tconst name = p.basename(fullPath);\n\tconst parentPath = p.dirname(fullPath);\n\tif (name.length) {\n\t\treturn { name, parentPath };\n\t}\n\t// only the root segment\n\treturn { name: parentPath, parentPath: '' };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MarshalledObject } from 'vs/base/common/marshalling';\nimport { Schemas } from './network';\n\nexport interface IURITransformer {\n\ttransformIncoming(uri: UriComponents): UriComponents;\n\ttransformOutgoing(uri: UriComponents): UriComponents;\n\ttransformOutgoingURI(uri: URI): URI;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nexport interface UriParts {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n}\n\nexport interface IRawURITransformer {\n\ttransformIncoming(uri: UriParts): UriParts;\n\ttransformOutgoing(uri: UriParts): UriParts;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nfunction toJSON(uri: URI): UriComponents {\n\treturn <UriComponents><any>uri.toJSON();\n}\n\nexport class URITransformer implements IURITransformer {\n\n\tconstructor(private readonly remoteAuthority: string) {\n\t}\n\n\t// NOTE@coder: Coming in from the browser it'll be vscode-remote so it needs\n\t// to be transformed into file.\n\tpublic transformIncoming(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.vscodeRemote\n\t\t\t? toJSON(URI.file(uri.path))\n\t\t\t: uri;\n\t}\n\n\t// NOTE@coder: Going out to the browser it'll be file so it needs to be\n\t// transformed into vscode-remote.\n\tpublic transformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? toJSON(URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path: uri.path }))\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingURI(uri: URI): URI {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path:uri.path })\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingScheme(scheme: string): string {\n\t\treturn scheme === Schemas.file\n\t\t\t? Schemas.vscodeRemote\n\t\t\t: scheme;\n\t}\n}\n\nexport const DefaultURITransformer: IURITransformer = new class {\n\ttransformIncoming(uri: UriComponents) {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingURI(uri: URI): URI {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingScheme(scheme: string): string {\n\t\treturn scheme;\n\t}\n};\n\nfunction _transformOutgoingURIs(obj: any, transformer: IURITransformer, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\t\tif (obj instanceof URI) {\n\t\t\treturn transformer.transformOutgoing(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformOutgoingURIs(obj[key], transformer, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformOutgoingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformOutgoingURIs(obj, transformer, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\n\nfunction _transformIncomingURIs(obj: any, transformer: IURITransformer, revive: boolean, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tif ((<MarshalledObject>obj).$mid === 1) {\n\t\t\treturn revive ? URI.revive(transformer.transformIncoming(obj)) : transformer.transformIncoming(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformIncomingURIs(obj[key], transformer, revive, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, false, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\nexport function transformAndReviveIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, true, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n// prep-work\nconst _data = new Uint8Array(16);\nconst _hex: string[] = [];\nfor (let i = 0; i < 256; i++) {\n\t_hex.push(i.toString(16).padStart(2, '0'));\n}\n\n// todo@jrieken\n// 1. node nodejs use`crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\nlet _fillRandomValues: (bucket: Uint8Array) => Uint8Array;\n\ndeclare const crypto: undefined | { getRandomValues(data: Uint8Array): Uint8Array };\n\nif (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\n\t// browser\n\t_fillRandomValues = crypto.getRandomValues.bind(crypto);\n\n} else {\n\t_fillRandomValues = function (bucket: Uint8Array): Uint8Array {\n\t\tfor (let i = 0; i < bucket.length; i++) {\n\t\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t\t}\n\t\treturn bucket;\n\t};\n}\n\nexport function generateUuid(): string {\n\t// get data\n\t_fillRandomValues(_data);\n\n\t// set version bits\n\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t// print as string\n\tlet i = 0;\n\tlet result = '';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: BufferEncoding = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/// <reference path=\"../../../typings/require.d.ts\" />\n\n//@ts-check\n(function () {\n\t'use strict';\n\n\t/**\n\t * @param {NodeRequire} nodeRequire\n\t * @param {typeof import('path')} path\n\t * @param {typeof import('fs')} fs\n\t * @param {typeof import('../common/performance')} perf\n\t */\n\tfunction factory(nodeRequire, path, fs, perf) {\n\n\t\t/**\n\t\t * @param {string} file\n\t\t * @returns {Promise<boolean>}\n\t\t */\n\t\tfunction exists(file) {\n\t\t\treturn new Promise(c => fs.exists(file, c));\n\t\t}\n\n\t\t/**\n\t\t * @param {string} file\n\t\t * @returns {Promise<void>}\n\t\t */\n\t\tfunction touch(file) {\n\t\t\treturn new Promise((c, e) => { const d = new Date(); fs.utimes(file, d, d, err => err ? e(err) : c()); });\n\t\t}\n\n\t\t/**\n\t\t * @param {string} dir\n\t\t * @returns {Promise<string>}\n\t\t */\n\t\tfunction mkdirp(dir) {\n\t\t\treturn new Promise((c, e) => fs.mkdir(dir, { recursive: true }, err => (err && err.code !== 'EEXIST') ? e(err) : c(dir)));\n\t\t}\n\n\t\t/**\n\t\t * @param {string} location\n\t\t * @returns {Promise<void>}\n\t\t */\n\t\tfunction rimraf(location) {\n\t\t\treturn new Promise((c, e) => fs.rmdir(location, { recursive: true }, err => (err && err.code !== 'ENOENT') ? e(err) : c()));\n\t\t}\n\n\t\t/**\n\t\t * @param {string} file\n\t\t * @returns {Promise<string>}\n\t\t */\n\t\tfunction readFile(file) {\n\t\t\treturn new Promise((c, e) => fs.readFile(file, 'utf8', (err, data) => err ? e(err) : c(data)));\n\t\t}\n\n\t\t/**\n\t\t * @param {string} file\n\t\t * @param {string} content\n\t\t * @returns {Promise<void>}\n\t\t */\n\t\tfunction writeFile(file, content) {\n\t\t\treturn new Promise((c, e) => fs.writeFile(file, content, 'utf8', err => err ? e(err) : c()));\n\t\t}\n\n\t\t/**\n\t\t * @param {string} userDataPath\n\t\t * @returns {object}\n\t\t */\n\t\tfunction getLanguagePackConfigurations(userDataPath) {\n\t\t\tconst configFile = path.join(userDataPath, 'languagepacks.json');\n\t\t\ttry {\n\t\t\t\t// NOTE@coder: Swapped require with readFile since require is cached and\n\t\t\t\t// we don't restart the server-side portion of code-server when the\n\t\t\t\t// language changes.\n\t\t\t\treturn JSON.parse(fs.readFileSync(configFile, 'utf8'));\n\t\t\t} catch (err) {\n\t\t\t\t// Do nothing. If we can't read the file we have no\n\t\t\t\t// language pack config.\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\t/**\n\t\t * @param {object} config\n\t\t * @param {string} locale\n\t\t */\n\t\tfunction resolveLanguagePackLocale(config, locale) {\n\t\t\ttry {\n\t\t\t\twhile (locale) {\n\t\t\t\t\tif (config[locale]) {\n\t\t\t\t\t\treturn locale;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst index = locale.lastIndexOf('-');\n\t\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('Resolving language pack configuration failed.', err);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\t/**\n\t\t * @param {string} commit\n\t\t * @param {string} userDataPath\n\t\t * @param {string} metaDataFile\n\t\t * @param {string} locale\n\t\t */\n\t\tfunction getNLSConfiguration(commit, userDataPath, metaDataFile, locale) {\n\t\t\tif (locale === 'pseudo') {\n\t\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {}, pseudo: true });\n\t\t\t}\n\n\t\t\tif (process.env['VSCODE_DEV']) {\n\t\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t\t}\n\n\t\t\t// We have a built version so we have extracted nls file. Try to find\n\t\t\t// the right file to use.\n\n\t\t\t// Check if we have an English or English US locale. If so fall to default since that is our\n\t\t\t// English translation (we don't ship *.nls.en.json files)\n\t\t\tif (locale && (locale === 'en' || locale === 'en-us')) {\n\t\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t\t}\n\n\t\t\tconst initialLocale = locale;\n\n\t\t\tperf.mark('code/willGenerateNls');\n\n\t\t\tconst defaultResult = function (locale) {\n\t\t\t\tperf.mark('code/didGenerateNls');\n\t\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tif (!commit) {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\tconst configs = getLanguagePackConfigurations(userDataPath);\n\t\t\t\tif (!configs) {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\tlocale = resolveLanguagePackLocale(configs, locale);\n\t\t\t\tif (!locale) {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\tconst packConfig = configs[locale];\n\t\t\t\tlet mainPack;\n\t\t\t\tif (!packConfig || typeof packConfig.hash !== 'string' || !packConfig.translations || typeof (mainPack = packConfig.translations['vscode']) !== 'string') {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\treturn exists(mainPack).then(fileExists => {\n\t\t\t\t\tif (!fileExists) {\n\t\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t\t}\n\t\t\t\t\tconst packId = packConfig.hash + '.' + locale;\n\t\t\t\t\tconst cacheRoot = path.join(userDataPath, 'clp', packId);\n\t\t\t\t\tconst coreLocation = path.join(cacheRoot, commit);\n\t\t\t\t\tconst translationsConfigFile = path.join(cacheRoot, 'tcf.json');\n\t\t\t\t\tconst corruptedFile = path.join(cacheRoot, 'corrupted.info');\n\t\t\t\t\tconst result = {\n\t\t\t\t\t\tlocale: initialLocale,\n\t\t\t\t\t\tavailableLanguages: { '*': locale },\n\t\t\t\t\t\t_languagePackId: packId,\n\t\t\t\t\t\t_translationsConfigFile: translationsConfigFile,\n\t\t\t\t\t\t_cacheRoot: cacheRoot,\n\t\t\t\t\t\t_resolvedLanguagePackCoreLocation: coreLocation,\n\t\t\t\t\t\t_corruptedFile: corruptedFile\n\t\t\t\t\t};\n\t\t\t\t\treturn exists(corruptedFile).then(corrupted => {\n\t\t\t\t\t\t// The nls cache directory is corrupted.\n\t\t\t\t\t\tlet toDelete;\n\t\t\t\t\t\tif (corrupted) {\n\t\t\t\t\t\t\ttoDelete = rimraf(cacheRoot);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttoDelete = Promise.resolve(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn toDelete.then(() => {\n\t\t\t\t\t\t\treturn exists(coreLocation).then(fileExists => {\n\t\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\t\t// We don't wait for this. No big harm if we can't touch\n\t\t\t\t\t\t\t\t\ttouch(coreLocation).catch(() => { });\n\t\t\t\t\t\t\t\t\tperf.mark('code/didGenerateNls');\n\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn mkdirp(coreLocation).then(() => {\n\t\t\t\t\t\t\t\t\treturn Promise.all([readFile(metaDataFile), readFile(mainPack)]);\n\t\t\t\t\t\t\t\t}).then(values => {\n\t\t\t\t\t\t\t\t\tconst metadata = JSON.parse(values[0]);\n\t\t\t\t\t\t\t\t\tconst packData = JSON.parse(values[1]).contents;\n\t\t\t\t\t\t\t\t\tconst bundles = Object.keys(metadata.bundles);\n\t\t\t\t\t\t\t\t\tconst writes = [];\n\t\t\t\t\t\t\t\t\tfor (const bundle of bundles) {\n\t\t\t\t\t\t\t\t\t\tconst modules = metadata.bundles[bundle];\n\t\t\t\t\t\t\t\t\t\tconst target = Object.create(null);\n\t\t\t\t\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\t\t\t\t\tconst keys = metadata.keys[module];\n\t\t\t\t\t\t\t\t\t\t\tconst defaultMessages = metadata.messages[module];\n\t\t\t\t\t\t\t\t\t\t\tconst translations = packData[module];\n\t\t\t\t\t\t\t\t\t\t\tlet targetStrings;\n\t\t\t\t\t\t\t\t\t\t\tif (translations) {\n\t\t\t\t\t\t\t\t\t\t\t\ttargetStrings = [];\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst elem = keys[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst key = typeof elem === 'string' ? elem : elem.key;\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet translatedMessage = translations[key];\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (translatedMessage === undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttranslatedMessage = defaultMessages[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttargetStrings.push(translatedMessage);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\ttargetStrings = defaultMessages;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\ttarget[module] = targetStrings;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\twrites.push(writeFile(path.join(coreLocation, bundle.replace(/\\//g, '!') + '.nls.json'), JSON.stringify(target)));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twrites.push(writeFile(translationsConfigFile, JSON.stringify(packConfig.translations)));\n\t\t\t\t\t\t\t\t\treturn Promise.all(writes);\n\t\t\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\t\t\tperf.mark('code/didGenerateNls');\n\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\t\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\t\t\t\t\t\t\treturn defaultResult(locale);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\t\treturn defaultResult(locale);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tgetNLSConfiguration\n\t\t};\n\t}\n\n\tif (typeof define === 'function') {\n\t\t// amd\n\t\tdefine(__m[95/*vs/base/node/languagePacks*/], __M([0/*require*/,36/*path*/,16/*fs*/,96/*vs/base/common/performance*/]), function (require, /** @type {typeof import('path')} */ path, /** @type {typeof import('fs')} */ fs, /** @type {typeof import('../common/performance')} */ perf) { return factory(require.__$__nodeRequire, path, fs, perf); });\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t\tconst path = require('path');\n\t\tconst fs = require('fs');\n\t\tconst perf = require('../common/performance');\n\t\tmodule.exports = factory(require, path, fs, perf);\n\t} else {\n\t\tthrow new Error('Unknown context');\n\t}\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { networkInterfaces } from 'os';\n\nconst invalidMacAddresses = new Set([\n\t'00:00:00:00:00:00',\n\t'ff:ff:ff:ff:ff:ff',\n\t'ac:de:48:00:11:22'\n]);\n\nfunction validateMacAddress(candidate: string): boolean {\n\tconst tempCandidate = candidate.replace(/\\-/g, ':').toLowerCase();\n\treturn !invalidMacAddresses.has(tempCandidate);\n}\n\nexport function getMac(): Promise<string> {\n\treturn new Promise(async (resolve, reject) => {\n\t\tconst timeout = setTimeout(() => reject('Unable to retrieve mac address (timeout after 10s)'), 10000);\n\n\t\ttry {\n\t\t\tresolve(await doGetMac());\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t} finally {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t});\n}\n\nfunction doGetMac(): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\tconst ifaces = networkInterfaces();\n\t\t\tfor (let name in ifaces) {\n\t\t\t\tconst networkInterface = ifaces[name];\n\t\t\t\tif (networkInterface) {\n\t\t\t\t\tfor (const { mac } of networkInterface) {\n\t\t\t\t\t\tif (validateMacAddress(mac)) {\n\t\t\t\t\t\t\treturn resolve(mac);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treject('Unable to retrieve mac address (unexpected format)');\n\t\t} catch (err) {\n\t\t\treject(err);\n\t\t}\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport * as uuid from 'vs/base/common/uuid';\nimport { networkInterfaces } from 'os';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { getMac } from 'vs/base/node/macAddress';\n\n// http://www.techrepublic.com/blog/data-center/mac-address-scorecard-for-common-virtual-machine-platforms/\n// VMware ESX 3, Server, Workstation, Player\t00-50-56, 00-0C-29, 00-05-69\n// Microsoft Hyper-V, Virtual Server, Virtual PC\t00-03-FF\n// Parallels Desktop, Workstation, Server, Virtuozzo\t00-1C-42\n// Virtual Iron 4\t00-0F-4B\n// Red Hat Xen\t00-16-3E\n// Oracle VM\t00-16-3E\n// XenSource\t00-16-3E\n// Novell Xen\t00-16-3E\n// Sun xVM VirtualBox\t08-00-27\nexport const virtualMachineHint: { value(): number } = new class {\n\n\tprivate _virtualMachineOUIs?: TernarySearchTree<string, boolean>;\n\tprivate _value?: number;\n\n\tprivate _isVirtualMachineMacAdress(mac: string): boolean {\n\t\tif (!this._virtualMachineOUIs) {\n\t\t\tthis._virtualMachineOUIs = TernarySearchTree.forStrings<boolean>();\n\n\t\t\t// dash-separated\n\t\t\tthis._virtualMachineOUIs.set('00-50-56', true);\n\t\t\tthis._virtualMachineOUIs.set('00-0C-29', true);\n\t\t\tthis._virtualMachineOUIs.set('00-05-69', true);\n\t\t\tthis._virtualMachineOUIs.set('00-03-FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00-1C-42', true);\n\t\t\tthis._virtualMachineOUIs.set('00-16-3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08-00-27', true);\n\n\t\t\t// colon-separated\n\t\t\tthis._virtualMachineOUIs.set('00:50:56', true);\n\t\t\tthis._virtualMachineOUIs.set('00:0C:29', true);\n\t\t\tthis._virtualMachineOUIs.set('00:05:69', true);\n\t\t\tthis._virtualMachineOUIs.set('00:03:FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00:1C:42', true);\n\t\t\tthis._virtualMachineOUIs.set('00:16:3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08:00:27', true);\n\t\t}\n\t\treturn !!this._virtualMachineOUIs.findSubstr(mac);\n\t}\n\n\tvalue(): number {\n\t\tif (this._value === undefined) {\n\t\t\tlet vmOui = 0;\n\t\t\tlet interfaceCount = 0;\n\n\t\t\tconst interfaces = networkInterfaces();\n\t\t\tfor (let name in interfaces) {\n\t\t\t\tconst networkInterface = interfaces[name];\n\t\t\t\tif (networkInterface) {\n\t\t\t\t\tfor (const { mac, internal } of networkInterface) {\n\t\t\t\t\t\tif (!internal) {\n\t\t\t\t\t\t\tinterfaceCount += 1;\n\t\t\t\t\t\t\tif (this._isVirtualMachineMacAdress(mac.toUpperCase())) {\n\t\t\t\t\t\t\t\tvmOui += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._value = interfaceCount > 0\n\t\t\t\t? vmOui / interfaceCount\n\t\t\t\t: 0;\n\t\t}\n\n\t\treturn this._value;\n\t}\n};\n\nlet machineId: Promise<string>;\nexport async function getMachineId(): Promise<string> {\n\tif (!machineId) {\n\t\tmachineId = (async () => {\n\t\t\tconst id = await getMacMachineId();\n\n\t\t\treturn id || uuid.generateUuid(); // fallback, generate a UUID\n\t\t})();\n\t}\n\n\treturn machineId;\n}\n\nasync function getMacMachineId(): Promise<string | undefined> {\n\ttry {\n\t\tconst crypto = await import('crypto');\n\t\tconst macAddress = await getMac();\n\t\treturn crypto.createHash('sha256').update(macAddress, 'utf8').digest('hex');\n\t} catch (err) {\n\t\terrors.onUnexpectedError(err);\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { tmpdir } from 'os';\nimport { join } from 'vs/base/common/path';\nimport { ResourceQueue } from 'vs/base/common/async';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { isEqualOrParent, isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\n\n//#region rimraf\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\n/**\n * Allows to delete the provied path (either file or folder) recursively\n * with the options:\n * - `UNLINK`: direct removal from disk\n * - `MOVE`: faster variant that first moves the target to temp dir and then\n *           deletes it in the background without waiting for that to finish.\n */\nexport async function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via rmDir\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait fs.promises.rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp).catch(error => {/* ignore */ });\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\treturn fs.promises.rmdir(path, { recursive: true, maxRetries: 3 });\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\tfs.rmdirSync(path, { recursive: true });\n}\n\n//#endregion\n\n//#region readdir with NFC support (macos)\n\nexport interface IDirent {\n\tname: string;\n\n\tisFile(): boolean;\n\tisDirectory(): boolean;\n\tisSymbolicLink(): boolean;\n}\n\n/**\n * Drop-in replacement of `fs.readdir` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nexport async function readdir(path: string): Promise<string[]>;\nexport async function readdir(path: string, options: { withFileTypes: true }): Promise<IDirent[]>;\nexport async function readdir(path: string, options?: { withFileTypes: true }): Promise<(string | IDirent)[]> {\n\treturn handleDirectoryChildren(await (options ? safeReaddirWithFileTypes(path) : fs.promises.readdir(path)));\n}\n\nasync function safeReaddirWithFileTypes(path: string): Promise<IDirent[]> {\n\ttry {\n\t\treturn await fs.promises.readdir(path, { withFileTypes: true });\n\t} catch (error) {\n\t\tconsole.warn('[node.js fs] readdir with filetypes failed with error: ', error);\n\t}\n\n\t// Fallback to manually reading and resolving each\n\t// children of the folder in case we hit an error\n\t// previously.\n\t// This can only really happen on exotic file systems\n\t// such as explained in #115645 where we get entries\n\t// from `readdir` that we can later not `lstat`.\n\tconst result: IDirent[] = [];\n\tconst children = await readdir(path);\n\tfor (const child of children) {\n\t\tlet isFile = false;\n\t\tlet isDirectory = false;\n\t\tlet isSymbolicLink = false;\n\n\t\ttry {\n\t\t\tconst lstat = await fs.promises.lstat(join(path, child));\n\n\t\t\tisFile = lstat.isFile();\n\t\t\tisDirectory = lstat.isDirectory();\n\t\t\tisSymbolicLink = lstat.isSymbolicLink();\n\t\t} catch (error) {\n\t\t\tconsole.warn('[node.js fs] unexpected error from lstat after readdir: ', error);\n\t\t}\n\n\t\tresult.push({\n\t\t\tname: child,\n\t\t\tisFile: () => isFile,\n\t\t\tisDirectory: () => isDirectory,\n\t\t\tisSymbolicLink: () => isSymbolicLink\n\t\t});\n\t}\n\n\treturn result;\n}\n\n/**\n * Drop-in replacement of `fs.readdirSync` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[];\nfunction handleDirectoryChildren(children: IDirent[]): IDirent[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[] {\n\treturn children.map(child => {\n\n\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t// See also https://github.com/nodejs/node/issues/2165\n\n\t\tif (typeof child === 'string') {\n\t\t\treturn isMacintosh ? normalizeNFC(child) : child;\n\t\t}\n\n\t\tchild.name = isMacintosh ? normalizeNFC(child.name) : child.name;\n\n\t\treturn child;\n\t});\n}\n\n/**\n * A convinience method to read all children of a path that\n * are directories.\n */\nexport async function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await SymlinkSupport.existsDirectory(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\n//#endregion\n\n//#region whenDeleted()\n\n/**\n * A `Promise` that resolves when the provided `path`\n * is deleted from disk.\n */\nexport function whenDeleted(path: string, intervalMs = 1000): Promise<void> {\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.access(path, err => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, intervalMs);\n\t});\n}\n\n//#endregion\n\n//#region Methods with symbolic links support\n\nexport namespace SymlinkSupport {\n\n\texport interface IStats {\n\n\t\t// The stats of the file. If the file is a symbolic\n\t\t// link, the stats will be of that target file and\n\t\t// not the link itself.\n\t\t// If the file is a symbolic link pointing to a non\n\t\t// existing file, the stat will be of the link and\n\t\t// the `dangling` flag will indicate this.\n\t\tstat: fs.Stats;\n\n\t\t// Will be provided if the resource is a symbolic link\n\t\t// on disk. Use the `dangling` flag to find out if it\n\t\t// points to a resource that does not exist on disk.\n\t\tsymbolicLink?: { dangling: boolean };\n\t}\n\n\t/**\n\t * Resolves the `fs.Stats` of the provided path. If the path is a\n\t * symbolic link, the `fs.Stats` will be from the target it points\n\t * to. If the target does not exist, `dangling: true` will be returned\n\t * as `symbolicLink` value.\n\t */\n\texport async function stat(path: string): Promise<IStats> {\n\n\t\t// First stat the link\n\t\tlet lstats: fs.Stats | undefined;\n\t\ttry {\n\t\t\tlstats = await fs.promises.lstat(path);\n\n\t\t\t// Return early if the stat is not a symbolic link at all\n\t\t\tif (!lstats.isSymbolicLink()) {\n\t\t\t\treturn { stat: lstats };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore - use stat() instead */\n\t\t}\n\n\t\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t\t// which for symbolic links will stat the target they point to\n\t\ttry {\n\t\t\tconst stats = await fs.promises.stat(path);\n\n\t\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t\t} catch (error) {\n\n\t\t\t// If the link points to a non-existing file we still want\n\t\t\t// to return it as result while setting dangling: true flag\n\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t}\n\n\t\t\t// Windows: workaround a node.js bug where reparse points\n\t\t\t// are not supported (https://github.com/nodejs/node/issues/36790)\n\t\t\tif (isWindows && error.code === 'EACCES') {\n\t\t\t\ttry {\n\t\t\t\t\tconst stats = await fs.promises.stat(await fs.promises.readlink(path));\n\n\t\t\t\t\treturn { stat: stats, symbolicLink: { dangling: false } };\n\t\t\t\t} catch (error) {\n\n\t\t\t\t\t// If the link points to a non-existing file we still want\n\t\t\t\t\t// to return it as result while setting dangling: true flag\n\t\t\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a file with support\n\t * for symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a non-existing path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsFile(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isFile() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a directory with support for\n\t * symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a non-existing path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsDirectory(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isDirectory() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n//#endregion\n\n//#region Write File\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeQueues = new ResourceQueue();\n\n/**\n * Same as `fs.writeFile` but with an additional call to\n * `fs.fdatasync` after writing to ensure changes are\n * flushed to disk.\n *\n * In addition, multiple writes to the same path are queued.\n */\nexport function writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\treturn writeQueues.queueFor(URI.file(path), extUriBiasedIgnorePathCase).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\n/**\n * Same as `fs.writeFileSync` but with an additional call to\n * `fs.fdatasyncSync` after writing to ensure changes are\n * flushed to disk.\n */\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666 /* default node.js mode for files */, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666 /* default node.js mode for files */,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\n//#endregion\n\n//#region Move / Copy\n\n/**\n * A drop-in replacement for `fs.rename` that:\n * - updates the `mtime` of the `source` after the operation\n * - allows to move across multiple disks\n */\nexport async function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn;  // simulate node.js behaviour here and do a no-op if paths match\n\t}\n\n\t// We have been updating `mtime` for move operations for files since the\n\t// beginning for reasons that are no longer quite clear, but changing\n\t// this could be risky as well. As such, trying to reason about it:\n\t// It is very common as developer to have file watchers enabled that watch\n\t// the current workspace for changes. Updating the `mtime` might make it\n\t// easier for these watchers to recognize an actual change. Since changing\n\t// a source code file also updates the `mtime`, moving a file should do so\n\t// as well because conceptually it is a change of a similar category.\n\tasync function updateMtime(path: string): Promise<void> {\n\t\ttry {\n\t\t\tconst stat = await fs.promises.lstat(path);\n\t\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\t\treturn; // only for files\n\t\t\t}\n\n\t\t\tconst fh = await fs.promises.open(path, 'a');\n\t\t\ttry {\n\t\t\t\tawait fh.utimes(stat.atime, new Date());\n\t\t\t} finally {\n\t\t\t\tawait fh.close();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// Ignore any error\n\t\t}\n\t}\n\n\ttry {\n\t\tawait fs.promises.rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target, { preserveSymlinks: false /* copying to another device */ });\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\ninterface ICopyPayload {\n\treadonly root: { source: string, target: string };\n\treadonly options: { preserveSymlinks: boolean };\n\treadonly handledSourcePaths: Set<string>;\n}\n\n/**\n * Recursively copies all of `source` to `target`.\n *\n * The options `preserveSymlinks` configures how symbolic\n * links should be handled when encountered. Set to\n * `false` to not preserve them and `true` otherwise.\n */\nexport async function copy(source: string, target: string, options: { preserveSymlinks: boolean }): Promise<void> {\n\treturn doCopy(source, target, { root: { source, target }, options, handledSourcePaths: new Set<string>() });\n}\n\n// When copying a file or folder, we want to preserve the mode\n// it had and as such provide it when creating. However, modes\n// can go beyond what we expect (see link below), so we mask it.\n// (https://github.com/nodejs/node-v0.x-archive/issues/3045#issuecomment-4862588)\nconst COPY_MODE_MASK = 0o777;\n\nasync function doCopy(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Keep track of paths already copied to prevent\n\t// cycles from symbolic links to cause issues\n\tif (payload.handledSourcePaths.has(source)) {\n\t\treturn;\n\t} else {\n\t\tpayload.handledSourcePaths.add(source);\n\t}\n\n\tconst { stat, symbolicLink } = await SymlinkSupport.stat(source);\n\n\t// Symlink\n\tif (symbolicLink) {\n\n\t\t// Try to re-create the symlink unless `preserveSymlinks: false`\n\t\tif (payload.options.preserveSymlinks) {\n\t\t\ttry {\n\t\t\t\treturn await doCopySymlink(source, target, payload);\n\t\t\t} catch (error) {\n\t\t\t\t// in any case of an error fallback to normal copy via dereferencing\n\t\t\t\tconsole.warn('[node.js fs] copy of symlink failed: ', error);\n\t\t\t}\n\t\t}\n\n\t\tif (symbolicLink.dangling) {\n\t\t\treturn; // skip dangling symbolic links from here on (https://github.com/microsoft/vscode/issues/111621)\n\t\t}\n\t}\n\n\t// Folder\n\tif (stat.isDirectory()) {\n\t\treturn doCopyDirectory(source, target, stat.mode & COPY_MODE_MASK, payload);\n\t}\n\n\t// File or file-like\n\telse {\n\t\treturn doCopyFile(source, target, stat.mode & COPY_MODE_MASK);\n\t}\n}\n\nasync function doCopyDirectory(source: string, target: string, mode: number, payload: ICopyPayload): Promise<void> {\n\n\t// Create folder\n\tawait fs.promises.mkdir(target, { recursive: true, mode });\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (const file of files) {\n\t\tawait doCopy(join(source, file), join(target, file), payload);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\n\t// Copy file\n\tawait fs.promises.copyFile(source, target);\n\n\t// restore mode (https://github.com/nodejs/node/issues/1104)\n\tawait fs.promises.chmod(target, mode);\n}\n\nasync function doCopySymlink(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Figure out link target\n\tlet linkTarget = await fs.promises.readlink(source);\n\n\t// Special case: the symlink points to a target that is\n\t// actually within the path that is being copied. In that\n\t// case we want the symlink to point to the target and\n\t// not the source\n\tif (isEqualOrParent(linkTarget, payload.root.source, !isLinux)) {\n\t\tlinkTarget = join(payload.root.target, linkTarget.substr(payload.root.source.length + 1));\n\t}\n\n\t// Create symlink\n\tawait fs.promises.symlink(linkTarget, target);\n}\n\n//#endregion\n\n//#region Async FS Methods\n\nexport async function exists(path: string): Promise<boolean> {\n\ttry {\n\t\tawait fs.promises.access(path);\n\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { promisify } from 'util';\nimport { rtrim } from 'vs/base/common/strings';\nimport { sep, join, normalize, dirname, basename } from 'vs/base/common/path';\nimport { readdirSync } from 'vs/base/node/pfs';\n\n/**\n * Copied from: https://github.com/microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\t// DO NOT USE `fs.promises.realpath` here as it internally\n\t\t// calls `fs.native.realpath` which will result in subst\n\t\t// drives to be resolved to their target on Windows\n\t\t// https://github.com/microsoft/vscode/issues/118562\n\t\treturn await promisify(fs.realpath)(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait fs.promises.access(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as pfs from 'vs/base/node/pfs';\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\n\n// This is required, since parseInt(\"7-preview\") will return 7.\nconst IntRegex: RegExp = /^\\d+$/;\n\nconst PwshMsixRegex: RegExp = /^Microsoft.PowerShell_.*/;\nconst PwshPreviewMsixRegex: RegExp = /^Microsoft.PowerShellPreview_.*/;\n\nconst enum Arch {\n\tx64,\n\tx86,\n\tARM\n}\n\nlet processArch: Arch;\nswitch (process.arch) {\n\tcase 'ia32':\n\tcase 'x32':\n\t\tprocessArch = Arch.x86;\n\t\tbreak;\n\tcase 'arm':\n\tcase 'arm64':\n\t\tprocessArch = Arch.ARM;\n\t\tbreak;\n\tdefault:\n\t\tprocessArch = Arch.x64;\n\t\tbreak;\n}\n\n/*\nCurrently, here are the values for these environment variables on their respective archs:\n\nOn x86 process on x86:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn x86 process on x64:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is AMD64\n\nOn x64 process on x64:\nPROCESSOR_ARCHITECTURE is AMD64\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn ARM process on ARM:\nPROCESSOR_ARCHITECTURE is ARM64\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn x86 process on ARM:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is ARM64\n\nOn x64 process on ARM:\nPROCESSOR_ARCHITECTURE is ARM64\nPROCESSOR_ARCHITEW6432 is undefined\n*/\nlet osArch: Arch;\nif (process.env['PROCESSOR_ARCHITEW6432']) {\n\tosArch = process.env['PROCESSOR_ARCHITEW6432'] === 'ARM64'\n\t\t? Arch.ARM\n\t\t: Arch.x64;\n} else if (process.env['PROCESSOR_ARCHITECTURE'] === 'ARM64') {\n\tosArch = Arch.ARM;\n} else if (process.env['PROCESSOR_ARCHITECTURE'] === 'X86') {\n\tosArch = Arch.x86;\n} else {\n\tosArch = Arch.x64;\n}\n\nexport interface IPowerShellExeDetails {\n\treadonly displayName: string;\n\treadonly exePath: string;\n}\n\nexport interface IPossiblePowerShellExe extends IPowerShellExeDetails {\n\texists(): Promise<boolean>;\n}\n\nclass PossiblePowerShellExe implements IPossiblePowerShellExe {\n\tconstructor(\n\t\tpublic readonly exePath: string,\n\t\tpublic readonly displayName: string,\n\t\tprivate knownToExist?: boolean) { }\n\n\tpublic async exists(): Promise<boolean> {\n\t\tif (this.knownToExist === undefined) {\n\t\t\tthis.knownToExist = await pfs.SymlinkSupport.existsFile(this.exePath);\n\t\t}\n\t\treturn this.knownToExist;\n\t}\n}\n\nfunction getProgramFilesPath(\n\t{ useAlternateBitness = false }: { useAlternateBitness?: boolean } = {}): string | null {\n\n\tif (!useAlternateBitness) {\n\t\t// Just use the native system bitness\n\t\treturn process.env.ProgramFiles || null;\n\t}\n\n\t// We might be a 64-bit process looking for 32-bit program files\n\tif (processArch === Arch.x64) {\n\t\treturn process.env['ProgramFiles(x86)'] || null;\n\t}\n\n\t// We might be a 32-bit process looking for 64-bit program files\n\tif (osArch === Arch.x64) {\n\t\treturn process.env.ProgramW6432 || null;\n\t}\n\n\t// We're a 32-bit process on 32-bit Windows, there is no other Program Files dir\n\treturn null;\n}\n\nasync function findPSCoreWindowsInstallation(\n\t{ useAlternateBitness = false, findPreview = false }:\n\t\t{ useAlternateBitness?: boolean; findPreview?: boolean } = {}): Promise<IPossiblePowerShellExe | null> {\n\n\tconst programFilesPath = getProgramFilesPath({ useAlternateBitness });\n\tif (!programFilesPath) {\n\t\treturn null;\n\t}\n\n\tconst powerShellInstallBaseDir = path.join(programFilesPath, 'PowerShell');\n\n\t// Ensure the base directory exists\n\tif (!await pfs.SymlinkSupport.existsDirectory(powerShellInstallBaseDir)) {\n\t\treturn null;\n\t}\n\n\tlet highestSeenVersion: number = -1;\n\tlet pwshExePath: string | null = null;\n\tfor (const item of await pfs.readdir(powerShellInstallBaseDir)) {\n\n\t\tlet currentVersion: number = -1;\n\t\tif (findPreview) {\n\t\t\t// We are looking for something like \"7-preview\"\n\n\t\t\t// Preview dirs all have dashes in them\n\t\t\tconst dashIndex = item.indexOf('-');\n\t\t\tif (dashIndex < 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Verify that the part before the dash is an integer\n\t\t\t// and that the part after the dash is \"preview\"\n\t\t\tconst intPart: string = item.substring(0, dashIndex);\n\t\t\tif (!IntRegex.test(intPart) || item.substring(dashIndex + 1) !== 'preview') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcurrentVersion = parseInt(intPart, 10);\n\t\t} else {\n\t\t\t// Search for a directory like \"6\" or \"7\"\n\t\t\tif (!IntRegex.test(item)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcurrentVersion = parseInt(item, 10);\n\t\t}\n\n\t\t// Ensure we haven't already seen a higher version\n\t\tif (currentVersion <= highestSeenVersion) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Now look for the file\n\t\tconst exePath = path.join(powerShellInstallBaseDir, item, 'pwsh.exe');\n\t\tif (!await pfs.SymlinkSupport.existsFile(exePath)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tpwshExePath = exePath;\n\t\thighestSeenVersion = currentVersion;\n\t}\n\n\tif (!pwshExePath) {\n\t\treturn null;\n\t}\n\n\tconst bitness: string = programFilesPath.includes('x86') ? ' (x86)' : '';\n\tconst preview: string = findPreview ? ' Preview' : '';\n\n\treturn new PossiblePowerShellExe(pwshExePath, `PowerShell${preview}${bitness}`, true);\n}\n\nasync function findPSCoreMsix({ findPreview }: { findPreview?: boolean } = {}): Promise<IPossiblePowerShellExe | null> {\n\t// We can't proceed if there's no LOCALAPPDATA path\n\tif (!process.env.LOCALAPPDATA) {\n\t\treturn null;\n\t}\n\n\t// Find the base directory for MSIX application exe shortcuts\n\tconst msixAppDir = path.join(process.env.LOCALAPPDATA, 'Microsoft', 'WindowsApps');\n\n\tif (!await pfs.SymlinkSupport.existsDirectory(msixAppDir)) {\n\t\treturn null;\n\t}\n\n\t// Define whether we're looking for the preview or the stable\n\tconst { pwshMsixDirRegex, pwshMsixName } = findPreview\n\t\t? { pwshMsixDirRegex: PwshPreviewMsixRegex, pwshMsixName: 'PowerShell Preview (Store)' }\n\t\t: { pwshMsixDirRegex: PwshMsixRegex, pwshMsixName: 'PowerShell (Store)' };\n\n\t// We should find only one such application, so return on the first one\n\tfor (const subdir of await pfs.readdir(msixAppDir)) {\n\t\tif (pwshMsixDirRegex.test(subdir)) {\n\t\t\tconst pwshMsixPath = path.join(msixAppDir, subdir, 'pwsh.exe');\n\t\t\treturn new PossiblePowerShellExe(pwshMsixPath, pwshMsixName);\n\t\t}\n\t}\n\n\t// If we find nothing, return null\n\treturn null;\n}\n\nfunction findPSCoreDotnetGlobalTool(): IPossiblePowerShellExe {\n\tconst dotnetGlobalToolExePath: string = path.join(os.homedir(), '.dotnet', 'tools', 'pwsh.exe');\n\n\treturn new PossiblePowerShellExe(dotnetGlobalToolExePath, '.NET Core PowerShell Global Tool');\n}\n\nfunction findWinPS(): IPossiblePowerShellExe | null {\n\tconst winPSPath = path.join(\n\t\tprocess.env.windir!,\n\t\tprocessArch === Arch.x86 && osArch !== Arch.x86 ? 'SysNative' : 'System32',\n\t\t'WindowsPowerShell', 'v1.0', 'powershell.exe');\n\n\treturn new PossiblePowerShellExe(winPSPath, 'Windows PowerShell', true);\n}\n\n/**\n * Iterates through all the possible well-known PowerShell installations on a machine.\n * Returned values may not exist, but come with an .exists property\n * which will check whether the executable exists.\n */\nasync function* enumerateDefaultPowerShellInstallations(): AsyncIterable<IPossiblePowerShellExe> {\n\t// Find PSCore stable first\n\tlet pwshExe = await findPSCoreWindowsInstallation();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Windows may have a 32-bit pwsh.exe\n\tpwshExe = await findPSCoreWindowsInstallation({ useAlternateBitness: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Also look for the MSIX/UWP installation\n\tpwshExe = await findPSCoreMsix();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for the .NET global tool\n\t// Some older versions of PowerShell have a bug in this where startup will fail,\n\t// but this is fixed in newer versions\n\tpwshExe = findPSCoreDotnetGlobalTool();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for PSCore preview\n\tpwshExe = await findPSCoreWindowsInstallation({ findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Find a preview MSIX\n\tpwshExe = await findPSCoreMsix({ findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for pwsh-preview with the opposite bitness\n\tpwshExe = await findPSCoreWindowsInstallation({ useAlternateBitness: true, findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Finally, get Windows PowerShell\n\tpwshExe = findWinPS();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n}\n\n/**\n * Iterates through PowerShell installations on the machine according\n * to configuration passed in through the constructor.\n * PowerShell items returned by this object are verified\n * to exist on the filesystem.\n */\nexport async function* enumeratePowerShellInstallations(): AsyncIterable<IPowerShellExeDetails> {\n\t// Get the default PowerShell installations first\n\tfor await (const defaultPwsh of enumerateDefaultPowerShellInstallations()) {\n\t\tif (await defaultPwsh.exists()) {\n\t\t\tyield defaultPwsh;\n\t\t}\n\t}\n}\n\n/**\n* Returns the first available PowerShell executable found in the search order.\n*/\nexport async function getFirstAvailablePowerShellInstallation(): Promise<IPowerShellExeDetails | null> {\n\tfor await (const pwsh of enumeratePowerShellInstallations()) {\n\t\treturn pwsh;\n\t}\n\treturn null;\n}\n","import { logger } from \"@coder/logger\"\nimport * as http from \"http\"\nimport * as proxyAgent from \"proxy-agent\"\nimport * as proxyFromEnv from \"proxy-from-env\"\n\n/**\n * This file has nothing to do with the code-server proxy.\n * It is to support $HTTP_PROXY, $HTTPS_PROXY and $NO_PROXY.\n *\n * - https://github.com/cdr/code-server/issues/124\n * - https://www.npmjs.com/package/proxy-agent\n * - https://www.npmjs.com/package/proxy-from-env\n *\n * This file exists in two locations:\n * - src/node/proxy_agent.ts\n * - lib/vscode/src/vs/base/node/proxy_agent.ts\n * The second is a symlink to the first.\n */\n\n/**\n * monkeyPatch patches the node http,https modules to route all requests through the\n * agent we get from the proxy-agent package.\n *\n * This approach only works if there is no code specifying an explicit agent when making\n * a request.\n *\n * None of our code ever passes in a explicit agent to the http,https modules.\n * VS Code's does sometimes but only when a user sets the http.proxy configuration.\n * See https://code.visualstudio.com/docs/setup/network#_legacy-proxy-server-support\n *\n * Even if they do, it's probably the same proxy so we should be fine! And those knobs\n * are deprecated anyway.\n */\nexport function monkeyPatch(inVSCode: boolean): void {\n  if (shouldEnableProxy()) {\n    const http = require(\"http\")\n    const https = require(\"https\")\n\n    // If we do not pass in a proxy URL, proxy-agent will get the URL from the environment.\n    // See https://www.npmjs.com/package/proxy-from-env.\n    // Also see shouldEnableProxy.\n    const pa = newProxyAgent(inVSCode)\n    http.globalAgent = pa\n    https.globalAgent = pa\n  }\n}\n\nfunction newProxyAgent(inVSCode: boolean): http.Agent {\n  // The reasoning for this split is that VS Code's build process does not have\n  // esModuleInterop enabled but the code-server one does. As a result depending on where\n  // we execute, we either have a default attribute or we don't.\n  //\n  // I can't enable esModuleInterop in VS Code's build process as it breaks and spits out\n  // a huge number of errors. And we can't use require as otherwise the modules won't be\n  // included in the final product.\n  if (inVSCode) {\n    return new (proxyAgent as any)()\n  } else {\n    return new (proxyAgent as any).default()\n  }\n}\n\n// If they have $NO_PROXY set to example.com then this check won't work!\n// But that's drastically unlikely.\nfunction shouldEnableProxy(): boolean {\n  let shouldEnable = false\n\n  const httpProxy = proxyFromEnv.getProxyForUrl(`http://example.com`)\n  if (httpProxy) {\n    shouldEnable = true\n    logger.debug(`using $HTTP_PROXY ${httpProxy}`)\n  }\n\n  const httpsProxy = proxyFromEnv.getProxyForUrl(`https://example.com`)\n  if (httpsProxy) {\n    shouldEnable = true\n    logger.debug(`using $HTTPS_PROXY ${httpsProxy}`)\n  }\n\n  return shouldEnable\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join, basename } from 'vs/base/common/path';\nimport { watch } from 'fs';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { toDisposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { exists, readdir } from 'vs/base/node/pfs';\n\nexport function watchFile(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: false }, onChange, onError);\n}\n\nexport function watchFolder(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: true }, onChange, onError);\n}\n\nexport const CHANGE_BUFFER_DELAY = 100;\n\nfunction doWatchNonRecursive(file: { path: string, isDirectory: boolean }, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\tconst originalFileName = basename(file.path);\n\tconst mapPathToStatDisposable = new Map<string, IDisposable>();\n\n\tlet disposed = false;\n\tlet watcherDisposables: IDisposable[] = [toDisposable(() => {\n\t\tmapPathToStatDisposable.forEach(disposable => dispose(disposable));\n\t\tmapPathToStatDisposable.clear();\n\t})];\n\n\ttry {\n\n\t\t// Creating watcher can fail with an exception\n\t\tconst watcher = watch(file.path);\n\t\twatcherDisposables.push(toDisposable(() => {\n\t\t\twatcher.removeAllListeners();\n\t\t\twatcher.close();\n\t\t}));\n\n\t\t// Folder: resolve children to emit proper events\n\t\tconst folderChildren: Set<string> = new Set<string>();\n\t\tif (file.isDirectory) {\n\t\t\treaddir(file.path).then(children => children.forEach(child => folderChildren.add(child)));\n\t\t}\n\n\t\twatcher.on('error', (code: number, signal: string) => {\n\t\t\tif (!disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${code}, ${signal})`);\n\t\t\t}\n\t\t});\n\n\t\twatcher.on('change', (type, raw) => {\n\t\t\tif (disposed) {\n\t\t\t\treturn; // ignore if already disposed\n\t\t\t}\n\n\t\t\t// Normalize file name\n\t\t\tlet changedFileName: string = '';\n\t\t\tif (raw) { // https://github.com/microsoft/vscode/issues/38191\n\t\t\t\tchangedFileName = raw.toString();\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\tchangedFileName = normalizeNFC(changedFileName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!changedFileName || (type !== 'change' && type !== 'rename')) {\n\t\t\t\treturn; // ignore unexpected events\n\t\t\t}\n\n\t\t\t// File path: use path directly for files and join with changed file name otherwise\n\t\t\tconst changedFilePath = file.isDirectory ? join(file.path, changedFileName) : file.path;\n\n\t\t\t// File\n\t\t\tif (!file.isDirectory) {\n\t\t\t\tif (type === 'rename' || changedFileName !== originalFileName) {\n\t\t\t\t\t// The file was either deleted or renamed. Many tools apply changes to files in an\n\t\t\t\t\t// atomic way (\"Atomic Save\") by first renaming the file to a temporary name and then\n\t\t\t\t\t// renaming it back to the original name. Our watcher will detect this as a rename\n\t\t\t\t\t// and then stops to work on Mac and Linux because the watcher is applied to the\n\t\t\t\t\t// inode and not the name. The fix is to detect this case and trying to watch the file\n\t\t\t\t\t// again after a certain delay.\n\t\t\t\t\t// In addition, we send out a delete event if after a timeout we detect that the file\n\t\t\t\t\t// does indeed not exist anymore.\n\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File still exists, so emit as change event and reapply the watcher\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tonChange('changed', changedFilePath);\n\n\t\t\t\t\t\t\twatcherDisposables = [doWatchNonRecursive(file, onChange, onError)];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File seems to be really gone, so emit a deleted event\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tonChange('deleted', changedFilePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\t// Very important to dispose the watcher which now points to a stale inode\n\t\t\t\t\t// and wire in a new disposable that tracks our timeout that is installed\n\t\t\t\t\tdispose(watcherDisposables);\n\t\t\t\t\twatcherDisposables = [toDisposable(() => clearTimeout(timeoutHandle))];\n\t\t\t\t} else {\n\t\t\t\t\tonChange('changed', changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Folder\n\t\t\telse {\n\n\t\t\t\t// Children add/delete\n\t\t\t\tif (type === 'rename') {\n\n\t\t\t\t\t// Cancel any previous stats for this file path if existing\n\t\t\t\t\tconst statDisposable = mapPathToStatDisposable.get(changedFilePath);\n\t\t\t\t\tif (statDisposable) {\n\t\t\t\t\t\tdispose(statDisposable);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait a bit and try see if the file still exists on disk to decide on the resulting event\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tmapPathToStatDisposable.delete(changedFilePath);\n\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Figure out the correct event type:\n\t\t\t\t\t\t// File Exists: either 'added' or 'changed' if known before\n\t\t\t\t\t\t// File Does not Exist: always 'deleted'\n\t\t\t\t\t\tlet type: 'added' | 'deleted' | 'changed';\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfolderChildren.delete(changedFileName);\n\t\t\t\t\t\t\ttype = 'deleted';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\tmapPathToStatDisposable.set(changedFilePath, toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t}\n\n\t\t\t\t// Other events\n\t\t\t\telse {\n\n\t\t\t\t\t// Figure out the correct event type: if this is the\n\t\t\t\t\t// first time we see this child, it can only be added\n\t\t\t\t\tlet type: 'added' | 'changed';\n\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t}\n\n\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\texists(file.path).then(exists => {\n\t\t\tif (exists && !disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${error.toString()})`);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn toDisposable(() => {\n\t\tdisposed = true;\n\n\t\twatcherDisposables = dispose(watcherDisposables);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter, Relay, EventMultiplexer } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { isFunction, isUndefinedOrNull } from 'vs/base/common/types';\nimport { revive } from 'vs/base/common/marshalling';\nimport * as strings from 'vs/base/common/strings';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\nfunction requestTypeToStr(type: RequestType): string {\n\tswitch (type) {\n\t\tcase RequestType.Promise:\n\t\t\treturn 'req';\n\t\tcase RequestType.PromiseCancel:\n\t\t\treturn 'cancel';\n\t\tcase RequestType.EventListen:\n\t\t\treturn 'subscribe';\n\t\tcase RequestType.EventDispose:\n\t\t\treturn 'unsubscribe';\n\t}\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\nfunction responseTypeToStr(type: ResponseType): string {\n\tswitch (type) {\n\t\tcase ResponseType.Initialize:\n\t\t\treturn `init`;\n\t\tcase ResponseType.PromiseSuccess:\n\t\t\treturn `reply:`;\n\t\tcase ResponseType.PromiseError:\n\t\tcase ResponseType.PromiseErrorObj:\n\t\t\treturn `replyErr:`;\n\t\tcase ResponseType.EventFire:\n\t\t\treturn `event:`;\n\t}\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n\t/**\n\t * Wait for the write buffer (if applicable) to become empty.\n\t */\n\tdrain?(): Promise<void>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private logger: IIPCLogger | null = null, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize: {\n\t\t\t\tconst msgLength = this.send([response.type]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, 0, RequestInitiator.OtherSide, responseTypeToStr(response.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj: {\n\t\t\t\tconst msgLength = this.send([response.type, response.id], response.data);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, response.id, RequestInitiator.OtherSide, responseTypeToStr(response.type), response.data);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport interface IIPCLogger {\n\tlogIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate isDisposed: boolean = false;\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\tprivate logger: IIPCLogger | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol, logger: IIPCLogger | null = null) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t\tthis.logger = logger;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Promise.reject(errors.canceled());\n\t\t\t\t}\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Promise.reject(errors.canceled());\n\t\t\t\t}\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tconst doRequest = () => {\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t};\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\t\t\tif (this.state === State.Idle) {\n\t\t\t\tdoRequest();\n\t\t\t} else {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tdoRequest();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, `${requestTypeToStr(request.type)}: ${request.channelName}.${request.name}`, request.arg);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, requestTypeToStr(request.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, 0, RequestInitiator.LocalSide, responseTypeToStr(type));\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.LocalSide, responseTypeToStr(type), body);\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tlet connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol, ipcLogger);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx, ipcLogger);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n\n/**\n * Use ProxyChannels to automatically wrapping and unwrapping\n * services to/from IPC channels, instead of manually wrapping\n * each service method and event.\n *\n * Restrictions:\n * - If marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - Events must follow the naming convention `onUpperCase`\n * - `CancellationToken` is currently not supported\n * - If a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\nexport namespace ProxyChannel {\n\n\texport interface IProxyOptions {\n\n\t\t/**\n\t\t * Disables automatic marshalling of `URI`.\n\t\t * If marshalling is disabled, `UriComponents`\n\t\t * must be used instead.\n\t\t */\n\t\tdisableMarshalling?: boolean;\n\t}\n\n\texport interface ICreateServiceChannelOptions extends IProxyOptions { }\n\n\texport function fromService(service: unknown, options?: ICreateServiceChannelOptions): IServerChannel {\n\t\tconst handler = service as { [key: string]: unknown };\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\t// Buffer any event that should be supported by\n\t\t// iterating over all property keys and finding them\n\t\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\t\tfor (const key in handler) {\n\t\t\tif (propertyIsEvent(key)) {\n\t\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t\t}\n\t\t}\n\n\t\treturn new class implements IServerChannel {\n\n\t\t\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\t\tif (eventImpl) {\n\t\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t\t}\n\n\t\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\t\tconst target = handler[command];\n\t\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn target.apply(handler, args);\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t\t}\n\t\t};\n\t}\n\n\texport interface ICreateProxyServiceOptions extends IProxyOptions {\n\n\t\t/**\n\t\t * If provided, will add the value of `context`\n\t\t * to each method call to the target.\n\t\t */\n\t\tcontext?: unknown;\n\n\t\t/**\n\t\t * If provided, will not proxy any of the properties\n\t\t * that are part of the Map but rather return that value.\n\t\t */\n\t\tproperties?: Map<string, unknown>;\n\t}\n\n\texport function toService<T>(channel: IChannel, options?: ICreateProxyServiceOptions): T {\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\treturn new Proxy({}, {\n\t\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t\t// Check for predefined values\n\t\t\t\t\tif (options?.properties?.has(propKey)) {\n\t\t\t\t\t\treturn options.properties.get(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Event\n\t\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Function\n\t\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t\t// Add context if any\n\t\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t\t}\n\t\t}) as T;\n\t}\n\n\tfunction propertyIsEvent(name: string): boolean {\n\t\t// Assume a property is an event if it has a form of \"onSomething\"\n\t\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n\t}\n}\n\nconst colorTables = [\n\t['#2977B1', '#FC802D', '#34A13A', '#D3282F', '#9366BA'],\n\t['#8B564C', '#E177C0', '#7F7F7F', '#BBBE3D', '#2EBECD']\n];\n\nfunction prettyWithoutArrays(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data;\n\t}\n\tif (data && typeof data === 'object' && typeof data.toString === 'function') {\n\t\tlet result = data.toString();\n\t\tif (result !== '[object Object]') {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction pretty(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data.map(prettyWithoutArrays);\n\t}\n\treturn prettyWithoutArrays(data);\n}\n\nexport function logWithColors(direction: string, totalLength: number, msgLength: number, req: number, initiator: RequestInitiator, str: string, data: any): void {\n\tdata = pretty(data);\n\n\tconst colorTable = colorTables[initiator];\n\tconst color = colorTable[req % colorTable.length];\n\tlet args = [`%c[${direction}]%c[${String(totalLength).padStart(7, ' ')}]%c[len: ${String(msgLength).padStart(5, ' ')}]%c${String(req).padStart(5, ' ')} - ${str}`, 'color: darkgreen', 'color: grey', 'color: grey', `color: ${color}`];\n\tif (/\\($/.test(str)) {\n\t\targs = args.concat(data);\n\t\targs.push(')');\n\t} else {\n\t\targs.push(data);\n\t}\n\tconsole.log.apply(console, args as [string, ...string[]]);\n}\n\nexport class IPCLogger implements IIPCLogger {\n\tprivate _totalIncoming = 0;\n\tprivate _totalOutgoing = 0;\n\n\tconstructor(\n\t\tprivate readonly _outgoingPrefix: string,\n\t\tprivate readonly _incomingPrefix: string,\n\t) { }\n\n\tpublic logOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalOutgoing += msgLength;\n\t\tlogWithColors(this._outgoingPrefix, this._totalOutgoing, msgLength, requestId, initiator, str, data);\n\t}\n\n\tpublic logIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalIncoming += msgLength;\n\t\tlogWithColors(this._incomingPrefix, this._totalIncoming, msgLength, requestId, initiator, str, data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IMessagePassingProtocol, IPCClient, IIPCLogger } from 'vs/base/parts/ipc/common/ipc';\nimport { IDisposable, Disposable, dispose } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport * as platform from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\n\nexport interface ISocket extends IDisposable {\n\tonData(listener: (e: VSBuffer) => void): IDisposable;\n\tonClose(listener: () => void): IDisposable;\n\tonEnd(listener: () => void): IDisposable;\n\twrite(buffer: VSBuffer): void;\n\tend(): void;\n\tdrain(): Promise<void>;\n}\n\nlet emptyBuffer: VSBuffer | null = null;\nfunction getEmptyBuffer(): VSBuffer {\n\tif (!emptyBuffer) {\n\t\temptyBuffer = VSBuffer.alloc(0);\n\t}\n\treturn emptyBuffer;\n}\n\nexport class ChunkStream {\n\n\tprivate _chunks: VSBuffer[];\n\tprivate _totalLength: number;\n\n\tpublic get byteLength() {\n\t\treturn this._totalLength;\n\t}\n\n\tconstructor() {\n\t\tthis._chunks = [];\n\t\tthis._totalLength = 0;\n\t}\n\n\tpublic acceptChunk(buff: VSBuffer) {\n\t\tthis._chunks.push(buff);\n\t\tthis._totalLength += buff.byteLength;\n\t}\n\n\tpublic read(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, true);\n\t}\n\n\tpublic peek(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, false);\n\t}\n\n\tprivate _read(byteCount: number, advance: boolean): VSBuffer {\n\n\t\tif (byteCount === 0) {\n\t\t\treturn getEmptyBuffer();\n\t\t}\n\n\t\tif (byteCount > this._totalLength) {\n\t\t\tthrow new Error(`Cannot read so many bytes!`);\n\t\t}\n\n\t\tif (this._chunks[0].byteLength === byteCount) {\n\t\t\t// super fast path, precisely first chunk must be returned\n\t\t\tconst result = this._chunks[0];\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks.shift();\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif (this._chunks[0].byteLength > byteCount) {\n\t\t\t// fast path, the reading is entirely within the first chunk\n\t\t\tconst result = this._chunks[0].slice(0, byteCount);\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks[0] = this._chunks[0].slice(byteCount);\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tlet result = VSBuffer.alloc(byteCount);\n\t\tlet resultOffset = 0;\n\t\tlet chunkIndex = 0;\n\t\twhile (byteCount > 0) {\n\t\t\tconst chunk = this._chunks[chunkIndex];\n\t\t\tif (chunk.byteLength > byteCount) {\n\t\t\t\t// this chunk will survive\n\t\t\t\tconst chunkPart = chunk.slice(0, byteCount);\n\t\t\t\tresult.set(chunkPart, resultOffset);\n\t\t\t\tresultOffset += byteCount;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks[chunkIndex] = chunk.slice(byteCount);\n\t\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= byteCount;\n\t\t\t} else {\n\t\t\t\t// this chunk will be entirely read\n\t\t\t\tresult.set(chunk, resultOffset);\n\t\t\t\tresultOffset += chunk.byteLength;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks.shift();\n\t\t\t\t\tthis._totalLength -= chunk.byteLength;\n\t\t\t\t} else {\n\t\t\t\t\tchunkIndex++;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= chunk.byteLength;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nconst enum ProtocolMessageType {\n\tNone = 0,\n\tRegular = 1,\n\tControl = 2,\n\tAck = 3,\n\tKeepAlive = 4,\n\tDisconnect = 5,\n\tReplayRequest = 6\n}\n\nexport const enum ProtocolConstants {\n\tHeaderLength = 13,\n\t/**\n\t * Send an Acknowledge message at most 2 seconds later...\n\t */\n\tAcknowledgeTime = 2000, // 2 seconds\n\t/**\n\t * If there is a message that has been unacknowledged for 10 seconds, consider the connection closed...\n\t */\n\tAcknowledgeTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * Send at least a message every 5s for keep alive reasons.\n\t */\n\tKeepAliveTime = 5000, // 5 seconds\n\t/**\n\t * If there is no message received for 10 seconds, consider the connection closed...\n\t */\n\tKeepAliveTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t */\n\tReconnectionGraceTime = 3 * 60 * 60 * 1000, // 3hrs\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t */\n\tReconnectionShortGraceTime = 5 * 60 * 1000, // 5min\n}\n\nclass ProtocolMessage {\n\n\tpublic writtenTime: number;\n\n\tconstructor(\n\t\tpublic readonly type: ProtocolMessageType,\n\t\tpublic readonly id: number,\n\t\tpublic readonly ack: number,\n\t\tpublic readonly data: VSBuffer\n\t) {\n\t\tthis.writtenTime = 0;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this.data.byteLength;\n\t}\n}\n\nclass ProtocolReader extends Disposable {\n\n\tprivate readonly _socket: ISocket;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _incomingData: ChunkStream;\n\tpublic lastReadTime: number;\n\n\tprivate readonly _onMessage = this._register(new Emitter<ProtocolMessage>());\n\tpublic readonly onMessage: Event<ProtocolMessage> = this._onMessage.event;\n\n\tprivate readonly _state = {\n\t\treadHead: true,\n\t\treadLen: ProtocolConstants.HeaderLength,\n\t\tmessageType: ProtocolMessageType.None,\n\t\tid: 0,\n\t\tack: 0\n\t};\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._isDisposed = false;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this._socket.onData(data => this.acceptChunk(data)));\n\t\tthis.lastReadTime = Date.now();\n\t}\n\n\tpublic acceptChunk(data: VSBuffer | null): void {\n\t\tif (!data || data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastReadTime = Date.now();\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tconst buff = this._incomingData.read(this._state.readLen);\n\n\t\t\tif (this._state.readHead) {\n\t\t\t\t// buff is the header\n\n\t\t\t\t// save new state => next time will read the body\n\t\t\t\tthis._state.readHead = false;\n\t\t\t\tthis._state.readLen = buff.readUInt32BE(9);\n\t\t\t\tthis._state.messageType = buff.readUInt8(0);\n\t\t\t\tthis._state.id = buff.readUInt32BE(1);\n\t\t\t\tthis._state.ack = buff.readUInt32BE(5);\n\t\t\t} else {\n\t\t\t\t// buff is the body\n\t\t\t\tconst messageType = this._state.messageType;\n\t\t\t\tconst id = this._state.id;\n\t\t\t\tconst ack = this._state.ack;\n\n\t\t\t\t// save new state => next time will read the header\n\t\t\t\tthis._state.readHead = true;\n\t\t\t\tthis._state.readLen = ProtocolConstants.HeaderLength;\n\t\t\t\tthis._state.messageType = ProtocolMessageType.None;\n\t\t\t\tthis._state.id = 0;\n\t\t\t\tthis._state.ack = 0;\n\n\t\t\t\tthis._onMessage.fire(new ProtocolMessage(messageType, id, ack, buff));\n\n\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t// check if an event listener lead to our disposal\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readEntireBuffer(): VSBuffer {\n\t\treturn this._incomingData.read(this._incomingData.byteLength);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n}\n\nclass ProtocolWriter {\n\n\tprivate _isDisposed: boolean;\n\tprivate readonly _socket: ISocket;\n\tprivate _data: VSBuffer[];\n\tprivate _totalLength: number;\n\tpublic lastWriteTime: number;\n\n\tconstructor(socket: ISocket) {\n\t\tthis._isDisposed = false;\n\t\tthis._socket = socket;\n\t\tthis._data = [];\n\t\tthis._totalLength = 0;\n\t\tthis.lastWriteTime = 0;\n\t}\n\n\tpublic dispose(): void {\n\t\ttry {\n\t\t\tthis.flush();\n\t\t} catch (err) {\n\t\t\t// ignore error, since the socket could be already closed\n\t\t}\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\tthis.flush();\n\t\treturn this._socket.drain();\n\t}\n\n\tpublic flush(): void {\n\t\t// flush\n\t\tthis._writeNow();\n\t}\n\n\tpublic write(msg: ProtocolMessage) {\n\t\tif (this._isDisposed) {\n\t\t\t// ignore: there could be left-over promises which complete and then\n\t\t\t// decide to write a response, etc...\n\t\t\treturn;\n\t\t}\n\t\tmsg.writtenTime = Date.now();\n\t\tthis.lastWriteTime = Date.now();\n\t\tconst header = VSBuffer.alloc(ProtocolConstants.HeaderLength);\n\t\theader.writeUInt8(msg.type, 0);\n\t\theader.writeUInt32BE(msg.id, 1);\n\t\theader.writeUInt32BE(msg.ack, 5);\n\t\theader.writeUInt32BE(msg.data.byteLength, 9);\n\t\tthis._writeSoon(header, msg.data);\n\t}\n\n\tprivate _bufferAdd(head: VSBuffer, body: VSBuffer): boolean {\n\t\tconst wasEmpty = this._totalLength === 0;\n\t\tthis._data.push(head, body);\n\t\tthis._totalLength += head.byteLength + body.byteLength;\n\t\treturn wasEmpty;\n\t}\n\n\tprivate _bufferTake(): VSBuffer {\n\t\tconst ret = VSBuffer.concat(this._data, this._totalLength);\n\t\tthis._data.length = 0;\n\t\tthis._totalLength = 0;\n\t\treturn ret;\n\t}\n\n\tprivate _writeSoon(header: VSBuffer, data: VSBuffer): void {\n\t\tif (this._bufferAdd(header, data)) {\n\t\t\tplatform.setImmediate(() => {\n\t\t\t\tthis._writeNow();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _writeNow(): void {\n\t\tif (this._totalLength === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._socket.write(this._bufferTake());\n\t}\n}\n\n/**\n * A message has the following format:\n * ```\n *     /-------------------------------|------\\\n *     |             HEADER            |      |\n *     |-------------------------------| DATA |\n *     | TYPE | ID | ACK | DATA_LENGTH |      |\n *     \\-------------------------------|------/\n * ```\n * The header is 9 bytes and consists of:\n *  - TYPE is 1 byte (ProtocolMessageType) - the message type\n *  - ID is 4 bytes (u32be) - the message id (can be 0 to indicate to be ignored)\n *  - ACK is 4 bytes (u32be) - the acknowledged message id (can be 0 to indicate to be ignored)\n *  - DATA_LENGTH is 4 bytes (u32be) - the length in bytes of DATA\n *\n * Only Regular messages are counted, other messages are not counted, nor acknowledged.\n */\nexport class Protocol extends Disposable implements IMessagePassingProtocol {\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\n\tprivate readonly _onMessage = new Emitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onDidDispose = new Emitter<void>();\n\treadonly onDidDispose: Event<void> = this._onDidDispose.event;\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = this._register(new ProtocolWriter(this._socket));\n\t\tthis._socketReader = this._register(new ProtocolReader(this._socket));\n\n\t\tthis._register(this._socketReader.onMessage((msg) => {\n\t\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._socket.onClose(() => this._onDidDispose.fire()));\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tgetSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tsendDisconnect(): void {\n\t\t// Nothing to do...\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.Regular, 0, 0, buffer));\n\t}\n}\n\nexport class Client<TContext = string> extends IPCClient<TContext> {\n\n\tstatic fromSocket<TContext = string>(socket: ISocket, id: TContext): Client<TContext> {\n\t\treturn new Client(new Protocol(socket), id);\n\t}\n\n\tget onDidDispose(): Event<void> { return this.protocol.onDidDispose; }\n\n\tconstructor(private protocol: Protocol | PersistentProtocol, id: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tsuper(protocol, id, ipcLogger);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tconst socket = this.protocol.getSocket();\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tsocket.end();\n\t}\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nexport class BufferedEmitter<T> {\n\tprivate _emitter: Emitter<T>;\n\tpublic readonly event: Event<T>;\n\n\tprivate _hasListeners = false;\n\tprivate _isDeliveringMessages = false;\n\tprivate _bufferedMessages: T[] = [];\n\n\tconstructor() {\n\t\tthis._emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis._hasListeners = true;\n\t\t\t\t// it is important to deliver these messages after this call, but before\n\t\t\t\t// other messages have a chance to be received (to guarantee in order delivery)\n\t\t\t\t// that's why we're using here nextTick and not other types of timeouts\n\t\t\t\tprocess.nextTick(() => this._deliverMessages());\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis._hasListeners = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.event = this._emitter.event;\n\t}\n\n\tprivate _deliverMessages(): void {\n\t\tif (this._isDeliveringMessages) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDeliveringMessages = true;\n\t\twhile (this._hasListeners && this._bufferedMessages.length > 0) {\n\t\t\tthis._emitter.fire(this._bufferedMessages.shift()!);\n\t\t}\n\t\tthis._isDeliveringMessages = false;\n\t}\n\n\tpublic fire(event: T): void {\n\t\tif (this._hasListeners) {\n\t\t\tif (this._bufferedMessages.length > 0) {\n\t\t\t\tthis._bufferedMessages.push(event);\n\t\t\t} else {\n\t\t\t\tthis._emitter.fire(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._bufferedMessages.push(event);\n\t\t}\n\t}\n\n\tpublic flushBuffer(): void {\n\t\tthis._bufferedMessages = [];\n\t}\n}\n\nclass QueueElement<T> {\n\tpublic readonly data: T;\n\tpublic next: QueueElement<T> | null;\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t\tthis.next = null;\n\t}\n}\n\nclass Queue<T> {\n\n\tprivate _first: QueueElement<T> | null;\n\tprivate _last: QueueElement<T> | null;\n\n\tconstructor() {\n\t\tthis._first = null;\n\t\tthis._last = null;\n\t}\n\n\tpublic peek(): T | null {\n\t\tif (!this._first) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._first.data;\n\t}\n\n\tpublic toArray(): T[] {\n\t\tlet result: T[] = [], resultLen = 0;\n\t\tlet it = this._first;\n\t\twhile (it) {\n\t\t\tresult[resultLen++] = it.data;\n\t\t\tit = it.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic pop(): void {\n\t\tif (!this._first) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._first === this._last) {\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t\treturn;\n\t\t}\n\t\tthis._first = this._first.next;\n\t}\n\n\tpublic push(item: T): void {\n\t\tconst element = new QueueElement(item);\n\t\tif (!this._first) {\n\t\t\tthis._first = element;\n\t\t\tthis._last = element;\n\t\t\treturn;\n\t\t}\n\t\tthis._last!.next = element;\n\t\tthis._last = element;\n\t}\n}\n\nclass LoadEstimator {\n\n\tprivate static _HISTORY_LENGTH = 10;\n\tprivate static _INSTANCE: LoadEstimator | null = null;\n\tpublic static getInstance(): LoadEstimator {\n\t\tif (!LoadEstimator._INSTANCE) {\n\t\t\tLoadEstimator._INSTANCE = new LoadEstimator();\n\t\t}\n\t\treturn LoadEstimator._INSTANCE;\n\t}\n\n\tprivate lastRuns: number[];\n\n\tconstructor() {\n\t\tthis.lastRuns = [];\n\t\tconst now = Date.now();\n\t\tfor (let i = 0; i < LoadEstimator._HISTORY_LENGTH; i++) {\n\t\t\tthis.lastRuns[i] = now - 1000 * i;\n\t\t}\n\t\tsetInterval(() => {\n\t\t\tfor (let i = LoadEstimator._HISTORY_LENGTH; i >= 1; i--) {\n\t\t\t\tthis.lastRuns[i] = this.lastRuns[i - 1];\n\t\t\t}\n\t\t\tthis.lastRuns[0] = Date.now();\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * returns an estimative number, from 0 (low load) to 1 (high load)\n\t */\n\tpublic load(): number {\n\t\tconst now = Date.now();\n\t\tconst historyLimit = (1 + LoadEstimator._HISTORY_LENGTH) * 1000;\n\t\tlet score = 0;\n\t\tfor (let i = 0; i < LoadEstimator._HISTORY_LENGTH; i++) {\n\t\t\tif (now - this.lastRuns[i] <= historyLimit) {\n\t\t\t\tscore++;\n\t\t\t}\n\t\t}\n\t\treturn 1 - score / LoadEstimator._HISTORY_LENGTH;\n\t}\n\n\tpublic hasHighLoad(): boolean {\n\t\treturn this.load() >= 0.5;\n\t}\n}\n\n/**\n * Same as Protocol, but will actually track messages and acks.\n * Moreover, it will ensure no messages are lost if there are no event listeners.\n */\nexport class PersistentProtocol implements IMessagePassingProtocol {\n\n\tprivate _isReconnecting: boolean;\n\n\tprivate _outgoingUnackMsg: Queue<ProtocolMessage>;\n\tprivate _outgoingMsgId: number;\n\tprivate _outgoingAckId: number;\n\tprivate _outgoingAckTimeout: any | null;\n\n\tprivate _incomingMsgId: number;\n\tprivate _incomingAckId: number;\n\tprivate _incomingMsgLastTime: number;\n\tprivate _incomingAckTimeout: any | null;\n\n\tprivate _outgoingKeepAliveTimeout: any | null;\n\tprivate _incomingKeepAliveTimeout: any | null;\n\n\tprivate _lastReplayRequestTime: number;\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\tprivate _socketDisposables: IDisposable[];\n\n\tprivate readonly _loadEstimator = LoadEstimator.getInstance();\n\n\tprivate readonly _onControlMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onControlMessage: Event<VSBuffer> = this._onControlMessage.event;\n\n\tprivate readonly _onMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onDidDispose = new BufferedEmitter<void>();\n\treadonly onDidDispose: Event<void> = this._onDidDispose.event;\n\n\tprivate readonly _onSocketClose = new BufferedEmitter<void>();\n\treadonly onSocketClose: Event<void> = this._onSocketClose.event;\n\n\tprivate readonly _onSocketTimeout = new BufferedEmitter<void>();\n\treadonly onSocketTimeout: Event<void> = this._onSocketTimeout.event;\n\n\tpublic get unacknowledgedCount(): number {\n\t\treturn this._outgoingMsgId - this._outgoingAckId;\n\t}\n\n\tconstructor(socket: ISocket, initialChunk: VSBuffer | null = null) {\n\t\tthis._isReconnecting = false;\n\t\tthis._outgoingUnackMsg = new Queue<ProtocolMessage>();\n\t\tthis._outgoingMsgId = 0;\n\t\tthis._outgoingAckId = 0;\n\t\tthis._outgoingAckTimeout = null;\n\n\t\tthis._incomingMsgId = 0;\n\t\tthis._incomingAckId = 0;\n\t\tthis._incomingMsgLastTime = 0;\n\t\tthis._incomingAckTimeout = null;\n\n\t\tthis._outgoingKeepAliveTimeout = null;\n\t\tthis._incomingKeepAliveTimeout = null;\n\n\t\tthis._lastReplayRequestTime = 0;\n\n\t\tthis._socketDisposables = [];\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tif (initialChunk) {\n\t\t\tthis._socketReader.acceptChunk(initialChunk);\n\t\t}\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tdispose(): void {\n\t\tif (this._outgoingAckTimeout) {\n\t\t\tclearTimeout(this._outgoingAckTimeout);\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t}\n\t\tif (this._incomingAckTimeout) {\n\t\t\tclearTimeout(this._incomingAckTimeout);\n\t\t\tthis._incomingAckTimeout = null;\n\t\t}\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._outgoingKeepAliveTimeout);\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t}\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._incomingKeepAliveTimeout);\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t}\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tsendDisconnect(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Disconnect, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t\tthis._socketWriter.flush();\n\t}\n\n\tprivate _sendKeepAliveCheck(): void {\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastOutgoingMsg = Date.now() - this._socketWriter.lastWriteTime;\n\t\tif (timeSinceLastOutgoingMsg >= ProtocolConstants.KeepAliveTime) {\n\t\t\t// sufficient time has passed since last message was written,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only a keep alive.\n\t\t\tconst msg = new ProtocolMessage(ProtocolMessageType.KeepAlive, 0, 0, getEmptyBuffer());\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._sendKeepAliveCheck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._outgoingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t\tthis._sendKeepAliveCheck();\n\t\t}, ProtocolConstants.KeepAliveTime - timeSinceLastOutgoingMsg + 5);\n\t}\n\n\tprivate _recvKeepAliveCheck(): void {\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._socketReader.lastReadTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.KeepAliveTimeoutTime) {\n\t\t\t// It's been a long time since we received a server message\n\t\t\t// But this might be caused by the event loop being busy and failing to read messages\n\t\t\tif (!this._loadEstimator.hasHighLoad()) {\n\t\t\t\t// Trash the socket\n\t\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._incomingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t\tthis._recvKeepAliveCheck();\n\t\t}, Math.max(ProtocolConstants.KeepAliveTimeoutTime - timeSinceLastIncomingMsg, 0) + 5);\n\t}\n\n\t// NOTE@coder: Set the socket without initiating a reconnect.\n\tpublic setSocket(socket: ISocket): void {\n\t\tthis._socket = socket;\n\t}\n\n\tpublic getSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tpublic getMillisSinceLastIncomingData(): number {\n\t\treturn Date.now() - this._socketReader.lastReadTime;\n\t}\n\n\tpublic beginAcceptReconnection(socket: ISocket, initialDataChunk: VSBuffer | null): void {\n\t\tthis._isReconnecting = true;\n\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t\tthis._onControlMessage.flushBuffer();\n\t\tthis._onSocketClose.flushBuffer();\n\t\tthis._onSocketTimeout.flushBuffer();\n\t\tthis._socket.dispose();\n\n\t\tthis._lastReplayRequestTime = 0;\n\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tthis._socketReader.acceptChunk(initialDataChunk);\n\t}\n\n\tpublic endAcceptReconnection(): void {\n\t\tthis._isReconnecting = false;\n\n\t\t// Send again all unacknowledged messages\n\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t}\n\t\tthis._recvAckCheck();\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tpublic acceptDisconnect(): void {\n\t\tthis._onDidDispose.fire();\n\t}\n\n\tprivate _receiveMessage(msg: ProtocolMessage): void {\n\t\tif (msg.ack > this._outgoingAckId) {\n\t\t\tthis._outgoingAckId = msg.ack;\n\t\t\tdo {\n\t\t\t\tconst first = this._outgoingUnackMsg.peek();\n\t\t\t\tif (first && first.id <= msg.ack) {\n\t\t\t\t\t// this message has been confirmed, remove it\n\t\t\t\t\tthis._outgoingUnackMsg.pop();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (true);\n\t\t}\n\n\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\tif (msg.id > this._incomingMsgId) {\n\t\t\t\tif (msg.id !== this._incomingMsgId + 1) {\n\t\t\t\t\t// in case we missed some messages we ask the other party to resend them\n\t\t\t\t\tconst now = Date.now();\n\t\t\t\t\tif (now - this._lastReplayRequestTime > 10000) {\n\t\t\t\t\t\t// send a replay request at most once every 10s\n\t\t\t\t\t\tthis._lastReplayRequestTime = now;\n\t\t\t\t\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.ReplayRequest, 0, 0, getEmptyBuffer()));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._incomingMsgId = msg.id;\n\t\t\t\t\tthis._incomingMsgLastTime = Date.now();\n\t\t\t\t\tthis._sendAckCheck();\n\t\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (msg.type === ProtocolMessageType.Control) {\n\t\t\tthis._onControlMessage.fire(msg.data);\n\t\t} else if (msg.type === ProtocolMessageType.Disconnect) {\n\t\t\tthis._onDidDispose.fire();\n\t\t} else if (msg.type === ProtocolMessageType.ReplayRequest) {\n\t\t\t// Send again all unacknowledged messages\n\t\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t\t}\n\t\t\tthis._recvAckCheck();\n\t\t}\n\t}\n\n\treadEntireBuffer(): VSBuffer {\n\t\treturn this._socketReader.readEntireBuffer();\n\t}\n\n\tflush(): void {\n\t\tthis._socketWriter.flush();\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tconst myId = ++this._outgoingMsgId;\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Regular, myId, this._incomingAckId, buffer);\n\t\tthis._outgoingUnackMsg.push(msg);\n\t\tif (!this._isReconnecting) {\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._recvAckCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Send a message which will not be part of the regular acknowledge flow.\n\t * Use this for early control messages which are repeated in case of reconnection.\n\t */\n\tsendControl(buffer: VSBuffer): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Control, 0, 0, buffer);\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tprivate _sendAckCheck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._incomingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._incomingMsgLastTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.AcknowledgeTime) {\n\t\t\t// sufficient time has passed since this message has been received,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only an ack.\n\t\t\tthis._sendAck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckTimeout = setTimeout(() => {\n\t\t\tthis._incomingAckTimeout = null;\n\t\t\tthis._sendAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tprivate _recvAckCheck(): void {\n\t\tif (this._outgoingMsgId <= this._outgoingAckId) {\n\t\t\t// everything has been acknowledged\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._outgoingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldestUnacknowledgedMsg = this._outgoingUnackMsg.peek()!;\n\t\tconst timeSinceOldestUnacknowledgedMsg = Date.now() - oldestUnacknowledgedMsg.writtenTime;\n\t\tif (timeSinceOldestUnacknowledgedMsg >= ProtocolConstants.AcknowledgeTimeoutTime) {\n\t\t\t// It's been a long time since our sent message was acknowledged\n\t\t\t// But this might be caused by the event loop being busy and failing to read messages\n\t\t\tif (!this._loadEstimator.hasHighLoad()) {\n\t\t\t\t// Trash the socket\n\t\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._outgoingAckTimeout = setTimeout(() => {\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t\tthis._recvAckCheck();\n\t\t}, Math.max(ProtocolConstants.AcknowledgeTimeoutTime - timeSinceOldestUnacknowledgedMsg, 0) + 5);\n\t}\n\n\tprivate _sendAck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Ack, 0, this._incomingAckId, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\n\nexport enum StorageHint {\n\n\t// A hint to the storage that the storage\n\t// does not exist on disk yet. This allows\n\t// the storage library to improve startup\n\t// time by not checking the storage for data.\n\tSTORAGE_DOES_NOT_EXIST\n}\n\nexport interface IStorageOptions {\n\treadonly hint?: StorageHint;\n}\n\nexport interface IUpdateRequest {\n\treadonly insert?: Map<string, string>;\n\treadonly delete?: Set<string>;\n}\n\nexport interface IStorageItemsChangeEvent {\n\treadonly changed?: Map<string, string>;\n\treadonly deleted?: Set<string>;\n}\n\nexport interface IStorageDatabase {\n\n\treadonly onDidChangeItemsExternal: Event<IStorageItemsChangeEvent>;\n\n\tgetItems(): Promise<Map<string, string>>;\n\tupdateItems(request: IUpdateRequest): Promise<void>;\n\n\tclose(recovery?: () => Map<string, string>): Promise<void>;\n}\n\nexport interface IStorage extends IDisposable {\n\n\treadonly onDidChangeStorage: Event<string>;\n\n\treadonly items: Map<string, string>;\n\treadonly size: number;\n\n\tinit(): Promise<void>;\n\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\n\tgetBoolean(key: string, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined;\n\n\tgetNumber(key: string, fallbackValue: number): number;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined;\n\n\tset(key: string, value: string | boolean | number | undefined | null): Promise<void>;\n\tdelete(key: string): Promise<void>;\n\n\twhenFlushed(): Promise<void>;\n\n\tclose(): Promise<void>;\n}\n\nenum StorageState {\n\tNone,\n\tInitialized,\n\tClosed\n}\n\nexport class Storage extends Disposable implements IStorage {\n\n\tprivate static readonly DEFAULT_FLUSH_DELAY = 100;\n\n\tprivate readonly _onDidChangeStorage = this._register(new Emitter<string>());\n\treadonly onDidChangeStorage = this._onDidChangeStorage.event;\n\n\tprivate state = StorageState.None;\n\n\tprivate cache = new Map<string, string>();\n\n\tprivate readonly flushDelayer = new ThrottledDelayer<void>(Storage.DEFAULT_FLUSH_DELAY);\n\n\tprivate pendingDeletes = new Set<string>();\n\tprivate pendingInserts = new Map<string, string>();\n\n\tprivate pendingClose: Promise<void> | undefined = undefined;\n\n\tprivate readonly whenFlushedCallbacks: Function[] = [];\n\n\tconstructor(\n\t\tprotected readonly database: IStorageDatabase,\n\t\tprivate readonly options: IStorageOptions = Object.create(null)\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.database.onDidChangeItemsExternal(e => this.onDidChangeItemsExternal(e)));\n\t}\n\n\tprivate onDidChangeItemsExternal(e: IStorageItemsChangeEvent): void {\n\t\t// items that change external require us to update our\n\t\t// caches with the values. we just accept the value and\n\t\t// emit an event if there is a change.\n\t\te.changed?.forEach((value, key) => this.accept(key, value));\n\t\te.deleted?.forEach(key => this.accept(key, undefined));\n\t}\n\n\tprivate accept(key: string, value: string | undefined): void {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\tlet changed = false;\n\n\t\t// Item got removed, check for deletion\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\tchanged = this.cache.delete(key);\n\t\t}\n\n\t\t// Item got updated, check for change\n\t\telse {\n\t\t\tconst currentValue = this.cache.get(key);\n\t\t\tif (currentValue !== value) {\n\t\t\t\tthis.cache.set(key, value);\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\n\t\t// Signal to outside listeners\n\t\tif (changed) {\n\t\t\tthis._onDidChangeStorage.fire(key);\n\t\t}\n\t}\n\n\tget items(): Map<string, string> {\n\t\treturn this.cache;\n\t}\n\n\tget size(): number {\n\t\treturn this.cache.size;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tif (this.state !== StorageState.None) {\n\t\t\treturn; // either closed or already initialized\n\t\t}\n\n\t\tthis.state = StorageState.Initialized;\n\n\t\tif (this.options.hint === StorageHint.STORAGE_DOES_NOT_EXIST) {\n\t\t\t// return early if we know the storage file does not exist. this is a performance\n\t\t\t// optimization to not load all items of the underlying storage if we know that\n\t\t\t// there can be no items because the storage does not exist.\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cache = await this.database.getItems();\n\t}\n\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\tget(key: string, fallbackValue?: string): string | undefined {\n\t\tconst value = this.cache.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tgetBoolean(key: string, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined {\n\t\tconst value = this.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value === 'true';\n\t}\n\n\tgetNumber(key: string, fallbackValue: number): number;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined {\n\t\tconst value = this.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn parseInt(value, 10);\n\t}\n\n\tasync set(key: string, value: string | boolean | number | null | undefined): Promise<void> {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\t// Otherwise, convert to String and store\n\t\tconst valueStr = String(value);\n\n\t\t// Return early if value already set\n\t\tconst currentValue = this.cache.get(key);\n\t\tif (currentValue === valueStr) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update in cache and pending\n\t\tthis.cache.set(key, valueStr);\n\t\tthis.pendingInserts.set(key, valueStr);\n\t\tthis.pendingDeletes.delete(key);\n\n\t\t// Event\n\t\tthis._onDidChangeStorage.fire(key);\n\n\t\t// Accumulate work by scheduling after timeout\n\t\treturn this.flushDelayer.trigger(() => this.flushPending());\n\t}\n\n\tasync delete(key: string): Promise<void> {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\t// Remove from cache and add to pending\n\t\tconst wasDeleted = this.cache.delete(key);\n\t\tif (!wasDeleted) {\n\t\t\treturn; // Return early if value already deleted\n\t\t}\n\n\t\tif (!this.pendingDeletes.has(key)) {\n\t\t\tthis.pendingDeletes.add(key);\n\t\t}\n\n\t\tthis.pendingInserts.delete(key);\n\n\t\t// Event\n\t\tthis._onDidChangeStorage.fire(key);\n\n\t\t// Accumulate work by scheduling after timeout\n\t\treturn this.flushDelayer.trigger(() => this.flushPending());\n\t}\n\n\tasync close(): Promise<void> {\n\t\tif (!this.pendingClose) {\n\t\t\tthis.pendingClose = this.doClose();\n\t\t}\n\n\t\treturn this.pendingClose;\n\t}\n\n\tprivate async doClose(): Promise<void> {\n\n\t\t// Update state\n\t\tthis.state = StorageState.Closed;\n\n\t\t// Trigger new flush to ensure data is persisted and then close\n\t\t// even if there is an error flushing. We must always ensure\n\t\t// the DB is closed to avoid corruption.\n\t\t//\n\t\t// Recovery: we pass our cache over as recovery option in case\n\t\t// the DB is not healthy.\n\t\ttry {\n\t\t\tawait this.flushDelayer.trigger(() => this.flushPending(), 0 /* as soon as possible */);\n\t\t} catch (error) {\n\t\t\t// Ignore\n\t\t}\n\n\t\tawait this.database.close(() => this.cache);\n\t}\n\n\tprivate get hasPending() {\n\t\treturn this.pendingInserts.size > 0 || this.pendingDeletes.size > 0;\n\t}\n\n\tprivate async flushPending(): Promise<void> {\n\t\tif (!this.hasPending) {\n\t\t\treturn; // return early if nothing to do\n\t\t}\n\n\t\t// Get pending data\n\t\tconst updateRequest: IUpdateRequest = { insert: this.pendingInserts, delete: this.pendingDeletes };\n\n\t\t// Reset pending data for next run\n\t\tthis.pendingDeletes = new Set<string>();\n\t\tthis.pendingInserts = new Map<string, string>();\n\n\t\t// Update in storage and release any\n\t\t// waiters we have once done\n\t\treturn this.database.updateItems(updateRequest).finally(() => {\n\t\t\tif (!this.hasPending) {\n\t\t\t\twhile (this.whenFlushedCallbacks.length) {\n\t\t\t\t\tthis.whenFlushedCallbacks.pop()?.();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tasync whenFlushed(): Promise<void> {\n\t\tif (!this.hasPending) {\n\t\t\treturn; // return early if nothing to do\n\t\t}\n\n\t\treturn new Promise(resolve => this.whenFlushedCallbacks.push(resolve));\n\t}\n\n\toverride dispose(): void {\n\t\tthis.flushDelayer.cancel(); // workaround https://github.com/microsoft/vscode/issues/116777\n\t\tthis.flushDelayer.dispose();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class InMemoryStorageDatabase implements IStorageDatabase {\n\n\treadonly onDidChangeItemsExternal = Event.None;\n\n\tprivate readonly items = new Map<string, string>();\n\n\tasync getItems(): Promise<Map<string, string>> {\n\t\treturn this.items;\n\t}\n\n\tasync updateItems(request: IUpdateRequest): Promise<void> {\n\t\tif (request.insert) {\n\t\t\trequest.insert.forEach((value, key) => this.items.set(key, value));\n\t\t}\n\n\t\tif (request.delete) {\n\t\t\trequest.delete.forEach(key => this.items.delete(key));\n\t\t}\n\t}\n\n\tasync close(): Promise<void> { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport interface ITelemetryData {\n\treadonly from?: string;\n\treadonly target?: string;\n\t[key: string]: unknown;\n}\n\nexport type WorkbenchActionExecutedClassification = {\n\tid: { classification: 'SystemMetaData', purpose: 'FeatureInsight'; };\n\tfrom: { classification: 'SystemMetaData', purpose: 'FeatureInsight'; };\n};\n\nexport type WorkbenchActionExecutedEvent = {\n\tid: string;\n\tfrom: string;\n};\n\nexport interface IAction extends IDisposable {\n\treadonly id: string;\n\tlabel: string;\n\ttooltip: string;\n\tclass: string | undefined;\n\tenabled: boolean;\n\tchecked: boolean;\n\trun(event?: unknown): Promise<unknown>;\n}\n\nexport interface IActionRunner extends IDisposable {\n\treadonly onDidRun: Event<IRunEvent>;\n\treadonly onBeforeRun: Event<IRunEvent>;\n\n\trun(action: IAction, context?: unknown): Promise<unknown>;\n}\n\nexport interface IActionChangeEvent {\n\treadonly label?: string;\n\treadonly tooltip?: string;\n\treadonly class?: string;\n\treadonly enabled?: boolean;\n\treadonly checked?: boolean;\n}\n\nexport class Action extends Disposable implements IAction {\n\n\tprotected _onDidChange = this._register(new Emitter<IActionChangeEvent>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprotected readonly _id: string;\n\tprotected _label: string;\n\tprotected _tooltip: string | undefined;\n\tprotected _cssClass: string | undefined;\n\tprotected _enabled: boolean = true;\n\tprotected _checked: boolean = false;\n\tprotected readonly _actionCallback?: (event?: unknown) => Promise<unknown>;\n\n\tconstructor(id: string, label: string = '', cssClass: string = '', enabled: boolean = true, actionCallback?: (event?: unknown) => Promise<unknown>) {\n\t\tsuper();\n\t\tthis._id = id;\n\t\tthis._label = label;\n\t\tthis._cssClass = cssClass;\n\t\tthis._enabled = enabled;\n\t\tthis._actionCallback = actionCallback;\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget label(): string {\n\t\treturn this._label;\n\t}\n\n\tset label(value: string) {\n\t\tthis._setLabel(value);\n\t}\n\n\tprivate _setLabel(value: string): void {\n\t\tif (this._label !== value) {\n\t\t\tthis._label = value;\n\t\t\tthis._onDidChange.fire({ label: value });\n\t\t}\n\t}\n\n\tget tooltip(): string {\n\t\treturn this._tooltip || '';\n\t}\n\n\tset tooltip(value: string) {\n\t\tthis._setTooltip(value);\n\t}\n\n\tprotected _setTooltip(value: string): void {\n\t\tif (this._tooltip !== value) {\n\t\t\tthis._tooltip = value;\n\t\t\tthis._onDidChange.fire({ tooltip: value });\n\t\t}\n\t}\n\n\tget class(): string | undefined {\n\t\treturn this._cssClass;\n\t}\n\n\tset class(value: string | undefined) {\n\t\tthis._setClass(value);\n\t}\n\n\tprotected _setClass(value: string | undefined): void {\n\t\tif (this._cssClass !== value) {\n\t\t\tthis._cssClass = value;\n\t\t\tthis._onDidChange.fire({ class: value });\n\t\t}\n\t}\n\n\tget enabled(): boolean {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled(value: boolean) {\n\t\tthis._setEnabled(value);\n\t}\n\n\tprotected _setEnabled(value: boolean): void {\n\t\tif (this._enabled !== value) {\n\t\t\tthis._enabled = value;\n\t\t\tthis._onDidChange.fire({ enabled: value });\n\t\t}\n\t}\n\n\tget checked(): boolean {\n\t\treturn this._checked;\n\t}\n\n\tset checked(value: boolean) {\n\t\tthis._setChecked(value);\n\t}\n\n\tprotected _setChecked(value: boolean): void {\n\t\tif (this._checked !== value) {\n\t\t\tthis._checked = value;\n\t\t\tthis._onDidChange.fire({ checked: value });\n\t\t}\n\t}\n\n\tasync run(event?: unknown, data?: ITelemetryData): Promise<void> {\n\t\tif (this._actionCallback) {\n\t\t\tawait this._actionCallback(event);\n\t\t}\n\t}\n}\n\nexport interface IRunEvent {\n\treadonly action: IAction;\n\treadonly error?: Error;\n}\n\nexport class ActionRunner extends Disposable implements IActionRunner {\n\n\tprivate _onBeforeRun = this._register(new Emitter<IRunEvent>());\n\treadonly onBeforeRun = this._onBeforeRun.event;\n\n\tprivate _onDidRun = this._register(new Emitter<IRunEvent>());\n\treadonly onDidRun = this._onDidRun.event;\n\n\tasync run(action: IAction, context?: unknown): Promise<void> {\n\t\tif (!action.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._onBeforeRun.fire({ action });\n\n\t\tlet error: Error | undefined = undefined;\n\t\ttry {\n\t\t\tawait this.runAction(action, context);\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\n\t\tthis._onDidRun.fire({ action, error });\n\t}\n\n\tprotected async runAction(action: IAction, context?: unknown): Promise<void> {\n\t\tawait action.run(context);\n\t}\n}\n\nexport class Separator extends Action {\n\n\tstatic readonly ID = 'vs.actions.separator';\n\n\tconstructor(label?: string) {\n\t\tsuper(Separator.ID, label, label ? 'separator text' : 'separator');\n\n\t\tthis.checked = false;\n\t\tthis.enabled = false;\n\t}\n}\n\nexport class SubmenuAction implements IAction {\n\n\treadonly id: string;\n\treadonly label: string;\n\treadonly class: string | undefined;\n\treadonly tooltip: string = '';\n\treadonly enabled: boolean = true;\n\treadonly checked: boolean = false;\n\n\tprivate readonly _actions: readonly IAction[];\n\tget actions(): readonly IAction[] { return this._actions; }\n\n\tconstructor(id: string, label: string, actions: readonly IAction[], cssClass?: string) {\n\t\tthis.id = id;\n\t\tthis.label = label;\n\t\tthis.class = cssClass;\n\t\tthis._actions = actions;\n\t}\n\n\tdispose(): void {\n\t\t// there is NOTHING to dispose and the SubmenuAction should\n\t\t// never have anything to dispose as it is a convenience type\n\t\t// to bridge into the rendering world.\n\t}\n\n\tasync run(): Promise<void> { }\n}\n\nexport class EmptySubmenuAction extends Action {\n\n\tstatic readonly ID = 'vs.actions.empty';\n\n\tconstructor() {\n\t\tsuper(EmptySubmenuAction.ID, nls.localize('submenu.empty', '(empty)'), undefined, false);\n\t}\n}\n\nexport function toAction(props: { id: string, label: string, enabled?: boolean, checked?: boolean, run: Function; }): IAction {\n\treturn {\n\t\tid: props.id,\n\t\tlabel: props.label,\n\t\tclass: undefined,\n\t\tenabled: props.enabled ?? true,\n\t\tchecked: props.checked ?? false,\n\t\trun: async () => props.run(),\n\t\ttooltip: props.label,\n\t\tdispose: () => { }\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\n\nexport function fromNow(date: number | Date, appendAgoLabel?: boolean): string {\n\tif (typeof date !== 'number') {\n\t\tdate = date.getTime();\n\t}\n\n\tconst seconds = Math.round((new Date().getTime() - date) / 1000);\n\tif (seconds < -30) {\n\t\treturn localize('date.fromNow.in', 'in {0}', fromNow(new Date().getTime() + seconds * 1000, false));\n\t}\n\n\tif (seconds < 30) {\n\t\treturn localize('date.fromNow.now', 'now');\n\t}\n\n\tlet value: number;\n\tif (seconds < minute) {\n\t\tvalue = seconds;\n\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular.ago', '{0} sec ago', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural.ago', '{0} secs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular', '{0} sec', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural', '{0} secs', value);\n\t\t}\n\t}\n\n\tif (seconds < hour) {\n\t\tvalue = Math.floor(seconds / minute);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular.ago', '{0} min ago', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural.ago', '{0} mins ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular', '{0} min', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural', '{0} mins', value);\n\t\t}\n\t}\n\n\tif (seconds < day) {\n\t\tvalue = Math.floor(seconds / hour);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular.ago', '{0} hr ago', value)\n\t\t\t\t: localize('date.fromNow.hours.plural.ago', '{0} hrs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular', '{0} hr', value)\n\t\t\t\t: localize('date.fromNow.hours.plural', '{0} hrs', value);\n\t\t}\n\t}\n\n\tif (seconds < week) {\n\t\tvalue = Math.floor(seconds / day);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular.ago', '{0} day ago', value)\n\t\t\t\t: localize('date.fromNow.days.plural.ago', '{0} days ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular', '{0} day', value)\n\t\t\t\t: localize('date.fromNow.days.plural', '{0} days', value);\n\t\t}\n\t}\n\n\tif (seconds < month) {\n\t\tvalue = Math.floor(seconds / week);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular.ago', '{0} wk ago', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural.ago', '{0} wks ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular', '{0} wk', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural', '{0} wks', value);\n\t\t}\n\t}\n\n\tif (seconds < year) {\n\t\tvalue = Math.floor(seconds / month);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular.ago', '{0} mo ago', value)\n\t\t\t\t: localize('date.fromNow.months.plural.ago', '{0} mos ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular', '{0} mo', value)\n\t\t\t\t: localize('date.fromNow.months.plural', '{0} mos', value);\n\t\t}\n\t}\n\n\tvalue = Math.floor(seconds / year);\n\tif (appendAgoLabel) {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular.ago', '{0} yr ago', value)\n\t\t\t: localize('date.fromNow.years.plural.ago', '{0} yrs ago', value);\n\t} else {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular', '{0} yr', value)\n\t\t\t: localize('date.fromNow.years.plural', '{0} yrs', value);\n\t}\n}\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + String(date.getMonth() + 1).padStart(2, '0') +\n\t\t'-' + String(date.getDate()).padStart(2, '0') +\n\t\t'T' + String(date.getHours()).padStart(2, '0') +\n\t\t':' + String(date.getMinutes()).padStart(2, '0') +\n\t\t':' + String(date.getSeconds()).padStart(2, '0') +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport * as arrays from 'vs/base/common/arrays';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Extracted from json.ts to keep json nls free.\n */\nimport { localize } from 'vs/nls';\nimport { ParseErrorCode } from './json';\n\nexport function getParseErrorMessage(errorCode: ParseErrorCode): string {\n\tswitch (errorCode) {\n\t\tcase ParseErrorCode.InvalidSymbol: return localize('error.invalidSymbol', 'Invalid symbol');\n\t\tcase ParseErrorCode.InvalidNumberFormat: return localize('error.invalidNumberFormat', 'Invalid number format');\n\t\tcase ParseErrorCode.PropertyNameExpected: return localize('error.propertyNameExpected', 'Property name expected');\n\t\tcase ParseErrorCode.ValueExpected: return localize('error.valueExpected', 'Value expected');\n\t\tcase ParseErrorCode.ColonExpected: return localize('error.colonExpected', 'Colon expected');\n\t\tcase ParseErrorCode.CommaExpected: return localize('error.commaExpected', 'Comma expected');\n\t\tcase ParseErrorCode.CloseBraceExpected: return localize('error.closeBraceExpected', 'Closing brace expected');\n\t\tcase ParseErrorCode.CloseBracketExpected: return localize('error.closeBracketExpected', 'Closing bracket expected');\n\t\tcase ParseErrorCode.EndOfFileExpected: return localize('error.endOfFileExpected', 'End of file expected');\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport * as pfs from 'vs/base/node/pfs';\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as process from 'vs/base/common/process';\nimport * as Types from 'vs/base/common/types';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as Objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as Platform from 'vs/base/common/platform';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode, Executable } from 'vs/base/common/processes';\nimport { FileAccess } from 'vs/base/common/network';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = FileAccess.asFileUri('vs/base/node/terminateProcess.sh', require).fsPath;\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\nexport function getWindowsShell(env = process.env as Platform.IProcessEnvironment): string {\n\treturn env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve: ValueCallback<number> | undefined;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>(resolve => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn resolve(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn resolve(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn resolve(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected override handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env['PATH'])) {\n\t\t\tpaths = process.env['PATH'].split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await pfs.exists(path)) {\n\t\t\t\treturn !((await fs.promises.stat(path)).isDirectory());\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { release, userInfo } from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { getFirstAvailablePowerShellInstallation } from 'vs/base/node/powershell';\nimport * as processes from 'vs/base/node/processes';\n\n/**\n * Gets the detected default shell for the _system_, not to be confused with VS Code's _default_\n * shell that the terminal uses by default.\n * @param os The platform to detect the shell of.\n */\nexport async function getSystemShell(os: platform.OperatingSystem, env: platform.IProcessEnvironment): Promise<string> {\n\tif (os === platform.OperatingSystem.Windows) {\n\t\tif (platform.isWindows) {\n\t\t\treturn getSystemShellWindows();\n\t\t}\n\t\t// Don't detect Windows shell when not on Windows\n\t\treturn processes.getWindowsShell(env);\n\t}\n\n\treturn getSystemShellUnixLike(os, env);\n}\n\nexport function getSystemShellSync(os: platform.OperatingSystem, env: platform.IProcessEnvironment): string {\n\tif (os === platform.OperatingSystem.Windows) {\n\t\tif (platform.isWindows) {\n\t\t\treturn getSystemShellWindowsSync(env);\n\t\t}\n\t\t// Don't detect Windows shell when not on Windows\n\t\treturn processes.getWindowsShell(env);\n\t}\n\n\treturn getSystemShellUnixLike(os, env);\n}\n\nlet _TERMINAL_DEFAULT_SHELL_UNIX_LIKE: string | null = null;\nfunction getSystemShellUnixLike(os: platform.OperatingSystem, env: platform.IProcessEnvironment): string {\n\t// Only use $SHELL for the current OS\n\tif (platform.isLinux && os === platform.OperatingSystem.Macintosh || platform.isMacintosh && os === platform.OperatingSystem.Linux) {\n\t\treturn '/bin/bash';\n\t}\n\n\tif (!_TERMINAL_DEFAULT_SHELL_UNIX_LIKE) {\n\t\tlet unixLikeTerminal: string | undefined;\n\t\tif (platform.isWindows) {\n\t\t\tunixLikeTerminal = '/bin/bash'; // for WSL\n\t\t} else {\n\t\t\tunixLikeTerminal = env['SHELL'];\n\n\t\t\tif (!unixLikeTerminal) {\n\t\t\t\ttry {\n\t\t\t\t\t// It's possible for $SHELL to be unset, this API reads /etc/passwd. See https://github.com/github/codespaces/issues/1639\n\t\t\t\t\t// Node docs: \"Throws a SystemError if a user has no username or homedir.\"\n\t\t\t\t\tunixLikeTerminal = userInfo().shell;\n\t\t\t\t} catch (err) { }\n\t\t\t}\n\n\t\t\tif (!unixLikeTerminal) {\n\t\t\t\tunixLikeTerminal = 'sh';\n\t\t\t}\n\n\t\t\t// Some systems have $SHELL set to /bin/false which breaks the terminal\n\t\t\tif (unixLikeTerminal === '/bin/false') {\n\t\t\t\tunixLikeTerminal = '/bin/bash';\n\t\t\t}\n\t\t}\n\t\t_TERMINAL_DEFAULT_SHELL_UNIX_LIKE = unixLikeTerminal;\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_UNIX_LIKE;\n}\n\nlet _TERMINAL_DEFAULT_SHELL_WINDOWS: string | null = null;\nasync function getSystemShellWindows(): Promise<string> {\n\tif (!_TERMINAL_DEFAULT_SHELL_WINDOWS) {\n\t\t_TERMINAL_DEFAULT_SHELL_WINDOWS = (await getFirstAvailablePowerShellInstallation())!.exePath;\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_WINDOWS;\n}\n\nfunction getSystemShellWindowsSync(env: platform.IProcessEnvironment): string {\n\tif (_TERMINAL_DEFAULT_SHELL_WINDOWS) {\n\t\treturn _TERMINAL_DEFAULT_SHELL_WINDOWS;\n\t}\n\n\tconst isAtLeastWindows10 = platform.isWindows && parseFloat(release()) >= 10;\n\tconst is32ProcessOn64Windows = env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\tconst powerShellPath = `${env['windir']}\\\\${is32ProcessOn64Windows ? 'Sysnative' : 'System32'}\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe`;\n\treturn isAtLeastWindows10 ? powerShellPath : processes.getWindowsShell(env);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Delayer, createCancelablePromise } from 'vs/base/common/async';\nimport { deepClone } from 'vs/base/common/objects';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { IChannel, ChannelServer as IPCServer, ChannelClient as IPCClient, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { isMacintosh } from 'vs/base/common/platform';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * If set, starts the fork with empty execArgv. If not set, execArgv from the parent proces are inherited,\n\t * except --inspect= and --inspect-brk= which are filtered as they would result in a port conflict.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = { ...deepClone(process.env), 'VSCODE_PARENT_PID': String(process.pid) };\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = { ...forkOpts.env, ...this.options.env };\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tif (forkOpts.execArgv === undefined) {\n\t\t\t\t// if not set, the forked process inherits the execArgv of the parent process\n\t\t\t\t// --inspect and --inspect-brk can not be inherited as the port would conflict\n\t\t\t\tforkOpts.execArgv = process.execArgv.filter(a => !/^--inspect(-brk)?=/.test(a)); // remove\n\t\t\t}\n\n\t\t\tif (isMacintosh && forkOpts.env) {\n\t\t\t\t// Unset `DYLD_LIBRARY_PATH`, as it leads to process crashes\n\t\t\t\t// See https://github.com/microsoft/vscode/issues/105848\n\t\t\t\tdelete forkOpts.env['DYLD_LIBRARY_PATH'];\n\t\t\t}\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel, IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IReloadSessionEvent, ICloseSessionEvent, IAttachSessionEvent, ITerminateSessionEvent, IExtensionHostDebugService, IOpenExtensionWindowResult, INullableProcessEnvironment } from 'vs/platform/debug/common/extensionHostDebug';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nexport class ExtensionHostDebugBroadcastChannel<TContext> implements IServerChannel<TContext> {\n\n\tstatic readonly ChannelName = 'extensionhostdebugservice';\n\n\tprivate readonly _onCloseEmitter = new Emitter<ICloseSessionEvent>();\n\tprivate readonly _onReloadEmitter = new Emitter<IReloadSessionEvent>();\n\tprivate readonly _onTerminateEmitter = new Emitter<ITerminateSessionEvent>();\n\tprivate readonly _onAttachEmitter = new Emitter<IAttachSessionEvent>();\n\n\tcall(ctx: TContext, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'close':\n\t\t\t\treturn Promise.resolve(this._onCloseEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'reload':\n\t\t\t\treturn Promise.resolve(this._onReloadEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'terminate':\n\t\t\t\treturn Promise.resolve(this._onTerminateEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'attach':\n\t\t\t\treturn Promise.resolve(this._onAttachEmitter.fire({ sessionId: arg[0], port: arg[1], subId: arg[2] }));\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tlisten(ctx: TContext, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'close':\n\t\t\t\treturn this._onCloseEmitter.event;\n\t\t\tcase 'reload':\n\t\t\t\treturn this._onReloadEmitter.event;\n\t\t\tcase 'terminate':\n\t\t\t\treturn this._onTerminateEmitter.event;\n\t\t\tcase 'attach':\n\t\t\t\treturn this._onAttachEmitter.event;\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\nexport class ExtensionHostDebugChannelClient extends Disposable implements IExtensionHostDebugService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel) {\n\t\tsuper();\n\t}\n\n\treload(sessionId: string): void {\n\t\tthis.channel.call('reload', [sessionId]);\n\t}\n\n\tget onReload(): Event<IReloadSessionEvent> {\n\t\treturn this.channel.listen('reload');\n\t}\n\n\tclose(sessionId: string): void {\n\t\tthis.channel.call('close', [sessionId]);\n\t}\n\n\tget onClose(): Event<ICloseSessionEvent> {\n\t\treturn this.channel.listen('close');\n\t}\n\n\tattachSession(sessionId: string, port: number, subId?: string): void {\n\t\tthis.channel.call('attach', [sessionId, port, subId]);\n\t}\n\n\tget onAttachSession(): Event<IAttachSessionEvent> {\n\t\treturn this.channel.listen('attach');\n\t}\n\n\tterminateSession(sessionId: string, subId?: string): void {\n\t\tthis.channel.call('terminate', [sessionId, subId]);\n\t}\n\n\tget onTerminateSession(): Event<ITerminateSessionEvent> {\n\t\treturn this.channel.listen('terminate');\n\t}\n\n\topenExtensionDevelopmentHostWindow(args: string[], env: INullableProcessEnvironment | undefined, debugRenderer: boolean): Promise<IOpenExtensionWindowResult> {\n\t\treturn this.channel.call('openExtensionDevelopmentHostWindow', [args, env || {}, debugRenderer]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IDebugParams, IExtensionHostDebugParams, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { dirname, join, normalize, resolve } from 'vs/base/common/path';\nimport { joinPath } from 'vs/base/common/resources';\nimport { memoize } from 'vs/base/common/decorators';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { FileAccess } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\nimport { env } from 'vs/base/common/process';\n\n\nfunction parsePathArg(arg: string | undefined, process: NodeJS.Process): string | undefined {\n\tif (!arg) {\n\t\treturn undefined;\n\t}\n\n\t// Determine if the arg is relative or absolute, if relative use the original CWD\n\t// (VSCODE_CWD), not the potentially overridden one (process.cwd()).\n\tconst resolved = resolve(arg);\n\n\tif (normalize(arg) === resolved) {\n\t\treturn resolved;\n\t}\n\n\treturn resolve(process.env['VSCODE_CWD'] || process.cwd(), arg);\n}\n\nexport interface INativeEnvironmentPaths {\n\n\t/**\n\t * The user data directory to use for anything that should be\n\t * persisted except for the content that is meant for the `homeDir`.\n\t *\n\t * Only one instance of VSCode can use the same `userDataDir`.\n\t */\n\tuserDataDir: string\n\n\t/**\n\t * The user home directory mainly used for persisting extensions\n\t * and global configuration that should be shared across all\n\t * versions.\n\t */\n\thomeDir: string;\n\n\t/**\n\t * OS tmp dir.\n\t */\n\ttmpDir: string,\n}\n\nexport abstract class AbstractNativeEnvironmentService implements INativeEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t@memoize\n\tget appRoot(): string { return dirname(FileAccess.asFileUri('', require).fsPath); }\n\n\t@memoize\n\tget userHome(): URI { return URI.file(this.paths.homeDir); }\n\n\t@memoize\n\tget userDataPath(): string { return this.paths.userDataDir; }\n\n\t@memoize\n\tget appSettingsHome(): URI { return URI.file(join(this.userDataPath, 'User')); }\n\n\t@memoize\n\tget tmpDir(): URI { return URI.file(this.paths.tmpDir); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return this.appSettingsHome; }\n\n\t@memoize\n\tget settingsResource(): URI { return joinPath(this.userRoamingDataHome, 'settings.json'); }\n\n\t@memoize\n\tget userDataSyncHome(): URI { return joinPath(this.userRoamingDataHome, 'sync'); }\n\n\tget logsPath(): string {\n\t\tif (!this.args.logsPath) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tthis.args.logsPath = join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\treturn this.args.logsPath;\n\t}\n\n\t@memoize\n\tget userDataSyncLogResource(): URI { return URI.file(join(this.logsPath, 'userDataSync.log')); }\n\n\t@memoize\n\tget sync(): 'on' | 'off' | undefined { return this.args.sync; }\n\n\t@memoize\n\tget machineSettingsResource(): URI { return joinPath(URI.file(join(this.userDataPath, 'Machine')), 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget keybindingsResource(): URI { return joinPath(this.userRoamingDataHome, 'keybindings.json'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(join(vscodePortable, 'argv.json'));\n\t\t}\n\n\t\treturn joinPath(this.userHome, this.productService.dataFolderName, 'argv.json');\n\t}\n\n\t@memoize\n\tget snippetsHome(): URI { return joinPath(this.userRoamingDataHome, 'snippets'); }\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this.args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst cliBuiltinExtensionsDir = this.args['builtin-extensions-dir'];\n\t\tif (cliBuiltinExtensionsDir) {\n\t\t\treturn resolve(cliBuiltinExtensionsDir);\n\t\t}\n\n\t\treturn normalize(join(FileAccess.asFileUri('', require).fsPath, '..', 'extensions'));\n\t}\n\n\tget extensionsDownloadPath(): string {\n\t\tconst cliExtensionsDownloadDir = this.args['extensions-download-dir'];\n\t\tif (cliExtensionsDownloadDir) {\n\t\t\treturn resolve(cliExtensionsDownloadDir);\n\t\t}\n\n\t\treturn join(this.userDataPath, 'CachedExtensionVSIXs');\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst cliExtensionsDir = this.args['extensions-dir'];\n\t\tif (cliExtensionsDir) {\n\t\t\treturn resolve(cliExtensionsDir);\n\t\t}\n\n\t\tconst vscodeExtensions = env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn joinPath(this.userHome, this.productService.dataFolderName, 'extensions').fsPath;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst extensionDevelopmentPaths = this.args.extensionDevelopmentPath;\n\t\tif (Array.isArray(extensionDevelopmentPaths)) {\n\t\t\treturn extensionDevelopmentPaths.map(extensionDevelopmentPath => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionDevelopmentPath)) {\n\t\t\t\t\treturn URI.parse(extensionDevelopmentPath);\n\t\t\t\t}\n\n\t\t\t\treturn URI.file(normalize(extensionDevelopmentPath));\n\t\t\t});\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * NOTE@coder: add extraExtensionPaths and extraBuiltinExtensionPaths\n\t */\n\t@memoize\n\tget extraExtensionPaths(): string[] {\n\t\treturn (this._args['extra-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\n\t@memoize\n\tget extraBuiltinExtensionPaths(): string[] {\n\t\treturn (this._args['extra-builtin-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\n\t@memoize\n\tget extensionDevelopmentKind(): ExtensionKind[] | undefined {\n\t\treturn this.args.extensionDevelopmentKind?.map(kind => kind === 'ui' || kind === 'workspace' || kind === 'web' ? kind : 'workspace');\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst extensionTestsPath = this.args.extensionTestsPath;\n\t\tif (extensionTestsPath) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionTestsPath)) {\n\t\t\t\treturn URI.parse(extensionTestsPath);\n\t\t\t}\n\n\t\t\treturn URI.file(normalize(extensionTestsPath));\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this.args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst disableExtensions = this.args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this.args, this.isBuilt); }\n\tget debugRenderer(): boolean { return !!this.args.debugRenderer; }\n\n\tget isBuilt(): boolean { return !env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this.args.verbose; }\n\tget logLevel(): string | undefined { return this.args.log; }\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return joinPath(URI.file(this.userDataPath), 'machineid'); }\n\n\tget crashReporterId(): string | undefined { return this.args['crash-reporter-id']; }\n\tget crashReporterDirectory(): string | undefined { return this.args['crash-reporter-directory']; }\n\n\tget driverHandle(): string | undefined { return this.args['driver']; }\n\n\t@memoize\n\tget telemetryLogResource(): URI { return URI.file(join(this.logsPath, 'telemetry.log')); }\n\tget disableTelemetry(): boolean { return !!this.args['disable-telemetry']; }\n\n\tget args(): NativeParsedArgs { return this._args; }\n\n\tconstructor(\n\t\tprivate readonly _args: NativeParsedArgs,\n\t\tprivate readonly paths: INativeEnvironmentPaths,\n\t\tprotected readonly productService: IProductService\n\t) { }\n}\n\nexport function parseExtensionHostPort(args: NativeParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugPort(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId);\n}\n\nexport function parseSearchPort(args: NativeParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugPort(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild);\n}\n\nfunction parseDebugPort(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\n\treturn { port, break: brk, debugId };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as minimist from 'minimist';\nimport { localize } from 'vs/nls';\nimport { isWindows } from 'vs/base/common/platform';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\n\n/**\n * This code is also used by standalone cli's. Avoid adding any other dependencies.\n */\nconst helpCategories = {\n\to: localize('optionsUpperCase', \"Options\"),\n\te: localize('extensionsManagement', \"Extensions Management\"),\n\tt: localize('troubleshooting', \"Troubleshooting\")\n};\n\nexport interface Option<OptionType> {\n\ttype: OptionType;\n\talias?: string;\n\tdeprecates?: string; // old deprecated id\n\targs?: string | string[];\n\tdescription?: string;\n\tcat?: keyof typeof helpCategories;\n}\n\nexport type OptionDescriptions<T> = {\n\t[P in keyof T]: Option<OptionTypeName<T[P]>>;\n};\n\ntype OptionTypeName<T> =\n\tT extends boolean ? 'boolean' :\n\tT extends string ? 'string' :\n\tT extends string[] ? 'string[]' :\n\tT extends undefined ? 'undefined' :\n\t'unknown';\n\nexport const OPTIONS: OptionDescriptions<Required<NativeParsedArgs>> = {\n\t'diff': { type: 'boolean', cat: 'o', alias: 'd', args: ['file', 'file'], description: localize('diff', \"Compare two files with each other.\") },\n\t'add': { type: 'boolean', cat: 'o', alias: 'a', args: 'folder', description: localize('add', \"Add folder(s) to the last active window.\") },\n\t'goto': { type: 'boolean', cat: 'o', alias: 'g', args: 'file:line[:character]', description: localize('goto', \"Open a file at the path on the specified line and character position.\") },\n\t'new-window': { type: 'boolean', cat: 'o', alias: 'n', description: localize('newWindow', \"Force to open a new window.\") },\n\t'reuse-window': { type: 'boolean', cat: 'o', alias: 'r', description: localize('reuseWindow', \"Force to open a file or folder in an already opened window.\") },\n\t'wait': { type: 'boolean', cat: 'o', alias: 'w', description: localize('wait', \"Wait for the files to be closed before returning.\") },\n\t'waitMarkerFilePath': { type: 'string' },\n\t'locale': { type: 'string', cat: 'o', args: 'locale', description: localize('locale', \"The locale to use (e.g. en-US or zh-TW).\") },\n\t'user-data-dir': { type: 'string', cat: 'o', args: 'dir', description: localize('userDataDir', \"Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.\") },\n\t'help': { type: 'boolean', cat: 'o', alias: 'h', description: localize('help', \"Print usage.\") },\n\n\t'extensions-dir': { type: 'string', deprecates: 'extensionHomePath', cat: 'e', args: 'dir', description: localize('extensionHomePath', \"Set the root path for extensions.\") },\n\t'extensions-download-dir': { type: 'string' },\n\t'builtin-extensions-dir': { type: 'string' },\n\t'extra-builtin-extensions-dir': { type: 'string[]', cat: 'o', description: 'Path to an extra builtin extension directory.' },\n\t'extra-extensions-dir': { type: 'string[]', cat: 'o', description: 'Path to an extra user extension directory.' },\n\t'list-extensions': { type: 'boolean', cat: 'e', description: localize('listExtensions', \"List the installed extensions.\") },\n\t'show-versions': { type: 'boolean', cat: 'e', description: localize('showVersions', \"Show versions of installed extensions, when using --list-extensions.\") },\n\t'category': { type: 'string', cat: 'e', description: localize('category', \"Filters installed extensions by provided category, when using --list-extensions.\") },\n\t'install-extension': { type: 'string[]', cat: 'e', args: 'extension-id[@version] | path-to-vsix', description: localize('installExtension', \"Installs or updates the extension. The identifier of an extension is always `${publisher}.${name}`. Use `--force` argument to update to latest version. To install a specific version provide `@${version}`. For example: 'vscode.csharp@1.2.3'.\") },\n\t'uninstall-extension': { type: 'string[]', cat: 'e', args: 'extension-id', description: localize('uninstallExtension', \"Uninstalls an extension.\") },\n\t'enable-proposed-api': { type: 'string[]', cat: 'e', args: 'extension-id', description: localize('experimentalApis', \"Enables proposed API features for extensions. Can receive one or more extension IDs to enable individually.\") },\n\n\t'version': { type: 'boolean', cat: 't', alias: 'v', description: localize('version', \"Print version.\") },\n\t'verbose': { type: 'boolean', cat: 't', description: localize('verbose', \"Print verbose output (implies --wait).\") },\n\t'log': { type: 'string', cat: 't', args: 'level', description: localize('log', \"Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'.\") },\n\t'status': { type: 'boolean', alias: 's', cat: 't', description: localize('status', \"Print process usage and diagnostics information.\") },\n\t'prof-startup': { type: 'boolean', cat: 't', description: localize('prof-startup', \"Run CPU profiler during startup\") },\n\t'prof-append-timers': { type: 'string' },\n\t'prof-startup-prefix': { type: 'string' },\n\t'prof-v8-extensions': { type: 'boolean' },\n\t'disable-extensions': { type: 'boolean', deprecates: 'disableExtensions', cat: 't', description: localize('disableExtensions', \"Disable all installed extensions.\") },\n\t'disable-extension': { type: 'string[]', cat: 't', args: 'extension-id', description: localize('disableExtension', \"Disable an extension.\") },\n\t'sync': { type: 'string', cat: 't', description: localize('turn sync', \"Turn sync on or off\"), args: ['on', 'off'] },\n\n\t'inspect-extensions': { type: 'string', deprecates: 'debugPluginHost', args: 'port', cat: 't', description: localize('inspect-extensions', \"Allow debugging and profiling of extensions. Check the developer tools for the connection URI.\") },\n\t'inspect-brk-extensions': { type: 'string', deprecates: 'debugBrkPluginHost', args: 'port', cat: 't', description: localize('inspect-brk-extensions', \"Allow debugging and profiling of extensions with the extension host being paused after start. Check the developer tools for the connection URI.\") },\n\t'disable-gpu': { type: 'boolean', cat: 't', description: localize('disableGPU', \"Disable GPU hardware acceleration.\") },\n\t'max-memory': { type: 'string', cat: 't', description: localize('maxMemory', \"Max memory size for a window (in Mbytes).\") },\n\t'telemetry': { type: 'boolean', cat: 't', description: localize('telemetry', \"Shows all telemetry events which VS code collects.\") },\n\n\t'remote': { type: 'string' },\n\t'folder-uri': { type: 'string[]', cat: 'o', args: 'uri' },\n\t'file-uri': { type: 'string[]', cat: 'o', args: 'uri' },\n\n\t'locate-extension': { type: 'string[]' },\n\t'extensionDevelopmentPath': { type: 'string[]' },\n\t'extensionDevelopmentKind': { type: 'string[]' },\n\t'extensionTestsPath': { type: 'string' },\n\t'debugId': { type: 'string' },\n\t'debugRenderer': { type: 'boolean' },\n\t'inspect-search': { type: 'string', deprecates: 'debugSearch' },\n\t'inspect-brk-search': { type: 'string', deprecates: 'debugBrkSearch' },\n\t'export-default-configuration': { type: 'string' },\n\t'install-source': { type: 'string' },\n\t'driver': { type: 'string' },\n\t'logExtensionHostCommunication': { type: 'boolean' },\n\t'skip-release-notes': { type: 'boolean' },\n\t'disable-telemetry': { type: 'boolean' },\n\t'disable-updates': { type: 'boolean' },\n\t'disable-keytar': { type: 'boolean' },\n\t'disable-crash-reporter': { type: 'boolean' },\n\t'crash-reporter-directory': { type: 'string' },\n\t'crash-reporter-id': { type: 'string' },\n\t'skip-add-to-recently-opened': { type: 'boolean' },\n\t'unity-launch': { type: 'boolean' },\n\t'open-url': { type: 'boolean' },\n\t'file-write': { type: 'boolean' },\n\t'file-chmod': { type: 'boolean' },\n\t'driver-verbose': { type: 'boolean' },\n\t'install-builtin-extension': { type: 'string[]' },\n\t'force': { type: 'boolean' },\n\t'do-not-sync': { type: 'boolean' },\n\t'trace': { type: 'boolean' },\n\t'trace-category-filter': { type: 'string' },\n\t'trace-options': { type: 'string' },\n\t'force-user-env': { type: 'boolean' },\n\t'force-disable-user-env': { type: 'boolean' },\n\t'open-devtools': { type: 'boolean' },\n\t'__sandbox': { type: 'boolean' },\n\t'logsPath': { type: 'string' },\n\n\t// chromium flags\n\t'no-proxy-server': { type: 'boolean' },\n\t'proxy-server': { type: 'string' },\n\t'proxy-bypass-list': { type: 'string' },\n\t'proxy-pac-url': { type: 'string' },\n\t'js-flags': { type: 'string' }, // chrome js flags\n\t'inspect': { type: 'string' },\n\t'inspect-brk': { type: 'string' },\n\t'nolazy': { type: 'boolean' }, // node inspect\n\t'force-device-scale-factor': { type: 'string' },\n\t'force-renderer-accessibility': { type: 'boolean' },\n\t'ignore-certificate-errors': { type: 'boolean' },\n\t'allow-insecure-localhost': { type: 'boolean' },\n\t'log-net-log': { type: 'string' },\n\t'vmodule': { type: 'string' },\n\t'_urls': { type: 'string[]' },\n\n\t_: { type: 'string[]' } // main arguments\n};\n\nexport interface ErrorReporter {\n\tonUnknownOption(id: string): void;\n\tonMultipleValues(id: string, usedValue: string): void;\n}\n\nconst ignoringReporter: ErrorReporter = {\n\tonUnknownOption: () => { },\n\tonMultipleValues: () => { }\n};\n\nexport function parseArgs<T>(args: string[], options: OptionDescriptions<T>, errorReporter: ErrorReporter = ignoringReporter): T {\n\tconst alias: { [key: string]: string } = {};\n\tconst string: string[] = [];\n\tconst boolean: string[] = [];\n\tfor (let optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.alias) {\n\t\t\talias[optionId] = o.alias;\n\t\t}\n\n\t\tif (o.type === 'string' || o.type === 'string[]') {\n\t\t\tstring.push(optionId);\n\t\t\tif (o.deprecates) {\n\t\t\t\tstring.push(o.deprecates);\n\t\t\t}\n\t\t} else if (o.type === 'boolean') {\n\t\t\tboolean.push(optionId);\n\t\t\tif (o.deprecates) {\n\t\t\t\tboolean.push(o.deprecates);\n\t\t\t}\n\t\t}\n\t}\n\t// remove aliases to avoid confusion\n\tconst parsedArgs = minimist(args, { string, boolean, alias });\n\n\tconst cleanedArgs: any = {};\n\tconst remainingArgs: any = parsedArgs;\n\n\t// https://github.com/microsoft/vscode/issues/58177, https://github.com/microsoft/vscode/issues/106617\n\tcleanedArgs._ = parsedArgs._.map(arg => String(arg)).filter(arg => arg.length > 0);\n\n\tdelete remainingArgs._;\n\n\tfor (let optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.alias) {\n\t\t\tdelete remainingArgs[o.alias];\n\t\t}\n\n\t\tlet val = remainingArgs[optionId];\n\t\tif (o.deprecates && remainingArgs.hasOwnProperty(o.deprecates)) {\n\t\t\tif (!val) {\n\t\t\t\tval = remainingArgs[o.deprecates];\n\t\t\t}\n\t\t\tdelete remainingArgs[o.deprecates];\n\t\t}\n\n\t\tif (typeof val !== 'undefined') {\n\t\t\tif (o.type === 'string[]') {\n\t\t\t\tif (val && !Array.isArray(val)) {\n\t\t\t\t\tval = [val];\n\t\t\t\t}\n\t\t\t} else if (o.type === 'string') {\n\t\t\t\tif (Array.isArray(val)) {\n\t\t\t\t\tval = val.pop(); // take the last\n\t\t\t\t\terrorReporter.onMultipleValues(optionId, val);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcleanedArgs[optionId] = val;\n\t\t}\n\t\tdelete remainingArgs[optionId];\n\t}\n\n\tfor (let key in remainingArgs) {\n\t\terrorReporter.onUnknownOption(key);\n\t}\n\n\treturn cleanedArgs;\n}\n\nfunction formatUsage(optionId: string, option: Option<any>) {\n\tlet args = '';\n\tif (option.args) {\n\t\tif (Array.isArray(option.args)) {\n\t\t\targs = ` <${option.args.join('> <')}>`;\n\t\t} else {\n\t\t\targs = ` <${option.args}>`;\n\t\t}\n\t}\n\tif (option.alias) {\n\t\treturn `-${option.alias} --${optionId}${args}`;\n\t}\n\treturn `--${optionId}${args}`;\n}\n\n// exported only for testing\nexport function formatOptions(options: OptionDescriptions<any>, columns: number): string[] {\n\tlet maxLength = 0;\n\tlet usageTexts: [string, string][] = [];\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tconst usageText = formatUsage(optionId, o);\n\t\tmaxLength = Math.max(maxLength, usageText.length);\n\t\tusageTexts.push([usageText, o.description!]);\n\t}\n\tlet argLength = maxLength + 2/*left padding*/ + 1/*right padding*/;\n\tif (columns - argLength < 25) {\n\t\t// Use a condensed version on narrow terminals\n\t\treturn usageTexts.reduce<string[]>((r, ut) => r.concat([`  ${ut[0]}`, `      ${ut[1]}`]), []);\n\t}\n\tlet descriptionColumns = columns - argLength - 1;\n\tlet result: string[] = [];\n\tfor (const ut of usageTexts) {\n\t\tlet usage = ut[0];\n\t\tlet wrappedDescription = wrapText(ut[1], descriptionColumns);\n\t\tlet keyPadding = indent(argLength - usage.length - 2/*left padding*/);\n\t\tresult.push('  ' + usage + keyPadding + wrappedDescription[0]);\n\t\tfor (let i = 1; i < wrappedDescription.length; i++) {\n\t\t\tresult.push(indent(argLength) + wrappedDescription[i]);\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction indent(count: number): string {\n\treturn ' '.repeat(count);\n}\n\nfunction wrapText(text: string, columns: number): string[] {\n\tlet lines: string[] = [];\n\twhile (text.length) {\n\t\tlet index = text.length < columns ? text.length : text.lastIndexOf(' ', columns);\n\t\tlet line = text.slice(0, index).trim();\n\t\ttext = text.slice(index);\n\t\tlines.push(line);\n\t}\n\treturn lines;\n}\n\nexport function buildHelpMessage(productName: string, executableName: string, version: string, options: OptionDescriptions<any>, isPipeSupported = true): string {\n\tconst columns = (process.stdout).isTTY && (process.stdout).columns || 80;\n\n\tlet help = [`${productName} ${version}`];\n\thelp.push('');\n\thelp.push(`${localize('usage', \"Usage\")}: ${executableName} [${localize('options', \"options\")}][${localize('paths', 'paths')}...]`);\n\thelp.push('');\n\tif (isPipeSupported) {\n\t\tif (isWindows) {\n\t\t\thelp.push(localize('stdinWindows', \"To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')\", executableName));\n\t\t} else {\n\t\t\thelp.push(localize('stdinUnix', \"To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')\", executableName));\n\t\t}\n\t\thelp.push('');\n\t}\n\tconst optionsByCategory: { [P in keyof typeof helpCategories]?: OptionDescriptions<any> } = {};\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.description && o.cat) {\n\t\t\tlet optionsByCat = optionsByCategory[o.cat];\n\t\t\tif (!optionsByCat) {\n\t\t\t\toptionsByCategory[o.cat] = optionsByCat = {};\n\t\t\t}\n\t\t\toptionsByCat[optionId] = o;\n\t\t}\n\t}\n\n\tfor (let helpCategoryKey in optionsByCategory) {\n\t\tconst key = <keyof typeof helpCategories>helpCategoryKey;\n\n\t\tlet categoryOptions = optionsByCategory[key];\n\t\tif (categoryOptions) {\n\t\t\thelp.push(helpCategories[key]);\n\t\t\thelp.push(...formatOptions(categoryOptions, columns));\n\t\t\thelp.push('');\n\t\t}\n\t}\n\treturn help.join('\\n');\n}\n\nexport function buildVersionMessage(version: string | undefined, commit: string | undefined): string {\n\treturn `${version || localize('unknownVersion', \"Unknown version\")}\\n${commit || localize('unknownCommit', \"Unknown commit\")}\\n${process.arch}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/// <reference path=\"../../../../typings/require.d.ts\" />\n\n//@ts-check\n(function () {\n\t'use strict';\n\n\t/**\n\t * @typedef {import('../../environment/common/argv').NativeParsedArgs} NativeParsedArgs\n\t *\n\t * @param {typeof import('path')} path\n\t * @param {typeof import('os')} os\n\t * @param {string} productName\n\t * @param {string} cwd\n\t */\n\tfunction factory(path, os, productName, cwd) {\n\n\t\t/**\n\t\t * @param {NativeParsedArgs} cliArgs\n\t\t *\n\t\t * @returns {string}\n\t\t */\n\t\tfunction getUserDataPath(cliArgs) {\n\t\t\tconst userDataPath = doGetUserDataPath(cliArgs);\n\t\t\tconst pathsToResolve = [userDataPath];\n\n\t\t\t// If the user-data-path is not absolute, make\n\t\t\t// sure to resolve it against the passed in\n\t\t\t// current working directory. We cannot use the\n\t\t\t// node.js `path.resolve()` logic because it will\n\t\t\t// not pick up our `VSCODE_CWD` environment variable\n\t\t\t// (https://github.com/microsoft/vscode/issues/120269)\n\t\t\tif (!path.isAbsolute(userDataPath)) {\n\t\t\t\tpathsToResolve.unshift(cwd);\n\t\t\t}\n\n\t\t\treturn path.resolve(...pathsToResolve);\n\t\t}\n\n\t\t/**\n\t\t * @param {NativeParsedArgs} cliArgs\n\t\t *\n\t\t * @returns {string}\n\t\t */\n\t\tfunction doGetUserDataPath(cliArgs) {\n\n\t\t\t// 1. Support portable mode\n\t\t\tconst portablePath = process.env['VSCODE_PORTABLE'];\n\t\t\tif (portablePath) {\n\t\t\t\treturn path.join(portablePath, 'user-data');\n\t\t\t}\n\n\t\t\t// 2. Support explicit --user-data-dir\n\t\t\tconst cliPath = cliArgs['user-data-dir'];\n\t\t\tif (cliPath) {\n\t\t\t\treturn cliPath;\n\t\t\t}\n\n\t\t\t// 3. Support global VSCODE_APPDATA environment variable\n\t\t\tlet appDataPath = process.env['VSCODE_APPDATA'];\n\n\t\t\t// 4. Otherwise check per platform\n\t\t\tif (!appDataPath) {\n\t\t\t\tswitch (process.platform) {\n\t\t\t\t\tcase 'win32':\n\t\t\t\t\t\tappDataPath = process.env['APPDATA'];\n\t\t\t\t\t\tif (!appDataPath) {\n\t\t\t\t\t\t\tconst userProfile = process.env['USERPROFILE'];\n\t\t\t\t\t\t\tif (typeof userProfile !== 'string') {\n\t\t\t\t\t\t\t\tthrow new Error('Windows: Unexpected undefined %USERPROFILE% environment variable');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tappDataPath = path.join(userProfile, 'AppData', 'Roaming');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'darwin':\n\t\t\t\t\t\tappDataPath = path.join(os.homedir(), 'Library', 'Application Support');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'linux':\n\t\t\t\t\t\tappDataPath = process.env['XDG_CONFIG_HOME'] || path.join(os.homedir(), '.config');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Platform not supported');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn path.join(appDataPath, productName);\n\t\t}\n\n\t\treturn {\n\t\t\tgetUserDataPath\n\t\t};\n\t}\n\n\tif (typeof define === 'function') {\n\t\tdefine(__m[136/*vs/platform/environment/node/userDataPath*/], __M([0/*require*/,36/*path*/,25/*os*/,8/*vs/base/common/network*/,15/*vs/base/common/resources*/,26/*vs/base/common/process*/]), function (\n\t\t\trequire,\n\t\t\t/** @type {typeof import('path')} */ path,\n\t\t\t/** @type {typeof import('os')} */ os,\n\t\t\t/** @type {typeof import('../../../base/common/network')} */ network,\n\t\t\t/** @type {typeof import(\"../../../base/common/resources\")} */ resources,\n\t\t\t/** @type {typeof import(\"../../../base/common/process\")} */ process\n\t\t) {\n\t\t\tconst rootPath = resources.dirname(network.FileAccess.asFileUri('', require));\n\t\t\tconst pkg = require.__$__nodeRequire(resources.joinPath(rootPath, 'package.json').fsPath);\n\n\t\t\treturn factory(path, os, pkg.name, process.cwd());\n\t\t}); // amd\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t\tconst pkg = require('../../../../../package.json');\n\t\tconst path = require('path');\n\t\tconst os = require('os');\n\n\t\tmodule.exports = factory(path, os, pkg.name, process.env['VSCODE_CWD'] || process.cwd()); // commonjs\n\t} else {\n\t\tthrow new Error('Unknown context');\n\t}\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { homedir, tmpdir } from 'os';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { getUserDataPath } from 'vs/platform/environment/node/userDataPath';\nimport { AbstractNativeEnvironmentService } from 'vs/platform/environment/common/environmentService';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nexport class NativeEnvironmentService extends AbstractNativeEnvironmentService {\n\n\tconstructor(args: NativeParsedArgs, productService: IProductService) {\n\t\tsuper(args, {\n\t\t\thomeDir: homedir(),\n\t\t\ttmpDir: tmpdir(),\n\t\t\tuserDataDir: getUserDataPath(args)\n\t\t}, productService);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IExtensionManagementService, ILocalExtension, InstallExtensionEvent, DidInstallExtensionEvent, IGalleryExtension, DidUninstallExtensionEvent, IExtensionIdentifier, IGalleryMetadata, IReportedExtension, IExtensionTipsService, InstallOptions, UninstallOptions } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IURITransformer, DefaultURITransformer, transformAndReviveIncomingURIs } from 'vs/base/common/uriIpc';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { ExtensionType, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nfunction transformIncomingURI(uri: UriComponents, transformer: IURITransformer | null): URI {\n\treturn URI.revive(transformer ? transformer.transformIncoming(uri) : uri);\n}\n\nfunction transformOutgoingURI(uri: URI, transformer: IURITransformer | null): URI {\n\treturn transformer ? transformer.transformOutgoingURI(uri) : uri;\n}\n\nfunction transformIncomingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\ttransformer = transformer ? transformer : DefaultURITransformer;\n\tconst manifest = extension.manifest;\n\tconst transformed = transformAndReviveIncomingURIs({ ...extension, ...{ manifest: undefined } }, transformer);\n\treturn { ...transformed, ...{ manifest } };\n}\n\nfunction transformOutgoingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\treturn transformer ? cloneAndChange(extension, value => value instanceof URI ? transformer.transformOutgoingURI(value) : undefined) : extension;\n}\n\nexport class ExtensionManagementChannel implements IServerChannel {\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tconstructor(private service: IExtensionManagementService, private getUriTransformer: (requestContext: any) => IURITransformer | null) {\n\t\tthis.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t\tthis.onDidInstallExtension = Event.buffer(service.onDidInstallExtension, true);\n\t\tthis.onUninstallExtension = Event.buffer(service.onUninstallExtension, true);\n\t\tthis.onDidUninstallExtension = Event.buffer(service.onDidUninstallExtension, true);\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (event) {\n\t\t\tcase 'onInstallExtension': return this.onInstallExtension;\n\t\t\tcase 'onDidInstallExtension': return Event.map(this.onDidInstallExtension, i => ({ ...i, local: i.local ? transformOutgoingExtension(i.local, uriTransformer) : i.local }));\n\t\t\tcase 'onUninstallExtension': return this.onUninstallExtension;\n\t\t\tcase 'onDidUninstallExtension': return this.onDidUninstallExtension;\n\t\t}\n\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer: IURITransformer | null = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'zip': return this.service.zip(transformIncomingExtension(args[0], uriTransformer)).then(uri => transformOutgoingURI(uri, uriTransformer));\n\t\t\tcase 'unzip': return this.service.unzip(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'install': return this.service.install(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'getManifest': return this.service.getManifest(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'canInstall': return this.service.canInstall(args[0]);\n\t\t\tcase 'installFromGallery': return this.service.installFromGallery(args[0], args[1]);\n\t\t\tcase 'uninstall': return this.service.uninstall(transformIncomingExtension(args[0], uriTransformer), args[1]);\n\t\t\tcase 'reinstallFromGallery': return this.service.reinstallFromGallery(transformIncomingExtension(args[0], uriTransformer));\n\t\t\tcase 'getInstalled': return this.service.getInstalled(args[0]).then(extensions => extensions.map(e => transformOutgoingExtension(e, uriTransformer)));\n\t\t\tcase 'updateMetadata': return this.service.updateMetadata(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'updateExtensionScope': return this.service.updateExtensionScope(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'getExtensionsReport': return this.service.getExtensionsReport();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class ExtensionManagementChannelClient extends Disposable implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\treadonly onInstallExtension = this._onInstallExtension.event;\n\n\tprivate readonly _onDidInstallExtension = this._register(new Emitter<DidInstallExtensionEvent>());\n\treadonly onDidInstallExtension = this._onDidInstallExtension.event;\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<IExtensionIdentifier>());\n\treadonly onUninstallExtension = this._onUninstallExtension.event;\n\n\tprivate readonly _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\treadonly onDidUninstallExtension = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t) {\n\t\tsuper();\n\t\tthis._register(this.channel.listen<InstallExtensionEvent>('onInstallExtension')(e => this._onInstallExtension.fire(e)));\n\t\tthis._register(this.channel.listen<DidInstallExtensionEvent>('onDidInstallExtension')(e => this._onDidInstallExtension.fire({ ...e, local: e.local ? transformIncomingExtension(e.local, null) : e.local })));\n\t\tthis._register(this.channel.listen<IExtensionIdentifier>('onUninstallExtension')(e => this._onUninstallExtension.fire(e)));\n\t\tthis._register(this.channel.listen<DidUninstallExtensionEvent>('onDidUninstallExtension')(e => this._onDidUninstallExtension.fire(e)));\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\treturn Promise.resolve(this.channel.call('zip', [extension]).then(result => URI.revive(<UriComponents>result)));\n\t}\n\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\treturn Promise.resolve(this.channel.call('unzip', [zipLocation]));\n\t}\n\n\tinstall(vsix: URI): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('install', [vsix])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionManifest>('getManifest', [vsix]));\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn true;\n\t}\n\n\tinstallFromGallery(extension: IGalleryExtension, installOptions?: InstallOptions): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('installFromGallery', [extension, installOptions])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tuninstall(extension: ILocalExtension, options?: UninstallOptions): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('uninstall', [extension!, options]));\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('reinstallFromGallery', [extension]));\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension[]>('getInstalled', [type]))\n\t\t\t.then(extensions => extensions.map(extension => transformIncomingExtension(extension, null)));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateMetadata', [local, metadata]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tupdateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateExtensionScope', [local, isMachineScoped]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\treturn Promise.resolve(this.channel.call('getExtensionsReport'));\n\t}\n}\n\nexport class ExtensionTipsChannel implements IServerChannel {\n\n\tconstructor(private service: IExtensionTipsService) {\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getConfigBasedTips': return this.service.getConfigBasedTips(URI.revive(args[0]));\n\t\t\tcase 'getImportantExecutableBasedTips': return this.service.getImportantExecutableBasedTips();\n\t\t\tcase 'getOtherExecutableBasedTips': return this.service.getOtherExecutableBasedTips();\n\t\t\tcase 'getAllWorkspacesTips': return this.service.getAllWorkspacesTips();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nconst nlsRegex = /^%([\\w\\d.-]+)%$/i;\n\nexport interface ITranslations {\n\t[key: string]: string;\n}\n\nexport function localizeManifest(manifest: IExtensionManifest, translations: ITranslations): IExtensionManifest {\n\tconst patcher = (value: string) => {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst match = nlsRegex.exec(value);\n\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn translations[match[1]] || value;\n\t};\n\n\treturn cloneAndChange(manifest, patcher);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals\n\t};\n}\n\nexport function isValidVersion(_version: string | INormalizedVersion, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _version === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_version));\n\t} else {\n\t\tversion = _version;\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\nexport function isValidExtensionVersion(version: string, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(version, extensionDesc.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, engine);\n}\n\nexport function isVersionValid(currentVersion: string, requestedVersion: string, notices: string[] = []): boolean {\n\n\tlet desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { FileChangeType, FileDeleteOptions, FileOverwriteOptions, FileSystemProviderCapabilities, FileType, IFileChange, IStat, IWatchOptions, FileOpenOptions, IFileSystemProviderWithFileReadWriteCapability, FileWriteOptions, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileFolderCopyCapability, FileReadStreamOptions, IFileSystemProviderWithOpenReadWriteCloseCapability } from 'vs/platform/files/common/files';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { newWriteableStream, ReadableStreamEvents, ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\ninterface IFileChangeDto {\n\tresource: UriComponents;\n\ttype: FileChangeType;\n}\n\n/**\n * An abstract file system provider that delegates all calls to a provided\n * `IChannel` via IPC communication.\n */\nexport abstract class IPCFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly session: string = generateUuid();\n\n\tprivate readonly _onDidChange = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChange.event;\n\n\tprivate _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate readonly _onDidChangeCapabilities = this._register(new Emitter<void>());\n\treadonly onDidChangeCapabilities = this._onDidChangeCapabilities.event;\n\n\tprivate _capabilities = FileSystemProviderCapabilities.FileReadWrite\n\t\t| FileSystemProviderCapabilities.FileOpenReadWriteClose\n\t\t| FileSystemProviderCapabilities.FileReadStream\n\t\t| FileSystemProviderCapabilities.FileFolderCopy\n\t\t| FileSystemProviderCapabilities.FileWriteUnlock;\n\tget capabilities(): FileSystemProviderCapabilities { return this._capabilities; }\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.channel.listen<IFileChangeDto[] | string>('filechange', [this.session])(eventsOrError => {\n\t\t\tif (Array.isArray(eventsOrError)) {\n\t\t\t\tconst events = eventsOrError;\n\t\t\t\tthis._onDidChange.fire(events.map(event => ({ resource: URI.revive(event.resource), type: event.type })));\n\t\t\t} else {\n\t\t\t\tconst error = eventsOrError;\n\t\t\t\tthis._onDidWatchErrorOccur.fire(error);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected setCaseSensitive(isCaseSensitive: boolean) {\n\t\tif (isCaseSensitive) {\n\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t} else {\n\t\t\tthis._capabilities &= ~FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\n\t\tthis._onDidChangeCapabilities.fire(undefined);\n\t}\n\n\t// --- forwarding calls\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this.channel.call('stat', [resource]);\n\t}\n\n\topen(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.channel.call('open', [resource, opts]);\n\t}\n\n\tclose(fd: number): Promise<void> {\n\t\treturn this.channel.call('close', [fd]);\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst [bytes, bytesRead]: [VSBuffer, number] = await this.channel.call('read', [fd, pos, length]);\n\n\t\t// copy back the data that was written into the buffer on the remote\n\t\t// side. we need to do this because buffers are not referenced by\n\t\t// pointer, but only by value and as such cannot be directly written\n\t\t// to from the other process.\n\t\tdata.set(bytes.buffer.slice(0, bytesRead), offset);\n\n\t\treturn bytesRead;\n\t}\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\tconst buff = <VSBuffer>await this.channel.call('readFile', [resource]);\n\n\t\treturn buff.buffer;\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\t// Reading as file stream goes through an event to the remote side\n\t\tconst listener = this.channel.listen<ReadableStreamEventPayload<VSBuffer>>('readFileStream', [resource, opts])(dataOrErrorOrEnd => {\n\n\t\t\t// data\n\t\t\tif (dataOrErrorOrEnd instanceof VSBuffer) {\n\t\t\t\tstream.write(dataOrErrorOrEnd.buffer);\n\t\t\t}\n\n\t\t\t// end or error\n\t\t\telse {\n\t\t\t\tif (dataOrErrorOrEnd === 'end') {\n\t\t\t\t\tstream.end();\n\t\t\t\t} else {\n\n\t\t\t\t\t// Since we receive data through a IPC channel, it is likely\n\t\t\t\t\t// that the error was not serialized, or only partially. To\n\t\t\t\t\t// ensure our API use is correct, we convert the data to an\n\t\t\t\t\t// error here to forward it properly.\n\t\t\t\t\tlet error = dataOrErrorOrEnd;\n\t\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\t\terror = new Error(toErrorMessage(error));\n\t\t\t\t\t}\n\n\t\t\t\t\tstream.error(error);\n\t\t\t\t\tstream.end();\n\t\t\t\t}\n\n\t\t\t\t// Signal to the remote side that we no longer listen\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\t// Support cancellation\n\t\ttoken.onCancellationRequested(() => {\n\n\t\t\t// Ensure to end the stream properly with an error\n\t\t\t// to indicate the cancellation.\n\t\t\tstream.error(canceled());\n\t\t\tstream.end();\n\n\t\t\t// Ensure to dispose the listener upon cancellation. This will\n\t\t\t// bubble through the remote side as event and allows to stop\n\t\t\t// reading the file.\n\t\t\tlistener.dispose();\n\t\t});\n\n\t\treturn stream;\n\t}\n\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\treturn this.channel.call('write', [fd, pos, VSBuffer.wrap(data), offset, length]);\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.channel.call('writeFile', [resource, VSBuffer.wrap(content), opts]);\n\t}\n\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.channel.call('delete', [resource, opts]);\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this.channel.call('mkdir', [resource]);\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this.channel.call('readdir', [resource]);\n\t}\n\n\trename(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('rename', [resource, target, opts]);\n\t}\n\n\tcopy(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('copy', [resource, target, opts]);\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tconst req = Math.random();\n\t\tthis.channel.call('watch', [this.session, req, resource, opts]);\n\n\t\treturn toDisposable(() => this.channel.call('unwatch', [this.session, req]));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ProxyChannel, getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest, IWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport class FileWatcher extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate service: IWatcherService | undefined;\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (nsfw)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/platform/files/node/watcher/nsfw/watcherApp',\n\t\t\t\t\tVSCODE_PIPE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_VERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tthis.service = ProxyChannel.toService<IWatcherService>(getNextTickChannel(client.getChannel('watcher')));\n\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\tthis._register(this.service.onDidChangeFile(e => !this.isDisposed && this.onDidFilesChange(e)));\n\t\tthis._register(this.service.onDidLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.setFolders(this.folders);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (!this.isDisposed && this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (nsfw)] ${message}` });\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ProxyChannel, getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest, IWatcherOptions, IWatcherService } from 'vs/platform/files/node/watcher/unix/watcher';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport class FileWatcher extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\tprivate service: IWatcherService | undefined;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t\tprivate watcherOptions: IWatcherOptions = {}\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (chokidar)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/platform/files/node/watcher/unix/watcherApp',\n\t\t\t\t\tVSCODE_PIPE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_VERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tthis.service = ProxyChannel.toService<IWatcherService>(getNextTickChannel(client.getChannel('watcher')));\n\t\tthis.service.init({ ...this.watcherOptions, verboseLogging: this.verboseLogging });\n\n\t\tthis._register(this.service.onDidChangeFile(e => !this.isDisposed && this.onDidFilesChange(e)));\n\t\tthis._register(this.service.onDidLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.service.setRoots(this.folders);\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (chokidar)] ${message}` });\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport * as decoder from 'vs/base/node/decoder';\nimport * as glob from 'vs/base/common/glob';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport class OutOfProcessWin32FolderWatcher {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate static changeTypeMap: FileChangeType[] = [FileChangeType.UPDATED, FileChangeType.ADDED, FileChangeType.DELETED];\n\n\tprivate ignored: glob.ParsedPattern[];\n\n\tprivate handle: cp.ChildProcess | undefined;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate watchedFolder: string,\n\t\tignored: string[],\n\t\tprivate eventCallback: (events: IDiskFileChange[]) => void,\n\t\tprivate logCallback: (message: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.restartCounter = 0;\n\n\t\tif (Array.isArray(ignored)) {\n\t\t\tthis.ignored = ignored.map(i => glob.parse(i));\n\t\t} else {\n\t\t\tthis.ignored = [];\n\t\t}\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.log(`Start watching: ${watchedFolder}`);\n\t\t}\n\n\t\tthis.startWatcher();\n\t}\n\n\tprivate startWatcher(): void {\n\t\tconst args = [this.watchedFolder];\n\t\tif (this.verboseLogging) {\n\t\t\targs.push('-verbose');\n\t\t}\n\n\t\tthis.handle = cp.spawn(FileAccess.asFileUri('vs/platform/files/node/watcher/win32/CodeHelper.exe', require).fsPath, args);\n\n\t\tconst stdoutLineDecoder = new decoder.LineDecoder();\n\n\t\t// Events over stdout\n\t\tthis.handle.stdout!.on('data', (data: Buffer) => {\n\n\t\t\t// Collect raw events from output\n\t\t\tconst rawEvents: IDiskFileChange[] = [];\n\t\t\tstdoutLineDecoder.write(data).forEach((line) => {\n\t\t\t\tconst eventParts = line.split('|');\n\t\t\t\tif (eventParts.length === 2) {\n\t\t\t\t\tconst changeType = Number(eventParts[0]);\n\t\t\t\t\tconst absolutePath = eventParts[1];\n\n\t\t\t\t\t// File Change Event (0 Changed, 1 Created, 2 Deleted)\n\t\t\t\t\tif (changeType >= 0 && changeType < 3) {\n\n\t\t\t\t\t\t// Support ignores\n\t\t\t\t\t\tif (this.ignored && this.ignored.some(ignore => ignore(absolutePath))) {\n\t\t\t\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\t\t\t\tthis.log(absolutePath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise record as event\n\t\t\t\t\t\trawEvents.push({\n\t\t\t\t\t\t\ttype: OutOfProcessWin32FolderWatcher.changeTypeMap[changeType],\n\t\t\t\t\t\t\tpath: absolutePath\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// 3 Logging\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.log(eventParts[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Trigger processing of events through the delayer to batch them up properly\n\t\t\tif (rawEvents.length > 0) {\n\t\t\t\tthis.eventCallback(rawEvents);\n\t\t\t}\n\t\t});\n\n\t\t// Errors\n\t\tthis.handle.on('error', (error: Error) => this.onError(error));\n\t\tthis.handle.stderr!.on('data', (data: Buffer) => this.onError(data));\n\n\t\t// Exit\n\t\tthis.handle.on('exit', (code: number, signal: string) => this.onExit(code, signal));\n\t}\n\n\tprivate onError(error: Error | Buffer): void {\n\t\tthis.error('process error: ' + error.toString());\n\t}\n\n\tprivate onExit(code: number, signal: string): void {\n\t\tif (this.handle) { // exit while not yet being disposed is unexpected!\n\t\t\tthis.error(`terminated unexpectedly (code: ${code}, signal: ${signal})`);\n\n\t\t\tif (this.restartCounter <= OutOfProcessWin32FolderWatcher.MAX_RESTARTS) {\n\t\t\t\tthis.error('is restarted again...');\n\t\t\t\tthis.restartCounter++;\n\t\t\t\tthis.startWatcher(); // restart\n\t\t\t} else {\n\t\t\t\tthis.error('Watcher failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate error(message: string) {\n\t\tthis.logCallback({ type: 'error', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tprivate log(message: string) {\n\t\tthis.logCallback({ type: 'trace', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tdispose(): void {\n\t\tif (this.handle) {\n\t\t\tthis.handle.kill();\n\t\t\tthis.handle = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { OutOfProcessWin32FolderWatcher } from 'vs/platform/files/node/watcher/win32/csharpWatcherService';\nimport { posix } from 'vs/base/common/path';\nimport { rtrim } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport class FileWatcher implements IDisposable {\n\n\tprivate folder: { path: string, excludes: string[] };\n\tprivate service: OutOfProcessWin32FolderWatcher | undefined = undefined;\n\n\tconstructor(\n\t\tfolders: { path: string, excludes: string[] }[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.folder = folders[0];\n\n\t\tif (this.folder.path.indexOf('\\\\\\\\') === 0 && this.folder.path.endsWith(posix.sep)) {\n\t\t\t// for some weird reason, node adds a trailing slash to UNC paths\n\t\t\t// we never ever want trailing slashes as our base path unless\n\t\t\t// someone opens root (\"/\").\n\t\t\t// See also https://github.com/nodejs/io.js/issues/1765\n\t\t\tthis.folder.path = rtrim(this.folder.path, posix.sep);\n\t\t}\n\n\t\tthis.service = this.startWatching();\n\t}\n\n\tprivate get isDisposed(): boolean {\n\t\treturn !this.service;\n\t}\n\n\tprivate startWatching(): OutOfProcessWin32FolderWatcher {\n\t\treturn new OutOfProcessWin32FolderWatcher(\n\t\t\tthis.folder.path,\n\t\t\tthis.folder.excludes,\n\t\t\tevents => this.onFileEvents(events),\n\t\t\tmessage => this.onLogMessage(message),\n\t\t\tthis.verboseLogging\n\t\t);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = this.startWatching();\n\t\t}\n\t}\n\n\tprivate onFileEvents(events: IDiskFileChange[]): void {\n\t\tif (this.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Emit through event emitter\n\t\tif (events.length > 0) {\n\t\t\tthis.onDidFilesChange(events);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as instantiation from './instantiation';\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface CreateSyncFunc {\n\n\t<T>(ctor: instantiation.IConstructorSignature0<T>): SyncDescriptor0<T>;\n\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>): SyncDescriptor2<A1, A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1): SyncDescriptor1<A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>): SyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1): SyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>): SyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>): SyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>): SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>): SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>): SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\nexport const createSyncDescriptor: CreateSyncFunc = <T>(ctor: any, ...staticArguments: any[]): any => {\n\treturn new SyncDescriptor<T>(ctor, staticArguments);\n};\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Node<T> {\n\n\treadonly data: T;\n\treadonly incoming = new Map<string, Node<T>>();\n\treadonly outgoing = new Map<string, Node<T>>();\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t}\n}\n\nexport class Graph<T> {\n\n\tprivate readonly _nodes = new Map<string, Node<T>>();\n\n\tconstructor(private readonly _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tif (node.outgoing.size === 0) {\n\t\t\t\tret.push(node);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from);\n\t\tconst toNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing.set(this._hashFn(to), toNode);\n\t\ttoNode.incoming.set(this._hashFn(from), fromNode);\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tthis._nodes.delete(key);\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tnode.outgoing.delete(key);\n\t\t\tnode.incoming.delete(key);\n\t\t}\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes.get(key);\n\n\t\tif (!node) {\n\t\t\tnode = new Node(data);\n\t\t\tthis._nodes.set(key, node);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> | undefined {\n\t\treturn this._nodes.get(this._hashFn(data));\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._nodes.size === 0;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tfor (let [key, value] of this._nodes) {\n\t\t\tdata.push(`${key}, (incoming)[${[...value.incoming.keys()].join(', ')}], (outgoing)[${[...value.outgoing.keys()].join(',')}]`);\n\n\t\t}\n\t\treturn data.join('\\n');\n\t}\n\n\t/**\n\t * This is brute force and slow and **only** be used\n\t * to trouble shoot.\n\t */\n\tfindCycleSlow() {\n\t\tfor (let [id, node] of this._nodes) {\n\t\t\tconst seen = new Set<string>([id]);\n\t\t\tconst res = this._findCycle(node, seen);\n\t\t\tif (res) {\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _findCycle(node: Node<T>, seen: Set<string>): string | undefined {\n\t\tfor (let [id, outgoing] of node.outgoing) {\n\t\t\tif (seen.has(id)) {\n\t\t\t\treturn [...seen, id].join(' -> ');\n\t\t\t}\n\t\t\tseen.add(id);\n\t\t\tconst value = this._findCycle(outgoing, seen);\n\t\t\tif (value) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tseen.delete(id);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\nexport function refineServiceDecorator<T1, T extends T1>(serviceIdentifier: ServiceIdentifier<T1>): ServiceIdentifier<T> {\n\treturn <ServiceIdentifier<T>>serviceIdentifier;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { userAgent, isMacintosh, isLinux, isWindows, isWeb } from 'vs/base/common/platform';\n\nlet _userAgent = userAgent || '';\nconst STATIC_VALUES = new Map<string, boolean>();\nSTATIC_VALUES.set('false', false);\nSTATIC_VALUES.set('true', true);\nSTATIC_VALUES.set('isMac', isMacintosh);\nSTATIC_VALUES.set('isLinux', isLinux);\nSTATIC_VALUES.set('isWindows', isWindows);\nSTATIC_VALUES.set('isWeb', isWeb);\nSTATIC_VALUES.set('isMacNative', isMacintosh && !isWeb);\nSTATIC_VALUES.set('isEdge', _userAgent.indexOf('Edg/') >= 0);\nSTATIC_VALUES.set('isFirefox', _userAgent.indexOf('Firefox') >= 0);\nSTATIC_VALUES.set('isChrome', _userAgent.indexOf('Chrome') >= 0);\nSTATIC_VALUES.set('isSafari', _userAgent.indexOf('Safari') >= 0);\nSTATIC_VALUES.set('isIPad', _userAgent.indexOf('iPad') >= 0);\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport const enum ContextKeyExprType {\n\tFalse = 0,\n\tTrue = 1,\n\tDefined = 2,\n\tNot = 3,\n\tEquals = 4,\n\tNotEquals = 5,\n\tAnd = 6,\n\tRegex = 7,\n\tNotRegex = 8,\n\tOr = 9,\n\tIn = 10,\n\tNotIn = 11,\n\tGreater = 12,\n\tGreaterEquals = 13,\n\tSmaller = 14,\n\tSmallerEquals = 15,\n}\n\nexport interface IContextKeyExprMapper {\n\tmapDefined(key: string): ContextKeyExpression;\n\tmapNot(key: string): ContextKeyExpression;\n\tmapEquals(key: string, value: any): ContextKeyExpression;\n\tmapNotEquals(key: string, value: any): ContextKeyExpression;\n\tmapGreater(key: string, value: any): ContextKeyExpression;\n\tmapGreaterEquals(key: string, value: any): ContextKeyExpression;\n\tmapSmaller(key: string, value: any): ContextKeyExpression;\n\tmapSmallerEquals(key: string, value: any): ContextKeyExpression;\n\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr;\n\tmapIn(key: string, valueKey: string): ContextKeyInExpr;\n}\n\nexport interface IContextKeyExpression {\n\tcmp(other: ContextKeyExpression): number;\n\tequals(other: ContextKeyExpression): boolean;\n\tevaluate(context: IContext): boolean;\n\tserialize(): string;\n\tkeys(): string[];\n\tmap(mapFnc: IContextKeyExprMapper): ContextKeyExpression;\n\tnegate(): ContextKeyExpression;\n\n}\n\nexport type ContextKeyExpression = (\n\tContextKeyFalseExpr | ContextKeyTrueExpr | ContextKeyDefinedExpr | ContextKeyNotExpr\n\t| ContextKeyEqualsExpr | ContextKeyNotEqualsExpr | ContextKeyRegexExpr\n\t| ContextKeyNotRegexExpr | ContextKeyAndExpr | ContextKeyOrExpr | ContextKeyInExpr\n\t| ContextKeyNotInExpr | ContextKeyGreaterExpr | ContextKeyGreaterEqualsExpr\n\t| ContextKeySmallerExpr | ContextKeySmallerEqualsExpr\n);\n\nexport abstract class ContextKeyExpr {\n\n\tpublic static false(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n\n\tpublic static true(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n\n\tpublic static has(key: string): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(key);\n\t}\n\n\tpublic static equals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(key, value);\n\t}\n\n\tpublic static notEquals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(key, value);\n\t}\n\n\tpublic static regex(key: string, value: RegExp): ContextKeyExpression {\n\t\treturn ContextKeyRegexExpr.create(key, value);\n\t}\n\n\tpublic static in(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyInExpr.create(key, value);\n\t}\n\n\tpublic static not(key: string): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(key);\n\t}\n\n\tpublic static and(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr.create(expr);\n\t}\n\n\tpublic static or(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr.create(expr);\n\t}\n\n\tpublic static greater(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyGreaterExpr.create(key, value);\n\t}\n\n\tpublic static less(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeySmallerExpr.create(key, value);\n\t}\n\n\tpublic static deserialize(serialized: string | null | undefined, strict: boolean = false): ContextKeyExpression | undefined {\n\t\tif (!serialized) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._deserializeOrExpression(serialized, strict);\n\t}\n\n\tprivate static _deserializeOrExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tlet pieces = serialized.split('||');\n\t\treturn ContextKeyOrExpr.create(pieces.map(p => this._deserializeAndExpression(p, strict)));\n\t}\n\n\tprivate static _deserializeAndExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tlet pieces = serialized.split('&&');\n\t\treturn ContextKeyAndExpr.create(pieces.map(p => this._deserializeOne(p, strict)));\n\t}\n\n\tprivate static _deserializeOne(serializedOne: string, strict: boolean): ContextKeyExpression {\n\t\tserializedOne = serializedOne.trim();\n\n\t\tif (serializedOne.indexOf('!=') >= 0) {\n\t\t\tlet pieces = serializedOne.split('!=');\n\t\t\treturn ContextKeyNotEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('==') >= 0) {\n\t\t\tlet pieces = serializedOne.split('==');\n\t\t\treturn ContextKeyEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('=~') >= 0) {\n\t\t\tlet pieces = serializedOne.split('=~');\n\t\t\treturn ContextKeyRegexExpr.create(pieces[0].trim(), this._deserializeRegexValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf(' in ') >= 0) {\n\t\t\tlet pieces = serializedOne.split(' in ');\n\t\t\treturn ContextKeyInExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+>=[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('>=');\n\t\t\treturn ContextKeyGreaterEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+>[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('>');\n\t\t\treturn ContextKeyGreaterExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+<=[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('<=');\n\t\t\treturn ContextKeySmallerEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+<[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('<');\n\t\t\treturn ContextKeySmallerExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^\\!\\s*/.test(serializedOne)) {\n\t\t\treturn ContextKeyNotExpr.create(serializedOne.substr(1).trim());\n\t\t}\n\n\t\treturn ContextKeyDefinedExpr.create(serializedOne);\n\t}\n\n\tprivate static _deserializeValue(serializedValue: string, strict: boolean): any {\n\t\tserializedValue = serializedValue.trim();\n\n\t\tif (serializedValue === 'true') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (serializedValue === 'false') {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet m = /^'([^']*)'$/.exec(serializedValue);\n\t\tif (m) {\n\t\t\treturn m[1].trim();\n\t\t}\n\n\t\treturn serializedValue;\n\t}\n\n\tprivate static _deserializeRegexValue(serializedValue: string, strict: boolean): RegExp | null {\n\n\t\tif (isFalsyOrWhitespace(serializedValue)) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error('missing regexp-value for =~-expression');\n\t\t\t} else {\n\t\t\t\tconsole.warn('missing regexp-value for =~-expression');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tlet start = serializedValue.indexOf('/');\n\t\tlet end = serializedValue.lastIndexOf('/');\n\t\tif (start === end || start < 0 /* || to < 0 */) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = serializedValue.slice(start + 1, end);\n\t\tlet caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n\t\ttry {\n\t\t\treturn new RegExp(value, caseIgnoreFlag);\n\t\t} catch (e) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nfunction cmp(a: ContextKeyExpression, b: ContextKeyExpression): number {\n\treturn a.cmp(b);\n}\n\nexport class ContextKeyFalseExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyFalseExpr();\n\n\tpublic readonly type = ContextKeyExprType.False;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'false';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyTrueExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyTrueExpr();\n\n\tpublic readonly type = ContextKeyExprType.True;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn true;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'true';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyDefinedExpr implements IContextKeyExpression {\n\tpublic static create(key: string): ContextKeyExpression {\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\treturn staticValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn new ContextKeyDefinedExpr(key);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Defined;\n\n\tprotected constructor(readonly key: string) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapDefined(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(this.key);\n\t}\n}\n\nexport class ContextKeyEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\treturn (value ? ContextKeyDefinedExpr.create(key) : ContextKeyNotExpr.create(key));\n\t\t}\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\tconst trueValue = staticValue ? 'true' : 'false';\n\t\t\treturn (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyEqualsExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Equals;\n\n\tprivate constructor(private readonly key: string, private readonly value: any) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional ==\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) == this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} == '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyInExpr {\n\t\treturn new ContextKeyInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.In;\n\n\tprivate constructor(private readonly key: string, private readonly valueKey: string) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.valueKey, other.key, other.valueKey);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.valueKey === other.valueKey);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst source = context.getValue(this.valueKey);\n\n\t\tconst item = context.getValue(this.key);\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn (source.indexOf(item) >= 0);\n\t\t}\n\n\t\tif (typeof item === 'string' && typeof source === 'object' && source !== null) {\n\t\t\treturn hasOwnProperty.call(source, item);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} in '${this.valueKey}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key, this.valueKey];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyInExpr {\n\t\treturn mapFnc.mapIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotInExpr.create(this);\n\t}\n}\n\nexport class ContextKeyNotInExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyInExpr): ContextKeyNotInExpr {\n\t\treturn new ContextKeyNotInExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotIn;\n\n\tprivate constructor(private readonly _actual: ContextKeyInExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotInExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\nexport class ContextKeyNotEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\tif (value) {\n\t\t\t\treturn ContextKeyNotExpr.create(key);\n\t\t\t}\n\t\t\treturn ContextKeyDefinedExpr.create(key);\n\t\t}\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\tconst falseValue = staticValue ? 'true' : 'false';\n\t\t\treturn (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotEqualsExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotEquals;\n\n\tprivate constructor(private readonly key: string, private readonly value: any) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional !=\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) != this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} != '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyNotExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string): ContextKeyExpression {\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\treturn (staticValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotExpr(key);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Not;\n\n\tprivate constructor(private readonly key: string) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `!${this.key}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNot(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(this.key);\n\t}\n}\n\nexport class ContextKeyGreaterExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\treturn new ContextKeyGreaterExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Greater;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (parseFloat(<any>context.getValue(this.key)) > parseFloat(this.value));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} > ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreater(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeySmallerEqualsExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyGreaterEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\treturn new ContextKeyGreaterEqualsExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.GreaterEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (parseFloat(<any>context.getValue(this.key)) >= parseFloat(this.value));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} >= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreaterEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeySmallerExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeySmallerExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\treturn new ContextKeySmallerExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Smaller;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (parseFloat(<any>context.getValue(this.key)) < parseFloat(this.value));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} < ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmaller(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyGreaterEqualsExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeySmallerEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\treturn new ContextKeySmallerEqualsExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.SmallerEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (parseFloat(<any>context.getValue(this.key)) <= parseFloat(this.value));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} <= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmallerEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyGreaterExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, regexp: RegExp | null): ContextKeyRegexExpr {\n\t\treturn new ContextKeyRegexExpr(key, regexp);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Regex;\n\n\tprivate constructor(private readonly key: string, private readonly regexp: RegExp | null) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\tif (thisSource < otherSource) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (thisSource > otherSource) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\t\treturn (this.key === other.key && thisSource === otherSource);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tlet value = context.getValue<any>(this.key);\n\t\treturn this.regexp ? this.regexp.test(value) : false;\n\t}\n\n\tpublic serialize(): string {\n\t\tconst value = this.regexp\n\t\t\t? `/${this.regexp.source}/${this.regexp.ignoreCase ? 'i' : ''}`\n\t\t\t: '/invalid/';\n\t\treturn `${this.key} =~ ${value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyRegexExpr {\n\t\treturn mapFnc.mapRegex(this.key, this.regexp);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotRegexExpr.create(this);\n\t}\n}\n\nexport class ContextKeyNotRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyRegexExpr): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotRegex;\n\n\tprivate constructor(private readonly _actual: ContextKeyRegexExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\nexport class ContextKeyAndExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr._normalizeArr(_expr);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.And;\n\n\tprivate constructor(public readonly expr: ContextKeyExpression[]) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (!this.expr[i].evaluate(context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression | undefined {\n\t\tconst expr: ContextKeyExpression[] = [];\n\t\tlet hasTrue = false;\n\n\t\tfor (const e of arr) {\n\t\t\tif (!e) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t// anything && true ==> anything\n\t\t\t\thasTrue = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t// anything && false ==> false\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.And) {\n\t\t\t\texpr.push(...e.expr);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\texpr.push(e);\n\t\t}\n\n\t\tif (expr.length === 0 && hasTrue) {\n\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\texpr.sort(cmp);\n\n\t\t// We must distribute any OR expression because we don't support parens\n\t\t// OR extensions will be at the end (due to sorting rules)\n\t\twhile (expr.length > 1) {\n\t\t\tconst lastElement = expr[expr.length - 1];\n\t\t\tif (lastElement.type !== ContextKeyExprType.Or) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// pop the last element\n\t\t\texpr.pop();\n\n\t\t\t// pop the second to last element\n\t\t\tconst secondToLastElement = expr.pop()!;\n\n\t\t\t// distribute `lastElement` over `secondToLastElement`\n\t\t\tconst resultElement = ContextKeyOrExpr.create(\n\t\t\t\tlastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement]))\n\t\t\t);\n\n\t\t\tif (resultElement) {\n\t\t\t\texpr.push(resultElement);\n\t\t\t\texpr.sort(cmp);\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\treturn new ContextKeyAndExpr(expr);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' && ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyAndExpr(this.expr.map(expr => expr.map(mapFnc)));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tlet result: ContextKeyExpression[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(expr.negate());\n\t\t}\n\t\treturn ContextKeyOrExpr.create(result)!;\n\t}\n}\n\nexport class ContextKeyOrExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression | undefined {\n\t\tconst expr = ContextKeyOrExpr._normalizeArr(_expr);\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\treturn new ContextKeyOrExpr(expr);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Or;\n\n\tprivate constructor(public readonly expr: ContextKeyExpression[]) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (this.expr[i].evaluate(context)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression[] {\n\t\tlet expr: ContextKeyExpression[] = [];\n\t\tlet hasFalse = false;\n\n\t\tif (arr) {\n\t\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\t\tconst e = arr[i];\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t\t// anything || false ==> anything\n\t\t\t\t\thasFalse = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t\t// anything || true ==> true\n\t\t\t\t\treturn [ContextKeyTrueExpr.INSTANCE];\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.Or) {\n\t\t\t\t\texpr = expr.concat(e.expr);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\texpr.push(e);\n\t\t\t}\n\n\t\t\tif (expr.length === 0 && hasFalse) {\n\t\t\t\treturn [ContextKeyFalseExpr.INSTANCE];\n\t\t\t}\n\n\t\t\texpr.sort(cmp);\n\t\t}\n\n\t\treturn expr;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' || ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyOrExpr(this.expr.map(expr => expr.map(mapFnc)));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tlet result: ContextKeyExpression[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(expr.negate());\n\t\t}\n\n\t\tconst terminals = (node: ContextKeyExpression) => {\n\t\t\tif (node.type === ContextKeyExprType.Or) {\n\t\t\t\treturn node.expr;\n\t\t\t}\n\t\t\treturn [node];\n\t\t};\n\n\t\t// We don't support parens, so here we distribute the AND over the OR terminals\n\t\t// We always take the first 2 AND pairs and distribute them\n\t\twhile (result.length > 1) {\n\t\t\tconst LEFT = result.shift()!;\n\t\t\tconst RIGHT = result.shift()!;\n\n\t\t\tconst all: ContextKeyExpression[] = [];\n\t\t\tfor (const left of terminals(LEFT)) {\n\t\t\t\tfor (const right of terminals(RIGHT)) {\n\t\t\t\t\tall.push(ContextKeyExpr.and(left, right)!);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.unshift(ContextKeyExpr.or(...all)!);\n\t\t}\n\n\t\treturn result[0];\n\t}\n}\n\nexport interface ContextKeyInfo {\n\treadonly key: string;\n\treadonly type?: string;\n\treadonly description?: string;\n}\n\nexport class RawContextKey<T> extends ContextKeyDefinedExpr {\n\n\tprivate static _info: ContextKeyInfo[] = [];\n\n\tstatic all(): IterableIterator<ContextKeyInfo> {\n\t\treturn RawContextKey._info.values();\n\t}\n\n\tprivate readonly _defaultValue: T | undefined;\n\n\tconstructor(key: string, defaultValue: T | undefined, metaOrHide?: string | true | { type: string, description: string }) {\n\t\tsuper(key);\n\t\tthis._defaultValue = defaultValue;\n\n\t\t// collect all context keys into a central place\n\t\tif (typeof metaOrHide === 'object') {\n\t\t\tRawContextKey._info.push({ ...metaOrHide, key });\n\t\t} else if (metaOrHide !== true) {\n\t\t\tRawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n\t\t}\n\t}\n\n\tpublic bindTo(target: IContextKeyService): IContextKey<T> {\n\t\treturn target.createKey(this.key, this._defaultValue);\n\t}\n\n\tpublic getValue(target: IContextKeyService): T | undefined {\n\t\treturn target.getContextKeyValue<T>(this.key);\n\t}\n\n\tpublic toNegated(): ContextKeyExpression {\n\t\treturn ContextKeyExpr.not(this.key);\n\t}\n\n\tpublic isEqualTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyExpr.equals(this.key, value);\n\t}\n\n\tpublic notEqualsTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyExpr.notEquals(this.key, value);\n\t}\n}\n\nexport interface IContext {\n\tgetValue<T>(key: string): T | undefined;\n}\n\nexport interface IContextKey<T> {\n\tset(value: T): void;\n\treset(): void;\n\tget(): T | undefined;\n}\n\nexport interface IContextKeyServiceTarget {\n\tparentElement: IContextKeyServiceTarget | null;\n\tsetAttribute(attr: string, value: string): void;\n\tremoveAttribute(attr: string): void;\n\thasAttribute(attr: string): boolean;\n\tgetAttribute(attr: string): string | null;\n}\n\nexport const IContextKeyService = createDecorator<IContextKeyService>('contextKeyService');\n\nexport interface IReadableSet<T> {\n\thas(value: T): boolean;\n}\n\nexport interface IContextKeyChangeEvent {\n\taffectsSome(keys: IReadableSet<string>): boolean;\n}\n\nexport interface IContextKeyService {\n\treadonly _serviceBrand: undefined;\n\tdispose(): void;\n\n\tonDidChangeContext: Event<IContextKeyChangeEvent>;\n\tbufferChangeEvents(callback: Function): void;\n\n\tcreateKey<T>(key: string, defaultValue: T | undefined): IContextKey<T>;\n\tcontextMatchesRules(rules: ContextKeyExpression | undefined): boolean;\n\tgetContextKeyValue<T>(key: string): T | undefined;\n\n\tcreateScoped(target: IContextKeyServiceTarget): IContextKeyService;\n\tcreateOverlay(overlay: Iterable<[string, any]>): IContextKeyService;\n\tgetContext(target: IContextKeyServiceTarget | null): IContext;\n\n\tupdateParent(parentContextKeyService: IContextKeyService): void;\n}\n\nexport const SET_CONTEXT_COMMAND_ID = 'setContext';\n\nfunction cmp1(key1: string, key2: string): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nfunction cmp2(key1: string, value1: any, key2: string, value2: any): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\tif (value1 < value2) {\n\t\treturn -1;\n\t}\n\tif (value1 > value2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IDownloadService = createDecorator<IDownloadService>('downloadService');\n\nexport interface IDownloadService {\n\n\treadonly _serviceBrand: undefined;\n\n\tdownload(uri: URI, to: URI, cancellationToken?: CancellationToken): Promise<void>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator, refineServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\nexport const INativeEnvironmentService = refineServiceDecorator<IEnvironmentService, INativeEnvironmentService>(IEnvironmentService);\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n}\n\n/**\n * A basic environment service that can be used in various processes,\n * such as main, renderer and shared process. Use subclasses of this\n * service for specific environment.\n */\nexport interface IEnvironmentService {\n\n\treadonly _serviceBrand: undefined;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t// --- user roaming data\n\tuserRoamingDataHome: URI;\n\tsettingsResource: URI;\n\tkeybindingsResource: URI;\n\tkeyboardLayoutResource: URI;\n\targvResource: URI;\n\tsnippetsHome: URI;\n\n\t// --- data paths\n\tuntitledWorkspacesHome: URI;\n\tglobalStorageHome: URI;\n\tworkspaceStorageHome: URI;\n\n\t// --- settings sync\n\tuserDataSyncHome: URI;\n\tuserDataSyncLogResource: URI;\n\tsync: 'on' | 'off' | undefined;\n\n\t// --- extension development\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\textensionDevelopmentLocationURI?: URI[];\n\textensionDevelopmentKind?: ExtensionKind[];\n\textensionTestsLocationURI?: URI;\n\n\t// --- logging\n\tlogsPath: string;\n\tlogLevel?: string;\n\tverbose: boolean;\n\tisBuilt: boolean;\n\n\t// --- telemetry\n\tdisableTelemetry: boolean;\n\ttelemetryLogResource: URI;\n\tserviceMachineIdResource: URI;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n\n/**\n * A subclass of the `IEnvironmentService` to be used only in native\n * environments (Windows, Linux, macOS) but not e.g. web.\n */\nexport interface INativeEnvironmentService extends IEnvironmentService {\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t// --- CLI Arguments\n\targs: NativeParsedArgs;\n\n\t// --- data paths\n\tappRoot: string;\n\tuserHome: URI;\n\tappSettingsHome: URI;\n\ttmpDir: URI;\n\tuserDataPath: string;\n\tmachineSettingsResource: URI;\n\tinstallSourcePath: string;\n\n\t// --- extensions\n\textensionsPath: string;\n\textensionsDownloadPath: string;\n\tbuiltinExtensionsPath: string;\n\textraExtensionPaths: string[]\n\textraBuiltinExtensionPaths: string[]\n\n\t// --- smoke test support\n\tdriverHandle?: string;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { join, dirname, basename } from 'vs/base/common/path';\nimport { readdir, rimraf } from 'vs/base/node/pfs';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { Promises } from 'vs/base/common/async';\n\nexport class LogsDataCleaner extends Disposable {\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.cleanUpOldLogsSoon();\n\t}\n\n\tprivate cleanUpOldLogsSoon(): void {\n\t\tlet handle: NodeJS.Timeout | undefined = setTimeout(() => {\n\t\t\thandle = undefined;\n\n\t\t\tconst currentLog = basename(this.environmentService.logsPath);\n\t\t\tconst logsRoot = dirname(this.environmentService.logsPath);\n\n\t\t\treaddir(logsRoot).then(children => {\n\t\t\t\tconst allSessions = children.filter(name => /^\\d{8}T\\d{6}$/.test(name));\n\t\t\t\tconst oldSessions = allSessions.sort().filter((d, i) => d !== currentLog);\n\t\t\t\tconst toDelete = oldSessions.slice(0, Math.max(0, oldSessions.length - 9));\n\n\t\t\t\treturn Promises.settled(toDelete.map(name => rimraf(join(logsRoot, name))));\n\t\t\t}).then(null, onUnexpectedError);\n\t\t}, 10 * 1000);\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (handle) {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\thandle = undefined;\n\t\t\t}\n\t\t}));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IPager } from 'vs/base/common/paging';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionManifest, IExtension, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n\twebExtension?: boolean;\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset;\n\tcoreTranslations: [string, IGalleryExtensionAsset][];\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionIdentifier\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"uuid\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n */\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IExtensionIdentifierWithVersion extends IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n\tversion: string;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdate: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tassetUri: URI;\n\tassetTypes: string[];\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData: any;\n\tpreview: boolean;\n\twebResource?: URI;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n}\n\nexport interface ILocalExtension extends IExtension {\n\tisMachineScoped: boolean;\n\tpublisherId: string | null;\n\tpublisherDisplayName: string | null;\n\tinstalledTimestamp?: number;\n}\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 5,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n}\n\nexport const enum StatisticType {\n\tUninstall = 'uninstall'\n}\n\nexport interface IReportedExtension {\n\tid: IExtensionIdentifier;\n\tmalicious: boolean;\n}\n\nexport const enum InstallOperation {\n\tNone = 0,\n\tInstall,\n\tUpdate\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\nexport interface IExtensionGalleryService {\n\treadonly _serviceBrand: undefined;\n\tisEnabled(): boolean;\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tgetExtensions(ids: string[], token: CancellationToken): Promise<IGalleryExtension[]>;\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\tgetCompatibleExtension(extension: IGalleryExtension): Promise<IGalleryExtension | null>;\n\tgetCompatibleExtension(id: IExtensionIdentifier, version?: string): Promise<IGalleryExtension | null>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n}\n\nexport interface DidInstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\toperation: InstallOperation;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n\tlocal?: ILocalExtension;\n\terror?: string;\n}\n\nexport interface DidUninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\terror?: string;\n}\n\nexport const INSTALL_ERROR_NOT_SUPPORTED = 'notsupported';\nexport const INSTALL_ERROR_MALICIOUS = 'malicious';\nexport const INSTALL_ERROR_INCOMPATIBLE = 'incompatible';\n\nexport class ExtensionManagementError extends Error {\n\tconstructor(message: string, readonly code: string) {\n\t\tsuper(message);\n\t}\n}\n\nexport type InstallOptions = { isBuiltin?: boolean, isMachineScoped?: boolean, donotIncludePackAndDependencies?: boolean };\nexport type UninstallOptions = { donotIncludePack?: boolean, donotCheckDependents?: boolean };\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport interface IExtensionManagementService {\n\treadonly _serviceBrand: undefined;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier>;\n\tgetManifest(vsix: URI): Promise<IExtensionManifest>;\n\tinstall(vsix: URI, options?: InstallOptions): Promise<ILocalExtension>;\n\tcanInstall(extension: IGalleryExtension): Promise<boolean>;\n\tinstallFromGallery(extension: IGalleryExtension, options?: InstallOptions): Promise<ILocalExtension>;\n\tuninstall(extension: ILocalExtension, options?: UninstallOptions): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType): Promise<ILocalExtension[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n\tupdateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension>;\n}\n\nexport const DISABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/disabled';\nexport const ENABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/enabled';\nexport const IGlobalExtensionEnablementService = createDecorator<IGlobalExtensionEnablementService>('IGlobalExtensionEnablementService');\n\nexport interface IGlobalExtensionEnablementService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }>;\n\n\tgetDisabledExtensions(): IExtensionIdentifier[];\n\tenableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\tdisableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\n}\n\nexport type IConfigBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly configName: string,\n\treadonly important: boolean,\n};\n\nexport type IExecutableBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly exeName: string,\n\treadonly exeFriendlyName: string,\n\treadonly windowsPath?: string,\n};\n\nexport type IWorkspaceTips = { readonly remoteSet: string[]; readonly recommendations: string[]; };\n\nexport const IExtensionTipsService = createDecorator<IExtensionTipsService>('IExtensionTipsService');\nexport interface IExtensionTipsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetConfigBasedTips(folder: URI): Promise<IConfigBasedExtensionTip[]>;\n\tgetImportantExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetOtherExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetAllWorkspacesTips(): Promise<IWorkspaceTips[]>;\n}\n\n\nexport const DefaultIconPath = FileAccess.asBrowserUri('./media/defaultIcon.png', require).toString(true);\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsLocalizedLabel = { value: ExtensionsLabel, original: 'Extensions' };\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\nexport const PreferencesLocalizedLabel = { value: PreferencesLabel, original: 'Preferences' };\n\n\nexport interface CLIOutput {\n\tlog(s: string): void;\n\terror(s: string): void;\n}\n\nexport const IExtensionManagementCLIService = createDecorator<IExtensionManagementCLIService>('IExtensionManagementCLIService');\nexport interface IExtensionManagementCLIService {\n\treadonly _serviceBrand: undefined;\n\n\tlistExtensions(showVersions: boolean, category?: string, output?: CLIOutput): Promise<void>;\n\tinstallExtensions(extensions: (string | URI)[], builtinExtensionIds: string[], isMachineScoped: boolean, force: boolean, output?: CLIOutput): Promise<void>;\n\tuninstallExtensions(extensions: (string | URI)[], force: boolean, output?: CLIOutput): Promise<void>;\n\tlocateExtension(extensions: string[], output?: CLIOutput): Promise<void>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string | string[];\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IAuthenticationContribution {\n\treadonly id: string;\n\treadonly label: string;\n}\n\nexport interface IWalkthroughStep {\n\treadonly id: string;\n\treadonly title: string;\n\treadonly description: string;\n\treadonly media:\n\t| { path: string | { dark: string, light: string, hc: string }, altText: string }\n\t| { path: string, },\n\treadonly doneOn?: { command: string };\n\treadonly when?: string;\n}\n\nexport interface IWalkthrough {\n\treadonly id: string,\n\treadonly title: string;\n\treadonly description: string;\n\treadonly steps: IWalkthroughStep[];\n\treadonly primary?: boolean;\n\treadonly when?: string;\n}\n\nexport interface IStartEntry {\n\treadonly title: string;\n\treadonly description: string;\n\treadonly command: string;\n\treadonly type?: 'sample-folder' | 'sample-notebook' | string;\n\treadonly when?: string;\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tproductIconThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n\treadonly customEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n\tauthentication?: IAuthenticationContribution[];\n\twalkthroughs?: IWalkthrough[];\n\tstartEntries?: IStartEntry[];\n}\n\nexport interface IExtensionCapabilities {\n\treadonly virtualWorkspaces?: boolean;\n\treadonly untrustedWorkspaces?: ExtensionUntrustedWorkspaceSupport;\n}\n\nexport type ExtensionKind = 'ui' | 'workspace' | 'web';\nexport type ExtensionUntrustedWorkpaceSupportType = boolean | 'limited';\nexport type ExtensionUntrustedWorkspaceSupport = { supported: true; } | { supported: false, description: string } | { supported: 'limited', description: string, restrictedConfigurations?: string[] };\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport const EXTENSION_CATEGORIES = [\n\t'Azure',\n\t'Data Science',\n\t'Debuggers',\n\t'Extension Packs',\n\t'Education',\n\t'Formatters',\n\t'Keymaps',\n\t'Language Packs',\n\t'Linters',\n\t'Machine Learning',\n\t'Notebooks',\n\t'Programming Languages',\n\t'SCM Providers',\n\t'Snippets',\n\t'Testing',\n\t'Themes',\n\t'Visualization',\n\t'Other',\n];\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { readonly vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly browser?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind | ExtensionKind[];\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enableProposedApi?: boolean;\n\treadonly api?: string;\n\treadonly scripts?: { [key: string]: string; };\n\treadonly capabilities?: IExtensionCapabilities;\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly isBuiltin: boolean;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport interface IExtensionDescription extends IExtensionManifest {\n\treadonly identifier: ExtensionIdentifier;\n\treadonly uuid?: string;\n\treadonly isBuiltin: boolean;\n\treadonly isUserBuiltin: boolean;\n\treadonly isUnderDevelopment: boolean;\n\treadonly extensionLocation: URI;\n\tenableProposedApi?: boolean;\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\n\nexport function isAuthenticaionProviderExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.authentication ? manifest.contributes.authentication.length > 0 : false;\n}\n\nexport interface IScannedExtension {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly location: URI;\n\treadonly type: ExtensionType;\n\treadonly packageJSON: IExtensionManifest;\n\treadonly packageNLS?: any;\n\treadonly packageNLSUrl?: URI;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n\treadonly isUnderDevelopment: boolean;\n}\n\nexport interface ITranslatedScannedExtension {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly location: URI;\n\treadonly type: ExtensionType;\n\treadonly packageJSON: IExtensionManifest;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n\treadonly isUnderDevelopment: boolean;\n}\n\nexport const IBuiltinExtensionsScannerService = createDecorator<IBuiltinExtensionsScannerService>('IBuiltinExtensionsScannerService');\nexport interface IBuiltinExtensionsScannerService {\n\treadonly _serviceBrand: undefined;\n\tscanBuiltinExtensions(): Promise<IScannedExtension[]>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalExtension, IGalleryExtension, IExtensionIdentifier, IReportedExtension, IExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { compareIgnoreCase } from 'vs/base/common/strings';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport class ExtensionIdentifierWithVersion implements IExtensionIdentifierWithVersion {\n\n\treadonly id: string;\n\treadonly uuid?: string;\n\n\tconstructor(\n\t\tidentifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) {\n\t\tthis.id = identifier.id;\n\t\tthis.uuid = identifier.uuid;\n\t}\n\n\tkey(): string {\n\t\treturn `${this.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this, o) && this.version === o.version;\n\t}\n}\n\nexport function getExtensionId(publisher: string, name: string): string {\n\treturn `${publisher}.${name}`;\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn adoptToGalleryExtensionId(getExtensionId(publisher, name));\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = (extension: T) => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = new ExtensionIdentifier('pprice.better-merge');\n\nexport function getMaliciousExtensionsSet(report: IReportedExtension[]): Set<string> {\n\tconst result = new Set<string>();\n\n\tfor (const extension of report) {\n\t\tif (extension.malicious) {\n\t\t\tresult.add(extension.id.id);\n\t\t}\n\t}\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\n\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { URI } from 'vs/base/common/uri';\nimport { gt } from 'vs/base/common/semver/semver';\nimport { CLIOutput, IExtensionGalleryService, IExtensionManagementCLIService, IExtensionManagementService, IGalleryExtension, ILocalExtension, InstallOptions } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { adoptToGalleryExtensionId, areSameExtensions, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionType, EXTENSION_CATEGORIES, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Schemas } from 'vs/base/common/network';\n\nconst notFound = (id: string) => localize('notFound', \"Extension '{0}' not found.\", id);\nconst useId = localize('useId', \"Make sure you use the full extension ID, including the publisher, e.g.: {0}\", 'ms-dotnettools.csharp');\n\n\nfunction getId(manifest: IExtensionManifest, withVersion?: boolean): string {\n\tif (withVersion) {\n\t\treturn `${manifest.publisher}.${manifest.name}@${manifest.version}`;\n\t} else {\n\t\treturn `${manifest.publisher}.${manifest.name}`;\n\t}\n}\n\nconst EXTENSION_ID_REGEX = /^([^.]+\\..+)@(\\d+\\.\\d+\\.\\d+(-.*)?)$/;\n\nexport function getIdAndVersion(id: string): [string, string | undefined] {\n\tconst matches = EXTENSION_ID_REGEX.exec(id);\n\tif (matches && matches[1]) {\n\t\treturn [adoptToGalleryExtensionId(matches[1]), matches[2]];\n\t}\n\treturn [adoptToGalleryExtensionId(id), undefined];\n}\n\ntype InstallExtensionInfo = { id: string, version?: string, installOptions: InstallOptions };\n\n\nexport class ExtensionManagementCLIService implements IExtensionManagementCLIService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService\n\t) { }\n\n\tprotected get location(): string | undefined {\n\t\treturn undefined;\n\t}\n\n\tpublic async listExtensions(showVersions: boolean, category?: string, output: CLIOutput = console): Promise<void> {\n\t\tlet extensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst categories = EXTENSION_CATEGORIES.map(c => c.toLowerCase());\n\t\tif (category && category !== '') {\n\t\t\tif (categories.indexOf(category.toLowerCase()) < 0) {\n\t\t\t\toutput.log('Invalid category please enter a valid category. To list valid categories run --category without a category specified');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\textensions = extensions.filter(e => {\n\t\t\t\tif (e.manifest.categories) {\n\t\t\t\t\tconst lowerCaseCategories: string[] = e.manifest.categories.map(c => c.toLowerCase());\n\t\t\t\t\treturn lowerCaseCategories.indexOf(category.toLowerCase()) > -1;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t} else if (category === '') {\n\t\t\toutput.log('Possible Categories: ');\n\t\t\tcategories.forEach(category => {\n\t\t\t\toutput.log(category);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tif (this.location) {\n\t\t\toutput.log(localize('listFromLocation', \"Extensions installed on {0}:\", this.location));\n\t\t}\n\n\t\textensions = extensions.sort((e1, e2) => e1.identifier.id.localeCompare(e2.identifier.id));\n\t\tlet lastId: string | undefined = undefined;\n\t\tfor (let extension of extensions) {\n\t\t\tif (lastId !== extension.identifier.id) {\n\t\t\t\tlastId = extension.identifier.id;\n\t\t\t\toutput.log(getId(extension.manifest, showVersions));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async installExtensions(extensions: (string | URI)[], builtinExtensionIds: string[], isMachineScoped: boolean, force: boolean, output: CLIOutput = console): Promise<void> {\n\t\tconst failed: string[] = [];\n\t\tconst installedExtensionsManifests: IExtensionManifest[] = [];\n\t\tif (extensions.length) {\n\t\t\toutput.log(this.location ? localize('installingExtensionsOnLocation', \"Installing extensions on {0}...\", this.location) : localize('installingExtensions', \"Installing extensions...\"));\n\t\t}\n\n\t\tconst installed = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst checkIfNotInstalled = (id: string, version?: string): boolean => {\n\t\t\tconst installedExtension = installed.find(i => areSameExtensions(i.identifier, { id }));\n\t\t\tif (installedExtension) {\n\t\t\t\tif (!version && !force) {\n\t\t\t\t\toutput.log(localize('alreadyInstalled-checkAndUpdate', \"Extension '{0}' v{1} is already installed. Use '--force' option to update to latest version or provide '@<version>' to install a specific version, for example: '{2}@1.2.3'.\", id, installedExtension.manifest.version, id));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (version && installedExtension.manifest.version === version) {\n\t\t\t\t\toutput.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", `${id}@${version}`));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\tconst vsixs: URI[] = [];\n\t\tconst installExtensionInfos: InstallExtensionInfo[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension instanceof URI) {\n\t\t\t\tvsixs.push(extension);\n\t\t\t} else {\n\t\t\t\tconst [id, version] = getIdAndVersion(extension);\n\t\t\t\tif (checkIfNotInstalled(id, version)) {\n\t\t\t\t\tinstallExtensionInfos.push({ id, version, installOptions: { isBuiltin: false, isMachineScoped } });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (const extension of builtinExtensionIds) {\n\t\t\tconst [id, version] = getIdAndVersion(extension);\n\t\t\tif (checkIfNotInstalled(id, version)) {\n\t\t\t\tinstallExtensionInfos.push({ id, version, installOptions: { isBuiltin: true, isMachineScoped: false } });\n\t\t\t}\n\t\t}\n\n\t\tif (vsixs.length) {\n\t\t\tawait Promise.all(vsixs.map(async vsix => {\n\t\t\t\ttry {\n\t\t\t\t\tconst manifest = await this.installVSIX(vsix, { isBuiltin: false, isMachineScoped }, force, output);\n\t\t\t\t\tif (manifest) {\n\t\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\toutput.error(err.message || err.stack || err);\n\t\t\t\t\tfailed.push(vsix.toString());\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tif (installExtensionInfos.length) {\n\n\t\t\tconst galleryExtensions = await this.getGalleryExtensions(installExtensionInfos);\n\n\t\t\tawait Promise.all(installExtensionInfos.map(async extensionInfo => {\n\t\t\t\tconst gallery = galleryExtensions.get(extensionInfo.id.toLowerCase());\n\t\t\t\tif (gallery) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst manifest = await this.installFromGallery(extensionInfo, gallery, installed, force, output);\n\t\t\t\t\t\tif (manifest) {\n\t\t\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\toutput.error(err.message || err.stack || err);\n\t\t\t\t\t\tfailed.push(extensionInfo.id);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.error(`${notFound(extensionInfo.version ? `${extensionInfo.id}@${extensionInfo.version}` : extensionInfo.id)}\\n${useId}`);\n\t\t\t\t\tfailed.push(extensionInfo.id);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t}\n\n\t\tif (failed.length) {\n\t\t\tthrow new Error(localize('installation failed', \"Failed Installing Extensions: {0}\", failed.join(', ')));\n\t\t}\n\t}\n\n\tprivate async installVSIX(vsix: URI, installOptions: InstallOptions, force: boolean, output: CLIOutput): Promise<IExtensionManifest | null> {\n\n\t\tconst manifest = await this.extensionManagementService.getManifest(vsix);\n\t\tif (!manifest) {\n\t\t\tthrow new Error('Invalid vsix');\n\t\t}\n\n\t\tconst valid = await this.validateVSIX(manifest, force, output);\n\t\tif (valid) {\n\t\t\ttry {\n\t\t\t\tawait this.extensionManagementService.install(vsix, installOptions);\n\t\t\t\toutput.log(localize('successVsixInstall', \"Extension '{0}' was successfully installed.\", getBaseLabel(vsix)));\n\t\t\t\treturn manifest;\n\t\t\t} catch (error) {\n\t\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\t\toutput.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", getBaseLabel(vsix)));\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async getGalleryExtensions(extensions: InstallExtensionInfo[]): Promise<Map<string, IGalleryExtension>> {\n\t\tconst extensionIds = extensions.filter(({ version }) => version === undefined).map(({ id }) => id);\n\t\tconst extensionsWithIdAndVersion = extensions.filter(({ version }) => version !== undefined);\n\n\t\tconst galleryExtensions = new Map<string, IGalleryExtension>();\n\t\tawait Promise.all([\n\t\t\t(async () => {\n\t\t\t\tconst result = await this.extensionGalleryService.getExtensions(extensionIds, CancellationToken.None);\n\t\t\t\tresult.forEach(extension => galleryExtensions.set(extension.identifier.id.toLowerCase(), extension));\n\t\t\t})(),\n\t\t\tPromise.all(extensionsWithIdAndVersion.map(async ({ id, version }) => {\n\t\t\t\tconst extension = await this.extensionGalleryService.getCompatibleExtension({ id }, version);\n\t\t\t\tif (extension) {\n\t\t\t\t\tgalleryExtensions.set(extension.identifier.id.toLowerCase(), extension);\n\t\t\t\t}\n\t\t\t}))\n\t\t]);\n\n\t\treturn galleryExtensions;\n\t}\n\n\tprivate async installFromGallery({ id, version, installOptions }: InstallExtensionInfo, galleryExtension: IGalleryExtension, installed: ILocalExtension[], force: boolean, output: CLIOutput): Promise<IExtensionManifest | null> {\n\t\tconst manifest = await this.extensionGalleryService.getManifest(galleryExtension, CancellationToken.None);\n\t\tif (manifest && !this.validateExtensionKind(manifest, output)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst installedExtension = installed.find(e => areSameExtensions(e.identifier, galleryExtension.identifier));\n\t\tif (installedExtension) {\n\t\t\tif (galleryExtension.version === installedExtension.manifest.version) {\n\t\t\t\toutput.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", version ? `${id}@${version}` : id));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\toutput.log(localize('updateMessage', \"Updating the extension '{0}' to the version {1}\", id, galleryExtension.version));\n\t\t}\n\n\t\ttry {\n\t\t\tif (installOptions.isBuiltin) {\n\t\t\t\toutput.log(localize('installing builtin ', \"Installing builtin extension '{0}' v{1}...\", id, galleryExtension.version));\n\t\t\t} else {\n\t\t\t\toutput.log(localize('installing', \"Installing extension '{0}' v{1}...\", id, galleryExtension.version));\n\t\t\t}\n\n\t\t\tawait this.extensionManagementService.installFromGallery(galleryExtension, installOptions);\n\t\t\toutput.log(localize('successInstall', \"Extension '{0}' v{1} was successfully installed.\", id, galleryExtension.version));\n\t\t\treturn manifest;\n\t\t} catch (error) {\n\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\toutput.log(localize('cancelInstall', \"Cancelled installing extension '{0}'.\", id));\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected validateExtensionKind(_manifest: IExtensionManifest, output: CLIOutput): boolean {\n\t\treturn true;\n\t}\n\n\tprivate async validateVSIX(manifest: IExtensionManifest, force: boolean, output: CLIOutput): Promise<boolean> {\n\t\tconst extensionIdentifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst newer = installedExtensions.find(local => areSameExtensions(extensionIdentifier, local.identifier) && gt(local.manifest.version, manifest.version));\n\n\t\tif (newer && !force) {\n\t\t\toutput.log(localize('forceDowngrade', \"A newer version of extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.\", newer.identifier.id, newer.manifest.version, manifest.version));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.validateExtensionKind(manifest, output);\n\t}\n\n\tpublic async uninstallExtensions(extensions: (string | URI)[], force: boolean, output: CLIOutput = console): Promise<void> {\n\t\tconst getExtensionId = async (extensionDescription: string | URI): Promise<string> => {\n\t\t\tif (extensionDescription instanceof URI) {\n\t\t\t\tconst manifest = await this.extensionManagementService.getManifest(extensionDescription);\n\t\t\t\treturn getId(manifest);\n\t\t\t}\n\t\t\treturn extensionDescription;\n\t\t};\n\n\t\tconst uninstalledExtensions: ILocalExtension[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tconst id = await getExtensionId(extension);\n\t\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\t\tconst extensionsToUninstall = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (!extensionsToUninstall.length) {\n\t\t\t\tthrow new Error(`${this.notInstalled(id)}\\n${useId}`);\n\t\t\t}\n\t\t\tif (extensionsToUninstall.some(e => e.type === ExtensionType.System)) {\n\t\t\t\toutput.log(localize('builtin', \"Extension '{0}' is a Built-in extension and cannot be uninstalled\", id));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!force && extensionsToUninstall.some(e => e.isBuiltin)) {\n\t\t\t\toutput.log(localize('forceUninstall', \"Extension '{0}' is marked as a Built-in extension by user. Please use '--force' option to uninstall it.\", id));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\toutput.log(localize('uninstalling', \"Uninstalling {0}...\", id));\n\t\t\tfor (const extensionToUninstall of extensionsToUninstall) {\n\t\t\t\tawait this.extensionManagementService.uninstall(extensionToUninstall);\n\t\t\t\tuninstalledExtensions.push(extensionToUninstall);\n\t\t\t}\n\n\t\t\tif (this.location) {\n\t\t\t\toutput.log(localize('successUninstallFromLocation', \"Extension '{0}' was successfully uninstalled from {1}!\", id, this.location));\n\t\t\t} else {\n\t\t\t\toutput.log(localize('successUninstall', \"Extension '{0}' was successfully uninstalled!\", id));\n\t\t\t}\n\n\t\t}\n\t}\n\n\tpublic async locateExtension(extensions: string[], output: CLIOutput = console): Promise<void> {\n\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\textensions.forEach(e => {\n\t\t\tinstalled.forEach(i => {\n\t\t\t\tif (i.identifier.id === e) {\n\t\t\t\t\tif (i.location.scheme === Schemas.file) {\n\t\t\t\t\t\toutput.log(i.location.fsPath);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate notInstalled(id: string) {\n\t\treturn this.location ? localize('notInstalleddOnLocation', \"Extension '{0}' is not installed on {1}.\", id, this.location) : localize('notInstalled', \"Extension '{0}' is not installed.\", id);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionManagementService, DidInstallExtensionEvent, DidUninstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE } from 'vs/platform/extensions/common/extensions';\nimport * as pfs from 'vs/base/node/pfs';\n\nexport class ExtensionsManifestCache extends Disposable {\n\n\tprivate extensionsManifestCache = join(this.environmentService.userDataPath, MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE);\n\n\tconstructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\textensionsManagementService: IExtensionManagementService\n\t) {\n\t\tsuper();\n\t\tthis._register(extensionsManagementService.onDidInstallExtension(e => this.onDidInstallExtension(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUnInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtension(e: DidInstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate onDidUnInstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tinvalidate(): void {\n\t\tpfs.rimraf(this.extensionsManifestCache, pfs.RimRafMode.MOVE).then(() => { }, () => { });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { IExpression } from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isNumber, isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\n//#region file service & providers\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An event that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Returns a file system provider for a certain scheme.\n\t */\n\tgetProvider(scheme: string): IFileSystemProvider | undefined;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * List the schemes and capabilies for registered file system providers\n\t */\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities }>\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileStreamOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a move operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a copy operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Find out if a file create operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: Partial<FileDeleteOptions>): Promise<void>;\n\n\t/**\n\t * Find out if a delete operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanDelete(resource: URI, options?: Partial<FileDeleteOptions>): Promise<Error | true>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\n\t/**\n\t * Set to `true` to overwrite a file if it exists. Will\n\t * throw an error otherwise if the file does exist.\n\t */\n\treadonly overwrite: boolean;\n}\n\nexport interface FileUnlockOptions {\n\n\t/**\n\t * Set to `true` to try to remove any write locks the file might\n\t * have. A file that is write locked will throw an error for any\n\t * attempt to write to unless `unlock: true` is provided.\n\t */\n\treadonly unlock: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions extends FileOverwriteOptions, FileUnlockOptions {\n\n\t/**\n\t * Set to `true` to create a file when it does not exist. Will\n\t * throw an error otherwise if the file does not exist.\n\t */\n\treadonly create: boolean;\n}\n\nexport type FileOpenOptions = FileOpenForReadOptions | FileOpenForWriteOptions;\n\nexport function isFileOpenForWriteOptions(options: FileOpenOptions): options is FileOpenForWriteOptions {\n\treturn options.create === true;\n}\n\nexport interface FileOpenForReadOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading only.\n\t */\n\treadonly create: false;\n}\n\nexport interface FileOpenForWriteOptions extends FileUnlockOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading and writing.\n\t */\n\treadonly create: true;\n}\n\nexport interface FileDeleteOptions {\n\n\t/**\n\t * Set to `true` to recursively delete any children of the file. This\n\t * only applies to folders and can lead to an error unless provided\n\t * if the folder is not empty.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * Set to `true` to attempt to move the file to trash\n\t * instead of deleting it permanently from disk. This\n\t * option maybe not be supported on all providers.\n\t */\n\treadonly useTrash: boolean;\n}\n\nexport enum FileType {\n\n\t/**\n\t * File is unknown (neither file, directory nor symbolic link).\n\t */\n\tUnknown = 0,\n\n\t/**\n\t * File is a normal file.\n\t */\n\tFile = 1,\n\n\t/**\n\t * File is a directory.\n\t */\n\tDirectory = 2,\n\n\t/**\n\t * File is a symbolic link.\n\t *\n\t * Note: even when the file is a symbolic link, you can test for\n\t * `FileType.File` and `FileType.Directory` to know the type of\n\t * the target the link points to.\n\t */\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\n\t/**\n\t * The file type.\n\t */\n\treadonly type: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\treadonly mtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\treadonly ctime: number;\n\n\t/**\n\t * The size of the file in bytes.\n\t */\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\n\t/**\n\t * Set to `true` to watch for changes recursively in a folder\n\t * and all of its children.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * A set of paths to exclude from watching.\n\t */\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\n\t/**\n\t * Provider supports unbuffered read/write.\n\t */\n\tFileReadWrite = 1 << 1,\n\n\t/**\n\t * Provider supports open/read/write/close low level file operations.\n\t */\n\tFileOpenReadWriteClose = 1 << 2,\n\n\t/**\n\t * Provider supports stream based reading.\n\t */\n\tFileReadStream = 1 << 4,\n\n\t/**\n\t * Provider supports copy operation.\n\t */\n\tFileFolderCopy = 1 << 3,\n\n\t/**\n\t * Provider is path case sensitive.\n\t */\n\tPathCaseSensitive = 1 << 10,\n\n\t/**\n\t * All files of the provider are readonly.\n\t */\n\tReadonly = 1 << 11,\n\n\t/**\n\t * Provider supports to delete via trash.\n\t */\n\tTrash = 1 << 12,\n\n\t/**\n\t * Provider support to unlock files for writing.\n\t */\n\tFileWriteUnlock = 1 << 13\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@bpasero remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tFileWriteLocked = 'EntryWriteLocked',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked: return FileSystemProviderErrorCode.FileWriteLocked;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked:\n\t\t\treturn FileOperationResult.FILE_WRITE_LOCKED;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\treadonly added: boolean;\n\treadonly scheme: string;\n\treadonly provider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\treadonly provider: IFileSystemProvider;\n\treadonly scheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\treadonly scheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED,\n\tADDED,\n\tDELETED\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\t/**\n\t * @deprecated use the `contains()` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\treadonly changes: readonly IFileChange[];\n\n\tprivate readonly added: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly updated: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly deleted: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\n\tconstructor(changes: readonly IFileChange[], private readonly ignorePathCasing: boolean) {\n\t\tthis.changes = changes;\n\n\t\tfor (const change of changes) {\n\t\t\tswitch (change.type) {\n\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\tif (!this.added) {\n\t\t\t\t\t\tthis.added = TernarySearchTree.forUris<IFileChange>(() => this.ignorePathCasing);\n\t\t\t\t\t}\n\t\t\t\t\tthis.added.set(change.resource, change);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\tif (!this.updated) {\n\t\t\t\t\t\tthis.updated = TernarySearchTree.forUris<IFileChange>(() => this.ignorePathCasing);\n\t\t\t\t\t}\n\t\t\t\t\tthis.updated.set(change.resource, change);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\tif (!this.deleted) {\n\t\t\t\t\t\tthis.deleted = TernarySearchTree.forUris<IFileChange>(() => this.ignorePathCasing);\n\t\t\t\t\t}\n\t\t\t\t\tthis.deleted.set(change.resource, change);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Find out if the file change events match the provided resource.\n\t *\n\t * Note: when passing `FileChangeType.DELETED`, we consider a match\n\t * also when the parent of the resource got deleted.\n\t */\n\tcontains(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: false }, ...types);\n\t}\n\n\t/**\n\t * Find out if the file change events either match the provided\n\t * resource, or contain a child of this resource.\n\t */\n\taffects(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: true }, ...types);\n\t}\n\n\tprivate doContains(resource: URI, options: { includeChildren: boolean }, ...types: FileChangeType[]): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hasTypesFilter = types.length > 0;\n\n\t\t// Added\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.ADDED)) {\n\t\t\tif (this.added?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.added?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Updated\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.UPDATED)) {\n\t\t\tif (this.updated?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.updated?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Deleted\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.DELETED)) {\n\t\t\tif (this.deleted?.findSubstr(resource) /* deleted also considers parent folders */) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.deleted?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn !!this.added;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn !!this.deleted;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn !!this.updated;\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\tconst changes: IFileChange[] = [];\n\n\t\tconst eventsForType = type === FileChangeType.ADDED ? this.added : type === FileChangeType.UPDATED ? this.updated : this.deleted;\n\t\tif (eventsForType) {\n\t\t\tfor (const [, change] of eventsForType) {\n\t\t\t\tchanges.push(change);\n\t\t\t}\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tfilter(filterFn: (change: IFileChange) => boolean): FileChangesEvent {\n\t\treturn new FileChangesEvent(this.changes.filter(change => filterFn(change)), this.ignorePathCasing);\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\treadonly resource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly size?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly ctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends Required<IBaseStat> { }\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\treadonly isFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\treadonly isDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link. Note: even when the\n\t * file is a symbolic link, you can test for `FileType.File`\n\t * and `FileType.Directory` to know the type of the target\n\t * the link points to.\n\t */\n\treadonly isSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\treadonly mtime: number;\n\treadonly ctime: number;\n\treadonly etag: string;\n\treadonly size: number;\n\treadonly children?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\treadonly stat?: IFileStat;\n\treadonly success: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\treadonly stat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\treadonly value: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\treadonly value: VSBufferReadableStream;\n}\n\nexport interface IBaseReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IReadFileStreamOptions extends IBaseReadFileOptions { }\n\nexport interface IReadFileOptions extends IBaseReadFileOptions {\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `readFile` method is not running in parallel with\n\t * any `write` operations in the same process.\n\t *\n\t * Typically you should not need to use this flag but if\n\t * for example you are quickly reading a file right after\n\t * a file event occured and the file changes a lot, there\n\t * is a chance that a read returns an empty or partial file\n\t * because a pending write has not finished yet.\n\t *\n\t * Note: this does not prevent the file from being written\n\t * to from a different process. If you need such atomic\n\t * operations, you better use a real database as storage.\n\t */\n\treadonly atomic?: boolean;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n\n\t/**\n\t * Whether to attempt to unlock a file before writing.\n\t */\n\treadonly unlock?: boolean;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_WRITE_LOCKED,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\n//#endregion\n\n//#region Settings\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\n//#endregion\n\n//#region Utilities\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\nexport async function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn;\n\t}\n\n\treturn new Promise(resolve => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Native only: limits for memory sizes\n */\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class ByteSize {\n\n\tstatic readonly KB = 1024;\n\tstatic readonly MB = ByteSize.KB * ByteSize.KB;\n\tstatic readonly GB = ByteSize.MB * ByteSize.KB;\n\tstatic readonly TB = ByteSize.GB * ByteSize.KB;\n\n\tstatic formatSize(size: number): string {\n\t\tif (!isNumber(size)) {\n\t\t\tsize = 0;\n\t\t}\n\n\t\tif (size < ByteSize.KB) {\n\t\t\treturn localize('sizeB', \"{0}B\", size.toFixed(0));\n\t\t}\n\n\t\tif (size < ByteSize.MB) {\n\t\t\treturn localize('sizeKB', \"{0}KB\", (size / ByteSize.KB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.GB) {\n\t\t\treturn localize('sizeMB', \"{0}MB\", (size / ByteSize.MB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.TB) {\n\t\t\treturn localize('sizeGB', \"{0}GB\", (size / ByteSize.GB).toFixed(2));\n\t\t}\n\n\t\treturn localize('sizeTB', \"{0}TB\", (size / ByteSize.TB).toFixed(2));\n\t}\n}\n\n// Native only: Arch limits\n\nexport interface IArchLimits {\n\treadonly maxFileSize: number;\n\treadonly maxHeapSize: number;\n}\n\nexport const enum Arch {\n\tIA32,\n\tOTHER\n}\n\nexport function getPlatformLimits(arch: Arch): IArchLimits {\n\treturn {\n\t\tmaxFileSize: arch === Arch.IA32 ? 300 * ByteSize.MB : 16 * ByteSize.GB,  // https://github.com/microsoft/vscode/issues/30180\n\t\tmaxHeapSize: arch === Arch.IA32 ? 700 * ByteSize.MB : 2 * 700 * ByteSize.MB, // https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\n\t};\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { localize } from 'vs/nls';\nimport { MIN_MAX_MEMORY_SIZE_MB } from 'vs/platform/files/common/files';\nimport { parseArgs, ErrorReporter, OPTIONS } from 'vs/platform/environment/node/argv';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nfunction parseAndValidate(cmdLineArgs: string[], reportWarnings: boolean): NativeParsedArgs {\n\tconst errorReporter: ErrorReporter = {\n\t\tonUnknownOption: (id) => {\n\t\t\tconsole.warn(localize('unknownOption', \"Warning: '{0}' is not in the list of known options, but still passed to Electron/Chromium.\", id));\n\t\t},\n\t\tonMultipleValues: (id, val) => {\n\t\t\tconsole.warn(localize('multipleValues', \"Option '{0}' is defined more than once. Using value '{1}.'\", id, val));\n\t\t}\n\t};\n\n\tconst args = parseArgs(cmdLineArgs, OPTIONS, reportWarnings ? errorReporter : undefined);\n\tif (args.goto) {\n\t\targs._.forEach(arg => assert(/^(\\w:)?[^:]+(:\\d*){0,2}$/.test(arg), localize('gotoValidation', \"Arguments in `--goto` mode should be in the format of `FILE(:LINE(:CHARACTER))`.\")));\n\t}\n\n\tif (args['max-memory']) {\n\t\tassert(parseInt(args['max-memory']) >= MIN_MAX_MEMORY_SIZE_MB, `The max-memory argument cannot be specified lower than ${MIN_MAX_MEMORY_SIZE_MB} MB.`);\n\t}\n\n\treturn args;\n}\n\nfunction stripAppPath(argv: string[]): string[] | undefined {\n\tconst index = argv.findIndex(a => !/^-/.test(a));\n\n\tif (index > -1) {\n\t\treturn [...argv.slice(0, index), ...argv.slice(index + 1)];\n\t}\n\treturn undefined;\n}\n\n/**\n * Use this to parse raw code process.argv such as: `Electron . --verbose --wait`\n */\nexport function parseMainProcessArgv(processArgv: string[]): NativeParsedArgs {\n\tlet [, ...args] = processArgv;\n\n\t// If dev, remove the first non-option argument: it's the app location\n\tif (process.env['VSCODE_DEV']) {\n\t\targs = stripAppPath(args) || [];\n\t}\n\n\t// If called from CLI, don't report warnings as they are already reported.\n\tconst reportWarnings = !isLaunchedFromCli(process.env);\n\treturn parseAndValidate(args, reportWarnings);\n}\n\n/**\n * Use this to parse raw code CLI process.argv such as: `Electron cli.js . --verbose --wait`\n */\nexport function parseCLIProcessArgv(processArgv: string[]): NativeParsedArgs {\n\tconst [, , ...args] = processArgv; // remove the first non-option argument: it's always the app location\n\n\treturn parseAndValidate(args, true);\n}\n\nexport function addArg(argv: string[], ...args: string[]): string[] {\n\tconst endOfArgsMarkerIndex = argv.indexOf('--');\n\tif (endOfArgsMarkerIndex === -1) {\n\t\targv.push(...args);\n\t} else {\n\t\t// if the we have an argument \"--\" (end of argument marker)\n\t\t// we cannot add arguments at the end. rather, we add\n\t\t// arguments before the \"--\" marker.\n\t\targv.splice(endOfArgsMarkerIndex, 0, ...args);\n\t}\n\n\treturn argv;\n}\n\nexport function isLaunchedFromCli(env: IProcessEnvironment): boolean {\n\treturn env['VSCODE_CLI'] === '1';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'path';\nimport { spawn } from 'child_process';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IProcessEnvironment, isWindows, OS } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { isLaunchedFromCli } from 'vs/platform/environment/node/argvHelper';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { getSystemShell } from 'vs/base/node/shell';\n\n/**\n * We need to get the environment from a user's shell.\n * This should only be done when Code itself is not launched\n * from within a shell.\n */\nexport async function resolveShellEnv(logService: ILogService, args: NativeParsedArgs, env: IProcessEnvironment): Promise<typeof process.env> {\n\n\t// Skip if --force-disable-user-env\n\tif (args['force-disable-user-env']) {\n\t\tlogService.trace('resolveShellEnv(): skipped (--force-disable-user-env)');\n\n\t\treturn {};\n\t}\n\n\t// Skip on windows\n\telse if (isWindows) {\n\t\tlogService.trace('resolveShellEnv(): skipped (Windows)');\n\n\t\treturn {};\n\t}\n\n\t// Skip if running from CLI already\n\telse if (isLaunchedFromCli(env) && !args['force-user-env']) {\n\t\tlogService.trace('resolveShellEnv(): skipped (VSCODE_CLI is set)');\n\n\t\treturn {};\n\t}\n\n\t// Otherwise resolve (macOS, Linux)\n\telse {\n\t\tif (isLaunchedFromCli(env)) {\n\t\t\tlogService.trace('resolveShellEnv(): running (--force-user-env)');\n\t\t} else {\n\t\t\tlogService.trace('resolveShellEnv(): running (macOS/Linux)');\n\t\t}\n\n\t\tif (!unixShellEnvPromise) {\n\t\t\tunixShellEnvPromise = doResolveUnixShellEnv(logService);\n\t\t}\n\n\t\treturn unixShellEnvPromise;\n\t}\n}\n\nlet unixShellEnvPromise: Promise<typeof process.env> | undefined = undefined;\n\nasync function doResolveUnixShellEnv(logService: ILogService): Promise<typeof process.env> {\n\tconst promise = new Promise<typeof process.env>(async (resolve, reject) => {\n\t\tconst runAsNode = process.env['ELECTRON_RUN_AS_NODE'];\n\t\tlogService.trace('getUnixShellEnvironment#runAsNode', runAsNode);\n\n\t\tconst noAttach = process.env['ELECTRON_NO_ATTACH_CONSOLE'];\n\t\tlogService.trace('getUnixShellEnvironment#noAttach', noAttach);\n\n\t\tconst mark = generateUuid().replace(/-/g, '').substr(0, 12);\n\t\tconst regex = new RegExp(mark + '(.*)' + mark);\n\n\t\tconst env = {\n\t\t\t...process.env,\n\t\t\tELECTRON_RUN_AS_NODE: '1',\n\t\t\tELECTRON_NO_ATTACH_CONSOLE: '1'\n\t\t};\n\n\t\tlogService.trace('getUnixShellEnvironment#env', env);\n\t\tconst systemShellUnix = await getSystemShell(OS, env);\n\t\tlogService.trace('getUnixShellEnvironment#shell', systemShellUnix);\n\n\t\t// handle popular non-POSIX shells\n\t\tconst name = path.basename(systemShellUnix);\n\t\tlet command: string, shellArgs: Array<string>;\n\t\tif (/^pwsh(-preview)?$/.test(name)) {\n\t\t\t// Older versions of PowerShell removes double quotes sometimes so we use \"double single quotes\" which is how\n\t\t\t// you escape single quotes inside of a single quoted string.\n\t\t\tcommand = `& '${process.execPath}' -p '''${mark}'' + JSON.stringify(process.env) + ''${mark}'''`;\n\t\t\tshellArgs = ['-Login', '-Command'];\n\t\t} else {\n\t\t\tcommand = `'${process.execPath}' -p '\"${mark}\" + JSON.stringify(process.env) + \"${mark}\"'`;\n\t\t\tshellArgs = ['-ilc'];\n\t\t}\n\n\t\tlogService.trace('getUnixShellEnvironment#spawn', JSON.stringify(shellArgs), command);\n\n\t\tconst child = spawn(systemShellUnix, [...shellArgs, command], {\n\t\t\tdetached: true,\n\t\t\tstdio: ['ignore', 'pipe', 'pipe'],\n\t\t\tenv\n\t\t});\n\n\t\tchild.on('error', err => {\n\t\t\tlogService.error('getUnixShellEnvironment#errorChildProcess', toErrorMessage(err));\n\t\t\tresolve({});\n\t\t});\n\n\t\tconst buffers: Buffer[] = [];\n\t\tchild.stdout.on('data', b => buffers.push(b));\n\n\t\tconst stderr: Buffer[] = [];\n\t\tchild.stderr.on('data', b => stderr.push(b));\n\n\t\tchild.on('close', (code, signal) => {\n\t\t\tconst raw = Buffer.concat(buffers).toString('utf8');\n\t\t\tlogService.trace('getUnixShellEnvironment#raw', raw);\n\n\t\t\tconst stderrStr = Buffer.concat(stderr).toString('utf8');\n\t\t\tif (stderrStr.trim()) {\n\t\t\t\tlogService.trace('getUnixShellEnvironment#stderr', stderrStr);\n\t\t\t}\n\n\t\t\tif (code || signal) {\n\t\t\t\treturn reject(new Error(`Failed to get environment (code ${code}, signal ${signal})`));\n\t\t\t}\n\n\t\t\tconst match = regex.exec(raw);\n\t\t\tconst rawStripped = match ? match[1] : '{}';\n\n\t\t\ttry {\n\t\t\t\tconst env = JSON.parse(rawStripped);\n\n\t\t\t\tif (runAsNode) {\n\t\t\t\t\tenv['ELECTRON_RUN_AS_NODE'] = runAsNode;\n\t\t\t\t} else {\n\t\t\t\t\tdelete env['ELECTRON_RUN_AS_NODE'];\n\t\t\t\t}\n\n\t\t\t\tif (noAttach) {\n\t\t\t\t\tenv['ELECTRON_NO_ATTACH_CONSOLE'] = noAttach;\n\t\t\t\t} else {\n\t\t\t\t\tdelete env['ELECTRON_NO_ATTACH_CONSOLE'];\n\t\t\t\t}\n\n\t\t\t\t// https://github.com/microsoft/vscode/issues/22593#issuecomment-336050758\n\t\t\t\tdelete env['XDG_RUNTIME_DIR'];\n\n\t\t\t\tlogService.trace('getUnixShellEnvironment#result', env);\n\t\t\t\tresolve(env);\n\t\t\t} catch (err) {\n\t\t\t\tlogService.error('getUnixShellEnvironment#errorCaught', toErrorMessage(err));\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n\n\ttry {\n\t\treturn await promise;\n\t} catch (error) {\n\t\tlogService.error('getUnixShellEnvironment#error', toErrorMessage(error));\n\n\t\treturn {}; // ignore any errors\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, isParent, IFileChange } from 'vs/platform/files/common/files';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error' | 'info' | 'debug';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function normalizeFileChanges(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst normalizer = new EventNormalizer();\n\tfor (const event of changes) {\n\t\tnormalizer.processEvent(event);\n\t}\n\n\treturn normalizer.normalize();\n}\n\nclass EventNormalizer {\n\tprivate normalized: IDiskFileChange[] = [];\n\tprivate mapPathToChange: Map<string, IDiskFileChange> = new Map();\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(event.path);\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// ignore CREATE followed by DELETE in one go\n\t\t\tif (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(event.path);\n\t\t\t\tthis.normalized.splice(this.normalized.indexOf(existingEvent), 1);\n\t\t\t}\n\n\t\t\t// flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise store new\n\t\telse {\n\t\t\tthis.normalized.push(event);\n\t\t\tthis.mapPathToChange.set(event.path, event);\n\t\t}\n\t}\n\n\tnormalize(): IDiskFileChange[] {\n\t\tconst addedChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn this.normalized.filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddedChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(d => isParent(e.path, d, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addedChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, normalizeFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { SymlinkSupport } from 'vs/base/node/pfs';\nimport { realpath } from 'vs/base/node/extpath';\nimport { watchFolder, watchFile, CHANGE_BUFFER_DELAY } from 'vs/base/node/watcher';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { join, basename } from 'vs/base/common/path';\n\nexport class FileWatcher extends Disposable {\n\tprivate isDisposed: boolean | undefined;\n\n\tprivate fileChangesDelayer: ThrottledDelayer<void> = this._register(new ThrottledDelayer<void>(CHANGE_BUFFER_DELAY * 2 /* sync on delay from underlying library */));\n\tprivate fileChangesBuffer: IDiskFileChange[] = [];\n\n\tconstructor(\n\t\tprivate path: string,\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis.startWatching();\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t}\n\n\tprivate async startWatching(): Promise<void> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(this.path);\n\n\t\t\tif (this.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet pathToWatch = this.path;\n\t\t\tif (symbolicLink) {\n\t\t\t\ttry {\n\t\t\t\t\tpathToWatch = await realpath(pathToWatch);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.onError(error);\n\n\t\t\t\t\tif (symbolicLink.dangling) {\n\t\t\t\t\t\treturn; // give up if symbolic link is dangling\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Watch Folder\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\tthis._register(watchFolder(pathToWatch, (eventType, path) => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : eventType === 'added' ? FileChangeType.ADDED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: join(this.path, basename(path)) // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\n\t\t\t// Watch File\n\t\t\telse {\n\t\t\t\tthis._register(watchFile(pathToWatch, eventType => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: this.path // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onFileChange(event: IDiskFileChange): void {\n\n\t\t// Add to buffer\n\t\tthis.fileChangesBuffer.push(event);\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.onVerbose(`${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t}\n\n\t\t// Handle emit through delayer to accommodate for bulk changes and thus reduce spam\n\t\tthis.fileChangesDelayer.trigger(async () => {\n\t\t\tconst fileChanges = this.fileChangesBuffer;\n\t\t\tthis.fileChangesBuffer = [];\n\n\t\t\t// Event normalization\n\t\t\tconst normalizedFileChanges = normalizeFileChanges(fileChanges);\n\n\t\t\t// Logging\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tnormalizedFileChanges.forEach(event => {\n\t\t\t\t\tthis.onVerbose(`>> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Fire\n\t\t\tif (normalizedFileChanges.length > 0) {\n\t\t\t\tthis.onDidFilesChange(normalizedFileChanges);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate onError(error: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (node.js)] ${error}` });\n\t\t}\n\t}\n\n\tprivate onVerbose(message: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'trace', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalState } from 'vs/base/common/errors';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ServiceIdentifier, IInstantiationService, ServicesAccessor, _util, optional } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IdleValue } from 'vs/base/common/async';\n\n// TRACING\nconst _enableTracing = false;\n\nclass CyclicDependencyError extends Error {\n\tconstructor(graph: Graph<any>) {\n\t\tsuper('cyclic dependency between services');\n\t\tthis.message = graph.findCycleSlow() ?? `UNABLE to detect cycle, dumping graph: \\n${graph.toString()}`;\n\t}\n}\n\nexport class InstantiationService implements IInstantiationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _services: ServiceCollection;\n\tprivate readonly _strict: boolean;\n\tprivate readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>, isOptional?: typeof optional) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result && isOptional !== optional) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn(accessor, ...args);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>new ctor(...[...args, ...serviceArgs]);\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._safeCreateAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate readonly _activeInstantiations = new Set<ServiceIdentifier<any>>();\n\n\n\tprivate _safeCreateAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\tif (this._activeInstantiations.has(id)) {\n\t\t\tthrow new Error(`illegal state - RECURSIVELY instantiating service '${id}'`);\n\t\t}\n\t\tthis._activeInstantiations.add(id);\n\t\ttry {\n\t\t\treturn this._createAndCacheServiceInstance(id, desc, _trace);\n\t\t} finally {\n\t\t\tthis._activeInstantiations.delete(id);\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace; };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tlet cycleCount = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// a weak but working heuristic for cycle checks\n\t\t\tif (cycleCount++ > 1000) {\n\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tfor (let dependency of _util.getServiceDependencies(item.desc.ctor)) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tconst roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { data } of roots) {\n\t\t\t\t// Repeat the check for this still being a service sync descriptor. That's because\n\t\t\t\t// instantiating a dependency might have side-effect and recursively trigger instantiation\n\t\t\t\t// so that some dependencies are now fullfilled already.\n\t\t\t\tconst instanceOrDesc = this._getServiceInstanceOrDescriptor(data.id);\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\t}\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation) {\n\t\t\t// eager instantiation\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue<any>(() => this._createInstance<T>(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(target: any, key: PropertyKey): any {\n\t\t\t\t\tif (key in target) {\n\t\t\t\t\t\treturn target[key];\n\t\t\t\t\t}\n\t\t\t\t\tlet obj = idle.value;\n\t\t\t\t\tlet prop = obj[key];\n\t\t\t\t\tif (typeof prop !== 'function') {\n\t\t\t\t\t\treturn prop;\n\t\t\t\t\t}\n\t\t\t\t\tprop = prop.bind(obj);\n\t\t\t\t\ttarget[key] = prop;\n\t\t\t\t\treturn prop;\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.value[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static readonly _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\toverride stop() { }\n\t\toverride branch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport const ILabelService = createDecorator<ILabelService>('labelService');\n\nexport interface ILabelService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Gets the human readable label for a uri.\n\t * If relative is passed returns a label relative to the workspace root that the uri belongs to.\n\t * If noPrefix is passed does not tildify the label and also does not prepand the root name for relative labels in a multi root scenario.\n\t */\n\tgetUriLabel(resource: URI, options?: { relative?: boolean, noPrefix?: boolean, endWithSeparator?: boolean }): string;\n\tgetUriBasenameLabel(resource: URI): string;\n\tgetWorkspaceLabel(workspace: (IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI | IWorkspace), options?: { verbose: boolean }): string;\n\tgetHostLabel(scheme: string, authority?: string): string;\n\tgetSeparator(scheme: string, authority?: string): '/' | '\\\\';\n\n\tregisterFormatter(formatter: ResourceLabelFormatter): IDisposable;\n\tonDidChangeFormatters: Event<IFormatterChangeEvent>;\n}\n\nexport interface IFormatterChangeEvent {\n\tscheme: string;\n}\n\nexport interface ResourceLabelFormatter {\n\tscheme: string;\n\tauthority?: string;\n\tpriority?: boolean;\n\tformatting: ResourceLabelFormatting;\n}\n\nexport interface ResourceLabelFormatting {\n\tlabel: string; // myLabel:/${path}\n\tseparator: '/' | '\\\\' | '';\n\ttildify?: boolean;\n\tnormalizeDriveLetter?: boolean;\n\tworkspaceSuffix?: string;\n\tauthorityPrefix?: string;\n\tstripPathStartingSeparator?: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport interface ILocalization {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport const ILocalizationsService = createDecorator<ILocalizationsService>('localizationsService');\nexport interface ILocalizationsService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidLanguagesChange: Event<void>;\n\tgetLanguageIds(): Promise<string[]>;\n}\n\nexport function isValidLocalization(localization: ILocalization): boolean {\n\tif (typeof localization.languageId !== 'string') {\n\t\treturn false;\n\t}\n\tif (!Array.isArray(localization.translations) || localization.translations.length === 0) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (localization.languageName && typeof localization.languageName !== 'string') {\n\t\treturn false;\n\t}\n\tif (localization.localizedLanguageName && typeof localization.localizedLanguageName !== 'string') {\n\t\treturn false;\n\t}\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { URI } from 'vs/base/common/uri';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\nexport const ILoggerService = createServiceDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport interface ILogService extends ILogger {\n\treadonly _serviceBrand: undefined;\n}\n\nexport interface ILoggerOptions {\n\n\t/**\n\t * Name of the logger.\n\t */\n\tname?: string;\n\n\t/**\n\t * Do not create rotating files if max size exceeds.\n\t */\n\tdonotRotate?: boolean;\n\n\t/**\n\t * Do not use formatters.\n\t */\n\tdonotUseFormatters?: boolean;\n\n\t/**\n\t * If set, logger logs the message always.\n\t */\n\talways?: boolean;\n}\n\nexport interface ILoggerService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Creates a logger\n\t */\n\tcreateLogger(file: URI, options?: ILoggerOptions): ILogger;\n}\n\nexport abstract class AbstractLogger extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport abstract class AbstractMessageLogger extends AbstractLogger implements ILogger {\n\n\tprotected abstract log(level: LogLevel, message: string): void;\n\n\tconstructor(private readonly logAlways?: boolean) {\n\t\tsuper();\n\t}\n\n\tprivate checkLogLevel(level: LogLevel): boolean {\n\t\treturn this.logAlways || this.getLevel() <= level;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tthis.log(LogLevel.Trace, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tthis.log(LogLevel.Debug, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tthis.log(LogLevel.Info, this.format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tthis.log(LogLevel.Warning, this.format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis.log(LogLevel.Error, this.format(array));\n\t\t\t} else {\n\t\t\t\tthis.log(LogLevel.Error, this.format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Critical)) {\n\t\t\tthis.log(LogLevel.Critical, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tflush(): void { }\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\n\nexport class ConsoleMainLogger extends AbstractLogger implements ILogger {\n\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class AdapterLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(private readonly adapter: { log: (logLevel: LogLevel, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.adapter.log(LogLevel.Trace, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.adapter.log(LogLevel.Debug, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.adapter.log(LogLevel.Info, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.adapter.log(LogLevel.Warning, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.adapter.log(LogLevel.Error, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.adapter.log(LogLevel.Critical, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogger implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogger>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\toverride setLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class LogService extends Disposable implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private logger: ILogger) {\n\t\tsuper();\n\t\tthis._register(logger);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logger.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logger.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logger.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logger.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logger.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logger.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logger.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logger.flush();\n\t}\n}\n\nexport abstract class AbstractLoggerService extends Disposable implements ILoggerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\tprivate readonly logLevelChangeableLoggers: ILogger[] = [];\n\n\tconstructor(\n\t\tprivate logLevel: LogLevel,\n\t\tonDidChangeLogLevel: Event<LogLevel>,\n\t) {\n\t\tsuper();\n\t\tthis._register(onDidChangeLogLevel(logLevel => {\n\t\t\tthis.logLevel = logLevel;\n\t\t\tthis.logLevelChangeableLoggers.forEach(logger => logger.setLevel(logLevel));\n\t\t}));\n\t}\n\n\tcreateLogger(resource: URI, options?: ILoggerOptions): ILogger {\n\t\tlet logger = this.loggers.get(resource.toString());\n\t\tif (!logger) {\n\t\t\tlogger = this.doCreateLogger(resource, options?.always ? LogLevel.Trace : this.logLevel, options);\n\t\t\tthis.loggers.set(resource.toString(), logger);\n\t\t\tif (!options?.always) {\n\t\t\t\tthis.logLevelChangeableLoggers.push(logger);\n\t\t\t}\n\t\t}\n\t\treturn logger;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.logLevelChangeableLoggers.splice(0, this.logLevelChangeableLoggers.length);\n\t\tthis.loggers.forEach(logger => logger.dispose());\n\t\tthis.loggers.clear();\n\t\tsuper.dispose();\n\t}\n\n\tprotected abstract doCreateLogger(resource: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger;\n}\n\nexport class NullLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.logLevel === 'string') {\n\t\tconst logLevel = parseLogLevel(environmentService.logLevel.toLowerCase());\n\t\tif (logLevel !== undefined) {\n\t\t\treturn logLevel;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n\nexport function parseLogLevel(logLevel: string): LogLevel | undefined {\n\tswitch (logLevel) {\n\t\tcase 'trace':\n\t\t\treturn LogLevel.Trace;\n\t\tcase 'debug':\n\t\t\treturn LogLevel.Debug;\n\t\tcase 'info':\n\t\t\treturn LogLevel.Info;\n\t\tcase 'warn':\n\t\t\treturn LogLevel.Warning;\n\t\tcase 'error':\n\t\t\treturn LogLevel.Error;\n\t\tcase 'critical':\n\t\t\treturn LogLevel.Critical;\n\t\tcase 'off':\n\t\t\treturn LogLevel.Off;\n\t}\n\treturn undefined;\n}\n\nexport function LogLevelToString(logLevel: LogLevel): string {\n\tswitch (logLevel) {\n\t\tcase LogLevel.Trace: return 'trace';\n\t\tcase LogLevel.Debug: return 'debug';\n\t\tcase LogLevel.Info: return 'info';\n\t\tcase LogLevel.Warning: return 'warn';\n\t\tcase LogLevel.Error: return 'error';\n\t\tcase LogLevel.Critical: return 'critical';\n\t\tcase LogLevel.Off: return 'off';\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { promises } from 'fs';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IFileService, IFileStatWithMetadata } from 'vs/platform/files/common/files';\nimport { IExtensionGalleryService, IGalleryExtension, InstallOperation } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { URI } from 'vs/base/common/uri';\nimport { joinPath } from 'vs/base/common/resources';\nimport { ExtensionIdentifierWithVersion, groupByExtension } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Promises } from 'vs/base/common/async';\nimport { getErrorMessage } from 'vs/base/common/errors';\n\nconst ExtensionIdVersionRegex = /^([^.]+\\..+)-(\\d+\\.\\d+\\.\\d+)$/;\n\nexport class ExtensionsDownloader extends Disposable {\n\n\tprivate readonly extensionsDownloadDir: URI;\n\tprivate readonly cache: number;\n\tprivate readonly cleanUpPromise: Promise<void>;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.extensionsDownloadDir = URI.file(environmentService.extensionsDownloadPath);\n\t\tthis.cache = 20; // Cache 20 downloads\n\t\tthis.cleanUpPromise = this.cleanUp();\n\t}\n\n\tasync downloadExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<URI> {\n\t\tawait this.cleanUpPromise;\n\t\tconst vsixName = this.getName(extension);\n\t\tconst location = joinPath(this.extensionsDownloadDir, vsixName);\n\n\t\t// Download only if vsix does not exist\n\t\tif (!await this.fileService.exists(location)) {\n\t\t\t// Download to temporary location first only if vsix does not exist\n\t\t\tconst tempLocation = joinPath(this.extensionsDownloadDir, `.${generateUuid()}`);\n\t\t\tif (!await this.fileService.exists(tempLocation)) {\n\t\t\t\tawait this.extensionGalleryService.download(extension, tempLocation, operation);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Rename temp location to original\n\t\t\t\tawait this.rename(tempLocation, location, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */);\n\t\t\t} catch (error) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.fileService.del(tempLocation);\n\t\t\t\t} catch (e) { /* ignore */ }\n\t\t\t\tif (error.code === 'ENOTEMPTY') {\n\t\t\t\t\tthis.logService.info(`Rename failed because vsix was downloaded by another source. So ignoring renaming.`, extension.identifier.id);\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info(`Rename failed because of ${getErrorMessage(error)}. Deleted the vsix from downloaded location`, tempLocation.path);\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\treturn location;\n\t}\n\n\tasync delete(location: URI): Promise<void> {\n\t\t// noop as caching is enabled always\n\t}\n\n\tprivate async rename(from: URI, to: URI, retryUntil: number): Promise<void> {\n\t\ttry {\n\t\t\tawait promises.rename(from.fsPath, to.fsPath);\n\t\t} catch (error) {\n\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\tthis.logService.info(`Failed renaming ${from} to ${to} with 'EPERM' error. Trying again...`);\n\t\t\t\treturn this.rename(from, to, retryUntil);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async cleanUp(): Promise<void> {\n\t\ttry {\n\t\t\tif (!(await this.fileService.exists(this.extensionsDownloadDir))) {\n\t\t\t\tthis.logService.trace('Extension VSIX downloads cache dir does not exist');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst folderStat = await this.fileService.resolve(this.extensionsDownloadDir, { resolveMetadata: true });\n\t\t\tif (folderStat.children) {\n\t\t\t\tconst toDelete: URI[] = [];\n\t\t\t\tconst all: [ExtensionIdentifierWithVersion, IFileStatWithMetadata][] = [];\n\t\t\t\tfor (const stat of folderStat.children) {\n\t\t\t\t\tconst extension = this.parse(stat.name);\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tall.push([extension, stat]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst byExtension = groupByExtension(all, ([extension]) => extension);\n\t\t\t\tconst distinct: IFileStatWithMetadata[] = [];\n\t\t\t\tfor (const p of byExtension) {\n\t\t\t\t\tp.sort((a, b) => semver.rcompare(a[0].version, b[0].version));\n\t\t\t\t\ttoDelete.push(...p.slice(1).map(e => e[1].resource)); // Delete outdated extensions\n\t\t\t\t\tdistinct.push(p[0][1]);\n\t\t\t\t}\n\t\t\t\tdistinct.sort((a, b) => a.mtime - b.mtime); // sort by modified time\n\t\t\t\ttoDelete.push(...distinct.slice(0, Math.max(0, distinct.length - this.cache)).map(s => s.resource)); // Retain minimum cacheSize and delete the rest\n\t\t\t\tawait Promises.settled(toDelete.map(resource => {\n\t\t\t\t\tthis.logService.trace('Deleting vsix from cache', resource.path);\n\t\t\t\t\treturn this.fileService.del(resource);\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getName(extension: IGalleryExtension): string {\n\t\treturn this.cache ? new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key().toLowerCase() : generateUuid();\n\t}\n\n\tprivate parse(name: string): ExtensionIdentifierWithVersion | null {\n\t\tconst matches = ExtensionIdVersionRegex.exec(name);\n\t\treturn matches && matches[1] && matches[2] ? new ExtensionIdentifierWithVersion({ id: matches[1] }, matches[2]) : null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { fork, ChildProcess } from 'child_process';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { join } from 'vs/base/common/path';\nimport { Limiter } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { rimraf } from 'vs/base/node/pfs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport class ExtensionsLifecycle extends Disposable {\n\n\tprivate processesLimiter: Limiter<void> = new Limiter(5); // Run max 5 processes in parallel\n\n\tconstructor(\n\t\t@IEnvironmentService private environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync postUninstall(extension: ILocalExtension): Promise<void> {\n\t\tconst script = this.parseScript(extension, 'uninstall');\n\t\tif (script) {\n\t\t\tthis.logService.info(extension.identifier.id, extension.manifest.version, `Running post uninstall script`);\n\t\t\tawait this.processesLimiter.queue(() =>\n\t\t\t\tthis.runLifecycleHook(script.script, 'uninstall', script.args, true, extension)\n\t\t\t\t\t.then(() => this.logService.info(extension.identifier.id, extension.manifest.version, `Finished running post uninstall script`), err => this.logService.error(extension.identifier.id, extension.manifest.version, `Failed to run post uninstall script: ${err}`)));\n\t\t}\n\t\treturn rimraf(this.getExtensionStoragePath(extension)).then(undefined, e => this.logService.error('Error while removing extension storage path', e));\n\t}\n\n\tprivate parseScript(extension: ILocalExtension, type: string): { script: string, args: string[] } | null {\n\t\tconst scriptKey = `vscode:${type}`;\n\t\tif (extension.location.scheme === Schemas.file && extension.manifest && extension.manifest['scripts'] && typeof extension.manifest['scripts'][scriptKey] === 'string') {\n\t\t\tconst script = (<string>extension.manifest['scripts'][scriptKey]).split(' ');\n\t\t\tif (script.length < 2 || script[0] !== 'node' || !script[1]) {\n\t\t\t\tthis.logService.warn(extension.identifier.id, extension.manifest.version, `${scriptKey} should be a node script`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { script: join(extension.location.fsPath, script[1]), args: script.slice(2) || [] };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate runLifecycleHook(lifecycleHook: string, lifecycleType: string, args: string[], timeout: boolean, extension: ILocalExtension): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\n\t\t\tconst extensionLifecycleProcess = this.start(lifecycleHook, lifecycleType, args, extension);\n\t\t\tlet timeoutHandler: any;\n\n\t\t\tconst onexit = (error?: string) => {\n\t\t\t\tif (timeoutHandler) {\n\t\t\t\t\tclearTimeout(timeoutHandler);\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// on error\n\t\t\textensionLifecycleProcess.on('error', (err) => {\n\t\t\t\tonexit(toErrorMessage(err) || 'Unknown');\n\t\t\t});\n\n\t\t\t// on exit\n\t\t\textensionLifecycleProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tonexit(code ? `post-${lifecycleType} process exited with code ${code}` : undefined);\n\t\t\t});\n\n\t\t\tif (timeout) {\n\t\t\t\t// timeout: kill process after waiting for 5s\n\t\t\t\ttimeoutHandler = setTimeout(() => {\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t\textensionLifecycleProcess.kill();\n\t\t\t\t\te('timed out');\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate start(uninstallHook: string, lifecycleType: string, args: string[], extension: ILocalExtension): ChildProcess {\n\t\tconst opts = {\n\t\t\tsilent: true,\n\t\t\texecArgv: undefined\n\t\t};\n\t\tconst extensionUninstallProcess = fork(uninstallHook, [`--type=extension-post-${lifecycleType}`, ...args], opts);\n\n\t\t// Catch all output coming from the process\n\t\ttype Output = { data: string, format: string[] };\n\t\textensionUninstallProcess.stdout!.setEncoding('utf8');\n\t\textensionUninstallProcess.stderr!.setEncoding('utf8');\n\n\t\tconst onStdout = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stdout!, 'data');\n\t\tconst onStderr = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stderr!, 'data');\n\n\t\t// Log output\n\t\tonStdout(data => this.logService.info(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\t\tonStderr(data => this.logService.error(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\n\t\tconst onOutput = Event.any(\n\t\t\tEvent.map(onStdout, o => ({ data: `%c${o}`, format: [''] })),\n\t\t\tEvent.map(onStderr, o => ({ data: `%c${o}`, format: ['color: red'] }))\n\t\t);\n\t\t// Debounce all output, so we can render it in the Chrome console as a group\n\t\tconst onDebouncedOutput = Event.debounce<Output>(onOutput, (r, o) => {\n\t\t\treturn r\n\t\t\t\t? { data: r.data + o.data, format: [...r.format, ...o.format] }\n\t\t\t\t: { data: o.data, format: o.format };\n\t\t}, 100);\n\n\t\t// Print out output\n\t\tonDebouncedOutput(data => {\n\t\t\tconsole.group(extension.identifier.id);\n\t\t\tconsole.log(data.data, ...data.format);\n\t\t\tconsole.groupEnd();\n\t\t});\n\n\t\treturn extensionUninstallProcess;\n\t}\n\n\tprivate getExtensionStoragePath(extension: ILocalExtension): string {\n\t\treturn join(this.environmentService.globalStorageHome.fsPath, extension.identifier.id.toLowerCase());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { DidInstallExtensionEvent, DidUninstallExtensionEvent, IExtensionManagementService, ILocalExtension, InstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { ExtensionType, IExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { FileChangeType, FileSystemProviderCapabilities, IFileChange, IFileService } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtUri } from 'vs/base/common/resources';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class ExtensionsWatcher extends Disposable {\n\n\tprivate readonly _onDidChangeExtensionsByAnotherSource = this._register(new Emitter<{ added: ILocalExtension[], removed: IExtensionIdentifier[] }>());\n\treadonly onDidChangeExtensionsByAnotherSource = this._onDidChangeExtensionsByAnotherSource.event;\n\n\tprivate startTimestamp = 0;\n\tprivate installingExtensions: IExtensionIdentifier[] = [];\n\tprivate installedExtensions: IExtensionIdentifier[] | undefined;\n\n\tconstructor(\n\t\tprivate readonly extensionsManagementService: IExtensionManagementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.extensionsManagementService.getInstalled(ExtensionType.User).then(extensions => {\n\t\t\tthis.installedExtensions = extensions.map(e => e.identifier);\n\t\t\tthis.startTimestamp = Date.now();\n\t\t});\n\t\tthis._register(extensionsManagementService.onInstallExtension(e => this.onInstallExtension(e)));\n\t\tthis._register(extensionsManagementService.onDidInstallExtension(e => this.onDidInstallExtension(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUninstallExtension(e)));\n\n\t\tconst extensionsResource = URI.file(environmentService.extensionsPath);\n\t\tconst extUri = new ExtUri(resource => !fileService.hasCapability(resource, FileSystemProviderCapabilities.PathCaseSensitive));\n\t\tthis._register(fileService.watch(extensionsResource));\n\t\tthis._register(Event.filter(fileService.onDidFilesChange, e => e.changes.some(change => this.doesChangeAffects(change, extensionsResource, extUri)))(() => this.onDidChange()));\n\t}\n\n\tprivate doesChangeAffects(change: IFileChange, extensionsResource: URI, extUri: ExtUri): boolean {\n\t\t// Is not immediate child of extensions resource\n\t\tif (!extUri.isEqual(extUri.dirname(change.resource), extensionsResource)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// .obsolete file changed\n\t\tif (extUri.isEqual(change.resource, extUri.joinPath(extensionsResource, '.obsolete'))) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Only interested in added/deleted changes\n\t\tif (change.type !== FileChangeType.ADDED && change.type !== FileChangeType.DELETED) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Ingore changes to files starting with `.`\n\t\tif (extUri.basename(change.resource).startsWith('.')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate onInstallExtension(e: InstallExtensionEvent): void {\n\t\tthis.addInstallingExtension(e.identifier);\n\t}\n\n\tprivate onDidInstallExtension(e: DidInstallExtensionEvent): void {\n\t\tthis.removeInstallingExtension(e.identifier);\n\t\tif (!e.error) {\n\t\t\tthis.addInstalledExtension(e.identifier);\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.removeInstalledExtension(e.identifier);\n\t\t}\n\t}\n\n\tprivate addInstallingExtension(extension: IExtensionIdentifier) {\n\t\tthis.removeInstallingExtension(extension);\n\t\tthis.installingExtensions.push(extension);\n\t}\n\n\tprivate removeInstallingExtension(identifier: IExtensionIdentifier) {\n\t\tthis.installingExtensions = this.installingExtensions.filter(e => !areSameExtensions(e, identifier));\n\t}\n\n\tprivate addInstalledExtension(extension: IExtensionIdentifier): void {\n\t\tif (this.installedExtensions) {\n\t\t\tthis.removeInstalledExtension(extension);\n\t\t\tthis.installedExtensions.push(extension);\n\t\t}\n\t}\n\n\tprivate removeInstalledExtension(identifier: IExtensionIdentifier): void {\n\t\tif (this.installedExtensions) {\n\t\t\tthis.installedExtensions = this.installedExtensions.filter(e => !areSameExtensions(e, identifier));\n\t\t}\n\t}\n\n\tprivate async onDidChange(): Promise<void> {\n\t\tif (this.installedExtensions) {\n\t\t\tconst extensions = await this.extensionsManagementService.getInstalled(ExtensionType.User);\n\t\t\tconst added = extensions.filter(e => {\n\t\t\t\tif ([...this.installingExtensions, ...this.installedExtensions!].some(identifier => areSameExtensions(identifier, e.identifier))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (e.installedTimestamp && e.installedTimestamp > this.startTimestamp) {\n\t\t\t\t\tthis.logService.info('Detected extension installed from another source', e.identifier.id);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info('Ignored extension installed by another source because of invalid timestamp', e.identifier.id);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst removed = this.installedExtensions.filter(identifier => {\n\t\t\t\t// Extension being installed\n\t\t\t\tif (this.installingExtensions.some(installingExtension => areSameExtensions(installingExtension, identifier))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (extensions.every(e => !areSameExtensions(e.identifier, identifier))) {\n\t\t\t\t\tthis.logService.info('Detected extension removed from another source', identifier.id);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\tthis.installedExtensions = extensions.map(e => e.identifier);\n\t\t\tif (added.length || removed.length) {\n\t\t\t\tthis._onDidChangeExtensionsByAnotherSource.fire({ added, removed });\n\t\t\t}\n\t\t}\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { writeFile } from 'vs/base/node/pfs';\nimport { promises } from 'fs';\nimport { createHash } from 'crypto';\nimport { IExtensionManagementService, ILocalExtension, IExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Queue } from 'vs/base/common/async';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isValidLocalization, ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { distinct, equals } from 'vs/base/common/arrays';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\n\ninterface ILanguagePack {\n\thash: string;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nexport class LocalizationsService extends Disposable implements ILocalizationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly cache: LanguagePacksCache;\n\n\tprivate readonly _onDidLanguagesChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidLanguagesChange: Event<void> = this._onDidLanguagesChange.event;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\n\t\tthis._register(extensionManagementService.onDidInstallExtension(({ local }) => this.onDidInstallExtension(local)));\n\t\tthis._register(extensionManagementService.onDidUninstallExtension(({ identifier }) => this.onDidUninstallExtension(identifier)));\n\t}\n\n\tgetLanguageIds(): Promise<string[]> {\n\t\treturn this.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\t// Contributed languages are those installed via extension packs, so does not include English\n\t\t\t\tconst languages = ['en', ...Object.keys(languagePacks)];\n\t\t\t\treturn distinct(languages);\n\t\t\t});\n\t}\n\n\tprivate onDidInstallExtension(extension: ILocalExtension | undefined): void {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.debug('Adding language packs from the extension', extension.identifier.id);\n\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(identifier: IExtensionIdentifier): void {\n\t\tthis.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, identifier)))) {\n\t\t\t\t\tthis.logService.debug('Removing language packs from the extension', identifier.id);\n\t\t\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync update(): Promise<boolean> {\n\t\tconst [current, installed] = await Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()]);\n\t\tconst updated = await this.cache.update(installed);\n\t\treturn !equals(Object.keys(current), Object.keys(updated));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean | undefined;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = { hash: '', extensions: [], translations: {} };\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tlet extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version);\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn promises.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService, LogLevel, AbstractLogger, DEFAULT_LOG_LEVEL, ILogger } from 'vs/platform/log/common/log';\n\ninterface ILog {\n\tlevel: LogLevel;\n\targs: any[];\n}\n\nfunction getLogFunction(logger: ILogger, level: LogLevel): Function {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: return logger.trace;\n\t\tcase LogLevel.Debug: return logger.debug;\n\t\tcase LogLevel.Info: return logger.info;\n\t\tcase LogLevel.Warning: return logger.warn;\n\t\tcase LogLevel.Error: return logger.error;\n\t\tcase LogLevel.Critical: return logger.critical;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class BufferLogService extends AbstractLogger implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate buffer: ILog[] = [];\n\tprivate _logger: ILogger | undefined = undefined;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tset logger(logger: ILogger) {\n\t\tthis._logger = logger;\n\n\t\tfor (const { level, args } of this.buffer) {\n\t\t\tconst fn = getLogFunction(logger, level);\n\t\t\tfn.apply(logger, args);\n\t\t}\n\n\t\tthis.buffer = [];\n\t}\n\n\tprivate _log(level: LogLevel, ...args: any[]): void {\n\t\tif (this._logger) {\n\t\t\tconst fn = getLogFunction(this._logger, level);\n\t\t\tfn.apply(this._logger, args);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, args });\n\t\t}\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Trace, message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Debug, message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Info, message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Warning, message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis._log(LogLevel.Error, message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis._log(LogLevel.Critical, message, ...args);\n\t}\n\n\toverride dispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.dispose();\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService, LogLevel, AbstractLogger, ILoggerService, ILogger, AbstractLoggerService } from 'vs/platform/log/common/log';\nimport { URI } from 'vs/base/common/uri';\nimport { ByteSize, FileOperationError, FileOperationResult, IFileService, whenProviderRegistered } from 'vs/platform/files/common/files';\nimport { Queue } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { dirname, joinPath, basename } from 'vs/base/common/resources';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { BufferLogService } from 'vs/platform/log/common/bufferLog';\n\nconst MAX_FILE_SIZE = 5 * ByteSize.MB;\n\nexport class FileLogger extends AbstractLogger implements ILogger {\n\n\tprivate readonly initializePromise: Promise<void>;\n\tprivate readonly queue: Queue<void>;\n\tprivate backupIndex: number = 1;\n\n\tconstructor(\n\t\tprivate readonly name: string,\n\t\tprivate readonly resource: URI,\n\t\tlevel: LogLevel,\n\t\t@IFileService private readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis.queue = this._register(new Queue<void>());\n\t\tthis.initializePromise = this.initialize();\n\t}\n\n\ttrace(): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis._log(LogLevel.Trace, this.format(arguments));\n\t\t}\n\t}\n\n\tdebug(): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis._log(LogLevel.Debug, this.format(arguments));\n\t\t}\n\t}\n\n\tinfo(): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis._log(LogLevel.Info, this.format(arguments));\n\t\t}\n\t}\n\n\twarn(): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis._log(LogLevel.Warning, this.format(arguments));\n\t\t}\n\t}\n\n\terror(): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconst arg = arguments[0];\n\n\t\t\tif (arg instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = arg.stack;\n\t\t\t\tthis._log(LogLevel.Error, this.format(array));\n\t\t\t} else {\n\t\t\t\tthis._log(LogLevel.Error, this.format(arguments));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis._log(LogLevel.Critical, this.format(arguments));\n\t\t}\n\t}\n\n\tflush(): void {\n\t}\n\n\tlog(level: LogLevel, args: any[]): void {\n\t\tthis._log(level, this.format(args));\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.createFile(this.resource);\n\t\t} catch (error) {\n\t\t\tif ((<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_MODIFIED_SINCE) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _log(level: LogLevel, message: string): void {\n\t\tthis.queue.queue(async () => {\n\t\t\tawait this.initializePromise;\n\t\t\tlet content = await this.loadContent();\n\t\t\tif (content.length > MAX_FILE_SIZE) {\n\t\t\t\tawait this.fileService.writeFile(this.getBackupResource(), VSBuffer.fromString(content));\n\t\t\t\tcontent = '';\n\t\t\t}\n\t\t\tcontent += `[${this.getCurrentTimestamp()}] [${this.name}] [${this.stringifyLogLevel(level)}] ${message}\\n`;\n\t\t\tawait this.fileService.writeFile(this.resource, VSBuffer.fromString(content));\n\t\t});\n\t}\n\n\tprivate getCurrentTimestamp(): string {\n\t\tconst toTwoDigits = (v: number) => v < 10 ? `0${v}` : v;\n\t\tconst toThreeDigits = (v: number) => v < 10 ? `00${v}` : v < 100 ? `0${v}` : v;\n\t\tconst currentTime = new Date();\n\t\treturn `${currentTime.getFullYear()}-${toTwoDigits(currentTime.getMonth() + 1)}-${toTwoDigits(currentTime.getDate())} ${toTwoDigits(currentTime.getHours())}:${toTwoDigits(currentTime.getMinutes())}:${toTwoDigits(currentTime.getSeconds())}.${toThreeDigits(currentTime.getMilliseconds())}`;\n\t}\n\n\tprivate getBackupResource(): URI {\n\t\tthis.backupIndex = this.backupIndex > 5 ? 1 : this.backupIndex;\n\t\treturn joinPath(dirname(this.resource), `${basename(this.resource)}_${this.backupIndex++}`);\n\t}\n\n\tprivate async loadContent(): Promise<string> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.resource);\n\t\t\treturn content.value.toString();\n\t\t} catch (e) {\n\t\t\treturn '';\n\t\t}\n\t}\n\n\tprivate stringifyLogLevel(level: LogLevel): string {\n\t\tswitch (level) {\n\t\t\tcase LogLevel.Critical: return 'critical';\n\t\t\tcase LogLevel.Debug: return 'debug';\n\t\t\tcase LogLevel.Error: return 'error';\n\t\t\tcase LogLevel.Info: return 'info';\n\t\t\tcase LogLevel.Trace: return 'trace';\n\t\t\tcase LogLevel.Warning: return 'warning';\n\t\t}\n\t\treturn '';\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\nexport class FileLoggerService extends AbstractLoggerService implements ILoggerService {\n\n\tconstructor(\n\t\t@ILogService logService: ILogService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t) {\n\t\tsuper(logService.getLevel(), logService.onDidChangeLogLevel);\n\t}\n\n\tprotected doCreateLogger(resource: URI, logLevel: LogLevel): ILogger {\n\t\tconst logger = new BufferLogService(logLevel);\n\t\twhenProviderRegistered(resource, this.fileService).then(() => (<BufferLogService>logger).logger = this.instantiationService.createInstance(FileLogger, basename(resource), resource, logger.getLevel()));\n\t\treturn logger;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { LogLevel, ILogService, LogService, ILoggerService, ILogger, AbstractMessageLogger, ILoggerOptions, AdapterLogger, AbstractLoggerService } from 'vs/platform/log/common/log';\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\n\nexport class LogLevelChannel implements IServerChannel {\n\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tconstructor(private service: ILogService) {\n\t\tthis.onDidChangeLogLevel = Event.buffer(service.onDidChangeLogLevel, true);\n\t}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeLogLevel': return this.onDidChangeLogLevel;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setLevel': return this.service.setLevel(arg);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n}\n\nexport class LogLevelChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.channel.listen('onDidChangeLogLevel');\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tLogLevelChannelClient.setLevel(this.channel, level);\n\t}\n\n\tpublic static setLevel(channel: IChannel, level: LogLevel): Promise<void> {\n\t\treturn channel.call('setLevel', level);\n\t}\n\n}\n\nexport class LoggerChannel implements IServerChannel {\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\n\tconstructor(private readonly loggerService: ILoggerService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'createLogger': this.createLogger(URI.revive(arg[0]), arg[1]); return;\n\t\t\tcase 'log': return this.log(URI.revive(arg[0]), arg[1]);\n\t\t\tcase 'consoleLog': return this.consoleLog(arg[0], arg[1]);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n\tprivate createLogger(file: URI, options: ILoggerOptions): void {\n\t\tthis.loggers.set(file.toString(), this.loggerService.createLogger(file, options));\n\t}\n\n\tprivate consoleLog(level: LogLevel, args: any[]): void {\n\t\tlet consoleFn = console.log;\n\n\t\tswitch (level) {\n\t\t\tcase LogLevel.Error:\n\t\t\t\tconsoleFn = console.error;\n\t\t\t\tbreak;\n\t\t\tcase LogLevel.Warning:\n\t\t\t\tconsoleFn = console.warn;\n\t\t\t\tbreak;\n\t\t\tcase LogLevel.Info:\n\t\t\t\tconsoleFn = console.info;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconsoleFn.call(console, ...args);\n\t}\n\n\tprivate log(file: URI, messages: [LogLevel, string][]): void {\n\t\tconst logger = this.loggers.get(file.toString());\n\t\tif (!logger) {\n\t\t\tthrow new Error('Create the logger before logging');\n\t\t}\n\t\tfor (const [level, message] of messages) {\n\t\t\tswitch (level) {\n\t\t\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\t\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\t\t\tcase LogLevel.Info: logger.info(message); break;\n\t\t\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\t\t\tcase LogLevel.Error: logger.error(message); break;\n\t\t\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\t\t\tdefault: throw new Error('Invalid log level');\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class LoggerChannelClient extends AbstractLoggerService implements ILoggerService {\n\n\tconstructor(logLevel: LogLevel, onDidChangeLogLevel: Event<LogLevel>, private readonly channel: IChannel) {\n\t\tsuper(logLevel, onDidChangeLogLevel);\n\t}\n\n\tcreateConsoleMainLogger(): ILogger {\n\t\treturn new AdapterLogger({\n\t\t\tlog: (level: LogLevel, args: any[]) => {\n\t\t\t\tthis.channel.call('consoleLog', [level, args]);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected doCreateLogger(file: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger {\n\t\treturn new Logger(this.channel, file, logLevel, options);\n\t}\n\n}\n\nclass Logger extends AbstractMessageLogger {\n\n\tprivate isLoggerCreated: boolean = false;\n\tprivate buffer: [LogLevel, string][] = [];\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t\tprivate readonly file: URI,\n\t\tlogLevel: LogLevel,\n\t\tloggerOptions?: ILoggerOptions,\n\t) {\n\t\tsuper(loggerOptions?.always);\n\t\tthis.setLevel(logLevel);\n\t\tthis.channel.call('createLogger', [file, loggerOptions])\n\t\t\t.then(() => {\n\t\t\t\tthis.doLog(this.buffer);\n\t\t\t\tthis.isLoggerCreated = true;\n\t\t\t});\n\t}\n\n\tprotected log(level: LogLevel, message: string) {\n\t\tconst messages: [LogLevel, string][] = [[level, message]];\n\t\tif (this.isLoggerCreated) {\n\t\t\tthis.doLog(messages);\n\t\t} else {\n\t\t\tthis.buffer.push(...messages);\n\t\t}\n\t}\n\n\tprivate doLog(messages: [LogLevel, string][]) {\n\t\tthis.channel.call('log', [this.file, messages]);\n\t}\n}\n\nexport class FollowerLogService extends LogService implements ILogService {\n\n\tconstructor(private parent: LogLevelChannelClient, logService: ILogService) {\n\t\tsuper(logService);\n\t\tthis._register(parent.onDidChangeLogLevel(level => logService.setLevel(level)));\n\t}\n\n\toverride setLevel(level: LogLevel): void {\n\t\tsuper.setLevel(level);\n\n\t\tthis.parent.setLevel(level);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LogLevel, ILogger, AbstractMessageLogger } from 'vs/platform/log/common/log';\nimport * as spdlog from 'spdlog';\nimport { ByteSize } from 'vs/platform/files/common/files';\n\nasync function createSpdLogLogger(name: string, logfilePath: string, filesize: number, filecount: number): Promise<spdlog.RotatingLogger | null> {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog = await import('spdlog');\n\t\t_spdlog.setAsyncMode(8192, 500);\n\t\treturn _spdlog.createRotatingLoggerAsync(name, logfilePath, filesize, filecount);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n\treturn null;\n}\n\nexport function createRotatingLogger(name: string, filename: string, filesize: number, filecount: number): spdlog.RotatingLogger {\n\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\treturn _spdlog.createRotatingLogger(name, filename, filesize, filecount);\n}\n\ninterface ILog {\n\tlevel: LogLevel;\n\tmessage: string;\n}\n\nfunction log(logger: spdlog.RotatingLogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class SpdLogLogger extends AbstractMessageLogger implements ILogger {\n\n\tprivate buffer: ILog[] = [];\n\tprivate readonly _loggerCreationPromise: Promise<void>;\n\tprivate _logger: spdlog.RotatingLogger | undefined;\n\n\tconstructor(\n\t\tprivate readonly name: string,\n\t\tprivate readonly filepath: string,\n\t\tprivate readonly rotating: boolean,\n\t\tlevel: LogLevel\n\t) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis._loggerCreationPromise = this._createSpdLogLogger();\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _createSpdLogLogger(): Promise<void> {\n\t\tconst filecount = this.rotating ? 6 : 1;\n\t\tconst filesize = (30 / filecount) * ByteSize.MB;\n\t\treturn createSpdLogLogger(this.name, this.filepath, filesize, filecount)\n\t\t\t.then(logger => {\n\t\t\t\tif (logger) {\n\t\t\t\t\tthis._logger = logger;\n\t\t\t\t\tthis._logger.setLevel(this.getLevel());\n\t\t\t\t\tfor (const { level, message } of this.buffer) {\n\t\t\t\t\t\tlog(this._logger, level, message);\n\t\t\t\t\t}\n\t\t\t\t\tthis.buffer = [];\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprotected log(level: LogLevel, message: string): void {\n\t\tif (this._logger) {\n\t\t\tlog(this._logger, level, message);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, message });\n\t\t}\n\t}\n\n\tclearFormatters(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.clearFormatters();\n\t\t} else {\n\t\t\tthis._loggerCreationPromise.then(() => this.clearFormatters());\n\t\t}\n\t}\n\n\toverride flush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t} else {\n\t\t\tthis._loggerCreationPromise.then(() => this.flush());\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis.disposeLogger();\n\t\t} else {\n\t\t\tthis._loggerCreationPromise.then(() => this.disposeLogger());\n\t\t}\n\t}\n\n\tprivate disposeLogger(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.drop();\n\t\t\tthis._logger = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService, ILoggerService, ILogger, ILoggerOptions, AbstractLoggerService, LogLevel } from 'vs/platform/log/common/log';\nimport { URI } from 'vs/base/common/uri';\nimport { basename } from 'vs/base/common/resources';\nimport { Schemas } from 'vs/base/common/network';\nimport { FileLogger } from 'vs/platform/log/common/fileLog';\nimport { SpdLogLogger } from 'vs/platform/log/node/spdlogLog';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { generateUuid } from 'vs/base/common/uuid';\n\nexport class LoggerService extends AbstractLoggerService implements ILoggerService {\n\n\tconstructor(\n\t\t@ILogService logService: ILogService,\n\t\t@IFileService private readonly fileService: IFileService\n\t) {\n\t\tsuper(logService.getLevel(), logService.onDidChangeLogLevel);\n\t}\n\n\tprotected doCreateLogger(resource: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst logger = new SpdLogLogger(options?.name || generateUuid(), resource.fsPath, !options?.donotRotate, logLevel);\n\t\t\tif (options?.donotUseFormatters) {\n\t\t\t\t(<SpdLogLogger>logger).clearFormatters();\n\t\t\t}\n\t\t\treturn logger;\n\t\t} else {\n\t\t\treturn new FileLogger(options?.name ?? basename(resource), resource, logLevel, this.fileService);\n\t\t}\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport BaseSeverity from 'vs/base/common/severity';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IAction } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport import Severity = BaseSeverity;\n\nexport const INotificationService = createDecorator<INotificationService>('notificationService');\n\nexport type NotificationMessage = string | Error;\n\nexport interface INotificationProperties {\n\n\t/**\n\t * Sticky notifications are not automatically removed after a certain timeout. By\n\t * default, notifications with primary actions and severity error are always sticky.\n\t */\n\treadonly sticky?: boolean;\n\n\t/**\n\t * Silent notifications are not shown to the user unless the notification center\n\t * is opened. The status bar will still indicate all number of notifications to\n\t * catch some attention.\n\t */\n\treadonly silent?: boolean;\n\n\t/**\n\t * Adds an action to never show the notification again. The choice will be persisted\n\t * such as future requests will not cause the notification to show again.\n\t */\n\treadonly neverShowAgain?: INeverShowAgainOptions;\n}\n\nexport enum NeverShowAgainScope {\n\n\t/**\n\t * Will never show this notification on the current workspace again.\n\t */\n\tWORKSPACE,\n\n\t/**\n\t * Will never show this notification on any workspace again.\n\t */\n\tGLOBAL\n}\n\nexport interface INeverShowAgainOptions {\n\n\t/**\n\t * The id is used to persist the selection of not showing the notification again.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * By default the action will show up as primary action. Setting this to true will\n\t * make it a secondary action instead.\n\t */\n\treadonly isSecondary?: boolean;\n\n\t/**\n\t * Whether to persist the choice in the current workspace or for all workspaces. By\n\t * default it will be persisted for all workspaces (= `NeverShowAgainScope.GLOBAL`).\n\t */\n\treadonly scope?: NeverShowAgainScope;\n}\n\nexport interface INotification extends INotificationProperties {\n\n\t/**\n\t * The id of the notification. If provided, will be used to compare\n\t * notifications with others to decide whether a notification is\n\t * duplicate or not.\n\t */\n\treadonly id?: string;\n\n\t/**\n\t * The severity of the notification. Either `Info`, `Warning` or `Error`.\n\t */\n\treadonly severity: Severity;\n\n\t/**\n\t * The message of the notification. This can either be a `string` or `Error`. Messages\n\t * can optionally include links in the format: `[text](link)`\n\t */\n\treadonly message: NotificationMessage;\n\n\t/**\n\t * The source of the notification appears as additional information.\n\t */\n\treadonly source?: string | { label: string; id: string; };\n\n\t/**\n\t * Actions to show as part of the notification. Primary actions show up as\n\t * buttons as part of the message and will close the notification once clicked.\n\t *\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t */\n\tactions?: INotificationActions;\n\n\t/**\n\t * The initial set of progress properties for the notification. To update progress\n\t * later on, access the `INotificationHandle.progress` property.\n\t */\n\treadonly progress?: INotificationProgressProperties;\n}\n\nexport interface INotificationActions {\n\n\t/**\n\t * Primary actions show up as buttons as part of the message and will close\n\t * the notification once clicked.\n\t *\n\t * Pass `ActionWithMenuAction` for an action that has additional menu actions.\n\t */\n\treadonly primary?: readonly IAction[];\n\n\t/**\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t */\n\treadonly secondary?: readonly IAction[];\n}\n\nexport interface INotificationProgressProperties {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\treadonly infinite?: boolean;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\treadonly total?: number;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\treadonly worked?: number;\n}\n\nexport interface INotificationProgress {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\tinfinite(): void;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\ttotal(value: number): void;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\tworked(value: number): void;\n\n\t/**\n\t * Indicate that the long running operation is done.\n\t */\n\tdone(): void;\n}\n\nexport interface INotificationHandle {\n\n\t/**\n\t * Will be fired once the notification is closed.\n\t */\n\treadonly onDidClose: Event<void>;\n\n\t/**\n\t * Will be fired whenever the visibility of the notification changes.\n\t * A notification can either be visible as toast or inside the notification\n\t * center if it is visible.\n\t */\n\treadonly onDidChangeVisibility: Event<boolean>;\n\n\t/**\n\t * Allows to indicate progress on the notification even after the\n\t * notification is already visible.\n\t */\n\treadonly progress: INotificationProgress;\n\n\t/**\n\t * Allows to update the severity of the notification.\n\t */\n\tupdateSeverity(severity: Severity): void;\n\n\t/**\n\t * Allows to update the message of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateMessage(message: NotificationMessage): void;\n\n\t/**\n\t * Allows to update the actions of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateActions(actions?: INotificationActions): void;\n\n\t/**\n\t * Hide the notification and remove it from the notification center.\n\t */\n\tclose(): void;\n}\n\ninterface IBasePromptChoice {\n\n\t/**\n\t * Label to show for the choice to the user.\n\t */\n\treadonly label: string;\n\n\t/**\n\t * Whether to keep the notification open after the choice was selected\n\t * by the user. By default, will close the notification upon click.\n\t */\n\treadonly keepOpen?: boolean;\n\n\t/**\n\t * Triggered when the user selects the choice.\n\t */\n\trun: () => void;\n}\n\nexport interface IPromptChoice extends IBasePromptChoice {\n\n\t/**\n\t * Primary choices show up as buttons in the notification below the message.\n\t * Secondary choices show up under the gear icon in the header of the notification.\n\t */\n\treadonly isSecondary?: boolean;\n}\n\nexport interface IPromptChoiceWithMenu extends IPromptChoice {\n\n\t/**\n\t * Additional choices those will be shown in the dropdown menu for this choice.\n\t */\n\treadonly menu: IBasePromptChoice[];\n\n\t/**\n\t * Menu is not supported on secondary choices\n\t */\n\treadonly isSecondary: false | undefined;\n}\n\nexport interface IPromptOptions extends INotificationProperties {\n\n\t/**\n\t * Will be called if the user closed the notification without picking\n\t * any of the provided choices.\n\t */\n\tonCancel?: () => void;\n}\n\nexport interface IStatusMessageOptions {\n\n\t/**\n\t * An optional timeout after which the status message should show. By default\n\t * the status message will show immediately.\n\t */\n\treadonly showAfter?: number;\n\n\t/**\n\t * An optional timeout after which the status message is to be hidden. By default\n\t * the status message will not hide until another status message is displayed.\n\t */\n\treadonly hideAfter?: number;\n}\n\nexport enum NotificationsFilter {\n\n\t/**\n\t * No filter is enabled.\n\t */\n\tOFF,\n\n\t/**\n\t * All notifications are configured as silent. See\n\t * `INotificationProperties.silent` for more info.\n\t */\n\tSILENT,\n\n\t/**\n\t * All notifications are silent except error notifications.\n\t*/\n\tERROR\n}\n\n/**\n * A service to bring up notifications and non-modal prompts.\n *\n * Note: use the `IDialogService` for a modal way to ask the user for input.\n */\nexport interface INotificationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Emitted when a new notification is added.\n\t */\n\treadonly onDidAddNotification: Event<INotification>;\n\n\t/**\n\t * Emitted when a notification is removed.\n\t */\n\treadonly onDidRemoveNotification: Event<INotification>;\n\n\t/**\n\t * Show the provided notification to the user. The returned `INotificationHandle`\n\t * can be used to control the notification afterwards.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tnotify(notification: INotification): INotificationHandle;\n\n\t/**\n\t * A convenient way of reporting infos. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\tinfo(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting warnings. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\twarn(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting errors. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\terror(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * Shows a prompt in the notification area with the provided choices. The prompt\n\t * is non-modal. If you want to show a modal dialog instead, use `IDialogService`.\n\t *\n\t * @param severity the severity of the notification. Either `Info`, `Warning` or `Error`.\n\t * @param message the message to show as status.\n\t * @param choices options to be choosen from.\n\t * @param options provides some optional configuration options.\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tprompt(severity: Severity, message: string, choices: (IPromptChoice | IPromptChoiceWithMenu)[], options?: IPromptOptions): INotificationHandle;\n\n\t/**\n\t * Shows a status message in the status area with the provided text.\n\t *\n\t * @param message the message to show as status\n\t * @param options provides some optional configuration options\n\t *\n\t * @returns a disposable to hide the status message\n\t */\n\tstatus(message: NotificationMessage, options?: IStatusMessageOptions): IDisposable;\n\n\t/**\n\t * Allows to configure a filter for notifications.\n\t *\n\t * @param filter the filter to use\n\t */\n\tsetFilter(filter: NotificationsFilter): void;\n}\n\nexport class NoOpNotification implements INotificationHandle {\n\n\treadonly progress = new NoOpProgress();\n\n\treadonly onDidClose = Event.None;\n\treadonly onDidChangeVisibility = Event.None;\n\n\tupdateSeverity(severity: Severity): void { }\n\tupdateMessage(message: NotificationMessage): void { }\n\tupdateActions(actions?: INotificationActions): void { }\n\n\tclose(): void { }\n}\n\nexport class NoOpProgress implements INotificationProgress {\n\tinfinite(): void { }\n\tdone(): void { }\n\ttotal(value: number): void { }\n\tworked(value: number): void { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileAccess } from 'vs/base/common/network';\nimport { isWeb, globals } from 'vs/base/common/platform';\nimport { env } from 'vs/base/common/process';\nimport { dirname, joinPath } from 'vs/base/common/resources';\nimport { IProductConfiguration } from 'vs/base/common/product';\nimport { ISandboxConfiguration } from 'vs/base/parts/sandbox/common/sandboxTypes';\n\nlet product: IProductConfiguration;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined') {\n\tconst configuration: ISandboxConfiguration | undefined = globals.vscode.context.configuration();\n\tif (configuration) {\n\t\tproduct = configuration.product;\n\t} else {\n\t\tthrow new Error('Sandbox: unable to resolve product configuration from preload script.');\n\t}\n}\n\n// Native node.js environment\nelse if (typeof require?.__$__nodeRequire === 'function') {\n\n\t// Obtain values from product.json and package.json\n\tconst rootPath = dirname(FileAccess.asFileUri('', require));\n\n\tproduct = require.__$__nodeRequire(joinPath(rootPath, 'product.json').fsPath);\n\tconst pkg = require.__$__nodeRequire(joinPath(rootPath, 'package.json').fsPath) as { version: string; };\n\n\t// Running out of sources\n\tif (env['VSCODE_DEV']) {\n\t\tObject.assign(product, {\n\t\t\tnameShort: `${product.nameShort} Dev`,\n\t\t\tnameLong: `${product.nameLong} Dev`,\n\t\t\tdataFolderName: `${product.dataFolderName}-dev`\n\t\t});\n\t}\n\n\tObject.assign(product, {\n\t\tversion: pkg.version\n\t});\n}\n\n// Web environment or unknown\nelse {\n\n\t// Built time configuration (do NOT modify)\n\tproduct = { /*BUILD->INSERT_PRODUCT_CONFIGURATION*/ } as IProductConfiguration;\n\n\t// Running out of sources\n\tif (Object.keys(product).length === 0) {\n\t\tObject.assign(product, {\n\t\t\tversion: '1.56.0-dev',\n\t\t\tnameShort: isWeb ? 'Code Web - OSS Dev' : 'Code - OSS Dev',\n\t\t\tnameLong: isWeb ? 'Code Web - OSS Dev' : 'Code - OSS Dev',\n\t\t\tapplicationName: 'code-oss',\n\t\t\tdataFolderName: '.vscode-oss',\n\t\t\turlProtocol: 'code-oss',\n\t\t\treportIssueUrl: 'https://github.com/microsoft/vscode/issues/new',\n\t\t\tlicenseName: 'MIT',\n\t\t\tlicenseUrl: 'https://github.com/microsoft/vscode/blob/main/LICENSE.txt',\n\t\t\textensionAllowedProposedApi: [\n\t\t\t\t'ms-vscode.vscode-js-profile-flame',\n\t\t\t\t'ms-vscode.vscode-js-profile-table',\n\t\t\t\t'ms-vscode.github-browser',\n\t\t\t\t'ms-vscode.github-richnav',\n\t\t\t\t'ms-vscode.remotehub',\n\t\t\t\t'ms-vscode.remotehub-insiders'\n\t\t\t],\n\t\t});\n\t}\n\t// NOTE@coder: Add the ability to inject settings from the server.\n\tconst el = document.getElementById('vscode-remote-product-configuration');\n\tconst rawProductConfiguration = el && el.getAttribute('data-settings');\n\tif (rawProductConfiguration) {\n\t\tObject.assign(product, JSON.parse(rawProductConfiguration));\n\t}\n}\n\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, createFileSystemProviderError, FileSystemProviderErrorCode, ensureFileSystemProviderError } from 'vs/platform/files/common/files';\nimport { canceled } from 'vs/base/common/errors';\nimport { IErrorTransformer, IDataTransformer, WriteableStream } from 'vs/base/common/stream';\nimport product from 'vs/platform/product/common/product';\n\nexport interface ICreateReadStreamOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The size of the buffer to use before sending to the stream.\n\t */\n\tbufferSize: number;\n\n\t/**\n\t * Allows to massage any possibly error that happens during reading.\n\t */\n\terrorTransformer?: IErrorTransformer;\n}\n\n/**\n * A helper to read a file from a provider with open/read/close capability into a stream.\n */\nexport async function readFileIntoStream<T>(\n\tprovider: IFileSystemProviderWithOpenReadWriteCloseCapability,\n\tresource: URI,\n\ttarget: WriteableStream<T>,\n\ttransformer: IDataTransformer<VSBuffer, T>,\n\toptions: ICreateReadStreamOptions,\n\ttoken: CancellationToken\n): Promise<void> {\n\tlet error: Error | undefined = undefined;\n\n\ttry {\n\t\tawait doReadFileIntoStream(provider, resource, target, transformer, options, token);\n\t} catch (err) {\n\t\terror = err;\n\t} finally {\n\t\tif (error && options.errorTransformer) {\n\t\t\terror = options.errorTransformer(error);\n\t\t}\n\n\t\tif (typeof error !== 'undefined') {\n\t\t\ttarget.error(error);\n\t\t}\n\n\t\ttarget.end();\n\t}\n}\n\nasync function doReadFileIntoStream<T>(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, target: WriteableStream<T>, transformer: IDataTransformer<VSBuffer, T>, options: ICreateReadStreamOptions, token: CancellationToken): Promise<void> {\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\t// open handle through provider\n\tconst handle = await provider.open(resource, { create: false });\n\n\ttry {\n\n\t\t// Check for cancellation\n\t\tthrowIfCancelled(token);\n\n\t\tlet totalBytesRead = 0;\n\t\tlet bytesRead = 0;\n\t\tlet allowedRemainingBytes = (options && typeof options.length === 'number') ? options.length : undefined;\n\n\t\tlet buffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\tlet posInFile = options && typeof options.position === 'number' ? options.position : 0;\n\t\tlet posInBuffer = 0;\n\t\tdo {\n\t\t\t// read from source (handle) at current position (pos) into buffer (buffer) at\n\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\tbytesRead = await provider.read(handle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\tposInFile += bytesRead;\n\t\t\tposInBuffer += bytesRead;\n\t\t\ttotalBytesRead += bytesRead;\n\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tallowedRemainingBytes -= bytesRead;\n\t\t\t}\n\n\t\t\t// when buffer full, create a new one and emit it through stream\n\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\tawait target.write(transformer(buffer));\n\n\t\t\t\tbuffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\t\t\tposInBuffer = 0;\n\t\t\t}\n\t\t} while (bytesRead > 0 && (typeof allowedRemainingBytes !== 'number' || allowedRemainingBytes > 0) && throwIfCancelled(token) && throwIfTooLarge(totalBytesRead, options));\n\n\t\t// wrap up with last buffer (also respect maxBytes if provided)\n\t\tif (posInBuffer > 0) {\n\t\t\tlet lastChunkLength = posInBuffer;\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tlastChunkLength = Math.min(posInBuffer, allowedRemainingBytes);\n\t\t\t}\n\n\t\t\ttarget.write(transformer(buffer.slice(0, lastChunkLength)));\n\t\t}\n\t} catch (error) {\n\t\tthrow ensureFileSystemProviderError(error);\n\t} finally {\n\t\tawait provider.close(handle);\n\t}\n}\n\nfunction throwIfCancelled(token: CancellationToken): boolean {\n\tif (token.isCancellationRequested) {\n\t\tthrow canceled();\n\t}\n\n\treturn true;\n}\n\nfunction throwIfTooLarge(totalBytesRead: number, options: ICreateReadStreamOptions): boolean {\n\n\t// Return early if file is too large to load and we have configured limits\n\tif (options?.limits) {\n\t\tif (typeof options.limits.memory === 'number' && totalBytesRead > options.limits.memory) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeForHeapError', \"To open a file of this size, you need to restart and allow {0} to use more memory\", product.nameShort), FileSystemProviderErrorCode.FileExceedsMemoryLimit);\n\t\t}\n\n\t\tif (typeof options.limits.size === 'number' && totalBytesRead > options.limits.size) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeError', \"File is too large to open\"), FileSystemProviderErrorCode.FileTooLarge);\n\t\t}\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { mark } from 'vs/base/common/performance';\nimport { Disposable, IDisposable, toDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IFileService, IResolveFileOptions, FileChangesEvent, FileOperationEvent, IFileSystemProviderRegistrationEvent, IFileSystemProvider, IFileStat, IResolveFileResult, ICreateFileOptions, IFileSystemProviderActivationEvent, FileOperationError, FileOperationResult, FileOperation, FileSystemProviderCapabilities, FileType, toFileSystemProviderErrorCode, FileSystemProviderErrorCode, IStat, IFileStatWithMetadata, IResolveMetadataFileOptions, etag, hasReadWriteCapability, hasFileFolderCopyCapability, hasOpenReadWriteCloseCapability, toFileOperationResult, IFileSystemProviderWithOpenReadWriteCloseCapability, IFileSystemProviderWithFileReadWriteCapability, IResolveFileResultWithMetadata, IWatchOptions, IWriteFileOptions, IReadFileOptions, IFileStreamContent, IFileContent, ETAG_DISABLED, hasFileReadStreamCapability, IFileSystemProviderWithFileReadStreamCapability, ensureFileSystemProviderError, IFileSystemProviderCapabilitiesChangeEvent, IReadFileStreamOptions, FileDeleteOptions } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Emitter } from 'vs/base/common/event';\nimport { IExtUri, extUri, extUriIgnorePathCase, isAbsolutePath } from 'vs/base/common/resources';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { isNonEmptyArray, coalesce } from 'vs/base/common/arrays';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { VSBuffer, VSBufferReadable, readableToBuffer, bufferToReadable, streamToBuffer, VSBufferReadableStream, VSBufferReadableBufferedStream, bufferedStreamToBuffer, newWriteableBufferStream } from 'vs/base/common/buffer';\nimport { isReadableStream, transform, peekReadable, peekStream, isReadableBufferedStream, newWriteableStream, listenStream, consumeStream } from 'vs/base/common/stream';\nimport { Promises, ResourceQueue } from 'vs/base/common/async';\nimport { CancellationTokenSource, CancellationToken } from 'vs/base/common/cancellation';\nimport { Schemas } from 'vs/base/common/network';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { Iterable } from 'vs/base/common/iterator';\n\nexport class FileService extends Disposable implements IFileService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly BUFFER_SIZE = 64 * 1024;\n\n\tconstructor(@ILogService private readonly logService: ILogService) {\n\t\tsuper();\n\t}\n\n\t//#region File System Provider\n\n\tprivate readonly _onDidChangeFileSystemProviderRegistrations = this._register(new Emitter<IFileSystemProviderRegistrationEvent>());\n\treadonly onDidChangeFileSystemProviderRegistrations = this._onDidChangeFileSystemProviderRegistrations.event;\n\n\tprivate readonly _onWillActivateFileSystemProvider = this._register(new Emitter<IFileSystemProviderActivationEvent>());\n\treadonly onWillActivateFileSystemProvider = this._onWillActivateFileSystemProvider.event;\n\n\tprivate readonly _onDidChangeFileSystemProviderCapabilities = this._register(new Emitter<IFileSystemProviderCapabilitiesChangeEvent>());\n\treadonly onDidChangeFileSystemProviderCapabilities = this._onDidChangeFileSystemProviderCapabilities.event;\n\n\tprivate readonly provider = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable {\n\t\tif (this.provider.has(scheme)) {\n\t\t\tthrow new Error(`A filesystem provider for the scheme '${scheme}' is already registered.`);\n\t\t}\n\n\t\tmark(`code/registerFilesystem/${scheme}`);\n\n\t\t// Add provider with event\n\t\tthis.provider.set(scheme, provider);\n\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: true, scheme, provider });\n\n\t\t// Forward events from provider\n\t\tconst providerDisposables = new DisposableStore();\n\t\tproviderDisposables.add(provider.onDidChangeFile(changes => this._onDidFilesChange.fire(new FileChangesEvent(changes, !this.isPathCaseSensitive(provider)))));\n\t\tproviderDisposables.add(provider.onDidChangeCapabilities(() => this._onDidChangeFileSystemProviderCapabilities.fire({ provider, scheme })));\n\t\tif (typeof provider.onDidErrorOccur === 'function') {\n\t\t\tproviderDisposables.add(provider.onDidErrorOccur(error => this._onError.fire(new Error(error))));\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: false, scheme, provider });\n\t\t\tthis.provider.delete(scheme);\n\n\t\t\tdispose(providerDisposables);\n\t\t});\n\t}\n\n\tgetProvider(scheme: string): IFileSystemProvider | undefined {\n\t\treturn this.provider.get(scheme);\n\t}\n\n\tasync activateProvider(scheme: string): Promise<void> {\n\n\t\t// Emit an event that we are about to activate a provider with the given scheme.\n\t\t// Listeners can participate in the activation by registering a provider for it.\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillActivateFileSystemProvider.fire({\n\t\t\tscheme,\n\t\t\tjoin(promise) {\n\t\t\t\tjoiners.push(promise);\n\t\t\t},\n\t\t});\n\n\t\tif (this.provider.has(scheme)) {\n\t\t\treturn; // provider is already here so we can return directly\n\t\t}\n\n\t\t// If the provider is not yet there, make sure to join on the listeners assuming\n\t\t// that it takes a bit longer to register the file system provider.\n\t\tawait Promises.settled(joiners);\n\t}\n\n\tcanHandleResource(resource: URI): boolean {\n\t\treturn this.provider.has(resource.scheme);\n\t}\n\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tconst provider = this.provider.get(resource.scheme);\n\n\t\treturn !!(provider && (provider.capabilities & capability));\n\t}\n\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities; }> {\n\t\treturn Iterable.map(this.provider, ([scheme, provider]) => ({ scheme, capabilities: provider.capabilities }));\n\t}\n\n\tprotected async withProvider(resource: URI): Promise<IFileSystemProvider> {\n\n\t\t// Assert path is absolute\n\t\tif (!isAbsolutePath(resource)) {\n\t\t\tthrow new FileOperationError(localize('invalidPath', \"Unable to resolve filesystem provider with relative file path '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_INVALID_PATH);\n\t\t}\n\n\t\t// Activate provider\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\t// Assert provider\n\t\tconst provider = this.provider.get(resource.scheme);\n\t\tif (!provider) {\n\t\t\tconst error = new Error();\n\t\t\terror.name = 'ENOPRO';\n\t\t\terror.message = localize('noProviderFound', \"No file system provider found for resource '{0}'\", resource.toString());\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate async withReadProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider) || hasFileReadStreamCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`);\n\t}\n\n\tprivate async withWriteProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`);\n\t}\n\n\t//#endregion\n\n\tprivate readonly _onDidRunOperation = this._register(new Emitter<FileOperationEvent>());\n\treadonly onDidRunOperation = this._onDidRunOperation.event;\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\treadonly onError = this._onError.event;\n\n\t//#region File Metadata Resolving\n\n\tasync resolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\ttry {\n\t\t\treturn await this.doResolveFile(resource, options);\n\t\t} catch (error) {\n\n\t\t\t// Specially handle file not found case as file operation result\n\t\t\tif (toFileSystemProviderErrorCode(error) === FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\tthrow new FileOperationError(localize('fileNotFoundError', \"Unable to resolve non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t\t}\n\n\t\t\t// Bubble up any other error as is\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async doResolveFile(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst isPathCaseSensitive = this.isPathCaseSensitive(provider);\n\n\t\tconst resolveTo = options?.resolveTo;\n\t\tconst resolveSingleChildDescendants = options?.resolveSingleChildDescendants;\n\t\tconst resolveMetadata = options?.resolveMetadata;\n\n\t\tconst stat = await provider.stat(resource);\n\n\t\tlet trie: TernarySearchTree<URI, boolean> | undefined;\n\n\t\treturn this.toFileStat(provider, resource, stat, undefined, !!resolveMetadata, (stat, siblings) => {\n\n\t\t\t// lazy trie to check for recursive resolving\n\t\t\tif (!trie) {\n\t\t\t\ttrie = TernarySearchTree.forUris<true>(() => !isPathCaseSensitive);\n\t\t\t\ttrie.set(resource, true);\n\t\t\t\tif (isNonEmptyArray(resolveTo)) {\n\t\t\t\t\tresolveTo.forEach(uri => trie!.set(uri, true));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check for recursive resolving\n\t\t\tif (Boolean(trie.findSuperstr(stat.resource) || trie.get(stat.resource))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// check for resolving single child folders\n\t\t\tif (stat.isDirectory && resolveSingleChildDescendants) {\n\t\t\t\treturn siblings === 1;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType; } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat, siblings: number | undefined, resolveMetadata: true, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStatWithMetadata>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType; } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat> {\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\n\t\t// convert to file stat\n\t\tconst fileStat: IFileStat = {\n\t\t\tresource,\n\t\t\tname: providerExtUri.basename(resource),\n\t\t\tisFile: (stat.type & FileType.File) !== 0,\n\t\t\tisDirectory: (stat.type & FileType.Directory) !== 0,\n\t\t\tisSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime,\n\t\t\tsize: stat.size,\n\t\t\tetag: etag({ mtime: stat.mtime, size: stat.size })\n\t\t};\n\n\t\t// check to recurse for directories\n\t\tif (fileStat.isDirectory && recurse(fileStat, siblings)) {\n\t\t\ttry {\n\t\t\t\tconst entries = await provider.readdir(resource);\n\t\t\t\tconst resolvedEntries = await Promises.settled(entries.map(async ([name, type]) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst childResource = providerExtUri.joinPath(resource, name);\n\t\t\t\t\t\tconst childStat = resolveMetadata ? await provider.stat(childResource) : { type };\n\n\t\t\t\t\t\treturn await this.toFileStat(provider, childResource, childStat, entries.length, resolveMetadata, recurse);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\t\t\treturn null; // can happen e.g. due to permission errors\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\t// make sure to get rid of null values that signal a failure to resolve a particular entry\n\t\t\t\tfileStat.children = coalesce(resolvedEntries);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\tfileStat.children = []; // gracefully handle errors, we may not have permissions to read\n\t\t\t}\n\n\t\t\treturn fileStat;\n\t\t}\n\n\t\treturn fileStat;\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI, options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]>;\n\tasync resolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions; }[]): Promise<IResolveFileResultWithMetadata[]>;\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]> {\n\t\treturn Promises.settled(toResolve.map(async entry => {\n\t\t\ttry {\n\t\t\t\treturn { stat: await this.doResolveFile(entry.resource, entry.options), success: true };\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\treturn { stat: undefined, success: false };\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync exists(resource: URI): Promise<boolean> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\ttry {\n\t\t\tconst stat = await provider.stat(resource);\n\n\t\t\treturn !!stat;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync canCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateCreateFile(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateCreateFile(resource: URI, options?: ICreateFileOptions): Promise<void> {\n\n\t\t// validate overwrite\n\t\tif (!options?.overwrite && await this.exists(resource)) {\n\t\t\tthrow new FileOperationError(localize('fileExists', \"Unable to create file '{0}' that already exists when overwrite flag is not set\", this.resourceForError(resource)), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\t}\n\n\tasync createFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream = VSBuffer.fromString(''), options?: ICreateFileOptions): Promise<IFileStatWithMetadata> {\n\n\t\t// validate\n\t\tawait this.doValidateCreateFile(resource, options);\n\n\t\t// do write into file (this will create it too)\n\t\tconst fileStat = await this.writeFile(resource, bufferOrReadableOrStream);\n\n\t\t// events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync writeFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(resource), resource);\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\n\t\ttry {\n\n\t\t\t// validate write\n\t\t\tconst stat = await this.validateWriteFile(provider, resource, options);\n\n\t\t\t// mkdir recursively as needed\n\t\t\tif (!stat) {\n\t\t\t\tawait this.mkdirp(provider, providerExtUri.dirname(resource));\n\t\t\t}\n\n\t\t\t// optimization: if the provider has unbuffered write capability and the data\n\t\t\t// to write is a Readable, we consume up to 3 chunks and try to write the data\n\t\t\t// unbuffered to reduce the overhead. If the Readable has more data to provide\n\t\t\t// we continue to write buffered.\n\t\t\tlet bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream;\n\t\t\tif (hasReadWriteCapability(provider) && !(bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tif (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\t\t\tconst bufferedStream = await peekStream(bufferOrReadableOrStream, 3);\n\t\t\t\t\tif (bufferedStream.ended) {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = VSBuffer.concat(bufferedStream.buffer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferedStream;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = peekReadable(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferOrReadableOrStream;\n\t\t\t}\n\n\t\t\t// write file: unbuffered (only if data to write is a buffer, or the provider has no buffered write capability)\n\t\t\tif (!hasOpenReadWriteCloseCapability(provider) || (hasReadWriteCapability(provider) && bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer)) {\n\t\t\t\tawait this.doWriteUnbuffered(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\n\t\t\t// write file: buffered\n\t\t\telse {\n\t\t\t\tawait this.doWriteBuffered(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer ? bufferToReadable(bufferOrReadableOrStreamOrBufferedStream) : bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.write', \"Unable to write file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\n\t\treturn this.resolve(resource, { resolveMetadata: true });\n\t}\n\n\tprivate async validateWriteFile(provider: IFileSystemProvider, resource: URI, options?: IWriteFileOptions): Promise<IStat | undefined> {\n\n\t\t// Validate unlock support\n\t\tconst unlock = !!options?.unlock;\n\t\tif (unlock && !(provider.capabilities & FileSystemProviderCapabilities.FileWriteUnlock)) {\n\t\t\tthrow new Error(localize('writeFailedUnlockUnsupported', \"Unable to unlock file '{0}' because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate via file stat meta data\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\treturn undefined; // file might not exist\n\t\t}\n\n\t\t// File cannot be directory\n\t\tif ((stat.type & FileType.Directory) !== 0) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryWriteError', \"Unable to write file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Dirty write prevention: if the file on disk has been changed and does not match our expected\n\t\t// mtime and etag, we bail out to prevent dirty writing.\n\t\t//\n\t\t// First, we check for a mtime that is in the future before we do more checks. The assumption is\n\t\t// that only the mtime is an indicator for a file that has changed on disk.\n\t\t//\n\t\t// Second, if the mtime has advanced, we compare the size of the file on disk with our previous\n\t\t// one using the etag() function. Relying only on the mtime check has prooven to produce false\n\t\t// positives due to file system weirdness (especially around remote file systems). As such, the\n\t\t// check for size is a weaker check because it can return a false negative if the file has changed\n\t\t// but to the same length. This is a compromise we take to avoid having to produce checksums of\n\t\t// the file content for comparison which would be much slower to compute.\n\t\tif (\n\t\t\toptions && typeof options.mtime === 'number' && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED &&\n\t\t\ttypeof stat.mtime === 'number' && typeof stat.size === 'number' &&\n\t\t\toptions.mtime < stat.mtime && options.etag !== etag({ mtime: options.mtime /* not using stat.mtime for a reason, see above */, size: stat.size })\n\t\t) {\n\t\t\tthrow new FileOperationError(localize('fileModifiedError', \"File Modified Since\"), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tasync readFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\tif (options?.atomic) {\n\t\t\treturn this.doReadFileAtomic(provider, resource, options);\n\t\t}\n\n\t\treturn this.doReadFile(provider, resource, options);\n\t}\n\n\tprivate async doReadFileAtomic(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\treturn new Promise<IFileContent>((resolve, reject) => {\n\t\t\tthis.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst content = await this.doReadFile(provider, resource, options);\n\t\t\t\t\tresolve(content);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async doReadFile(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst stream = await this.doReadFileStream(provider, resource, {\n\t\t\t...options,\n\t\t\t// optimization: since we know that the caller does not\n\t\t\t// care about buffering, we indicate this to the reader.\n\t\t\t// this reduces all the overhead the buffered reading\n\t\t\t// has (open, read, close) if the provider supports\n\t\t\t// unbuffered reading.\n\t\t\tpreferUnbuffered: true\n\t\t});\n\n\t\treturn {\n\t\t\t...stream,\n\t\t\tvalue: await streamToBuffer(stream.value)\n\t\t};\n\t}\n\n\tasync readFileStream(resource: URI, options?: IReadFileStreamOptions): Promise<IFileStreamContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\treturn this.doReadFileStream(provider, resource, options);\n\t}\n\n\tprivate async doReadFileStream(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileStreamOptions & { preferUnbuffered?: boolean; }): Promise<IFileStreamContent> {\n\n\t\t// install a cancellation token that gets cancelled\n\t\t// when any error occurs. this allows us to resolve\n\t\t// the content of the file while resolving metadata\n\t\t// but still cancel the operation in certain cases.\n\t\tconst cancellableSource = new CancellationTokenSource();\n\n\t\t// validate read operation\n\t\tconst statPromise = this.validateReadFile(resource, options).then(stat => stat, error => {\n\t\t\tcancellableSource.cancel();\n\n\t\t\tthrow error;\n\t\t});\n\n\t\tlet fileStream: VSBufferReadableStream | undefined = undefined;\n\t\ttry {\n\n\t\t\t// if the etag is provided, we await the result of the validation\n\t\t\t// due to the likelihood of hitting a NOT_MODIFIED_SINCE result.\n\t\t\t// otherwise, we let it run in parallel to the file reading for\n\t\t\t// optimal startup performance.\n\t\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED) {\n\t\t\t\tawait statPromise;\n\t\t\t}\n\n\t\t\t// read unbuffered (only if either preferred, or the provider has no buffered read capability)\n\t\t\tif (!(hasOpenReadWriteCloseCapability(provider) || hasFileReadStreamCapability(provider)) || (hasReadWriteCapability(provider) && options?.preferUnbuffered)) {\n\t\t\t\tfileStream = this.readFileUnbuffered(provider, resource, options);\n\t\t\t}\n\n\t\t\t// read streamed (always prefer over primitive buffered read)\n\t\t\telse if (hasFileReadStreamCapability(provider)) {\n\t\t\t\tfileStream = this.readFileStreamed(provider, resource, cancellableSource.token, options);\n\t\t\t}\n\n\t\t\t// read buffered\n\t\t\telse {\n\t\t\t\tfileStream = this.readFileBuffered(provider, resource, cancellableSource.token, options);\n\t\t\t}\n\n\t\t\tconst fileStat = await statPromise;\n\n\t\t\treturn {\n\t\t\t\t...fileStat,\n\t\t\t\tvalue: fileStream\n\t\t\t};\n\t\t} catch (error) {\n\n\t\t\t// Await the stream to finish so that we exit this method\n\t\t\t// in a consistent state with file handles closed\n\t\t\t// (https://github.com/microsoft/vscode/issues/114024)\n\t\t\tif (fileStream) {\n\t\t\t\tawait consumeStream(fileStream);\n\t\t\t}\n\n\t\t\tthrow new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\t}\n\n\tprivate readFileStreamed(provider: IFileSystemProviderWithFileReadStreamCapability, resource: URI, token: CancellationToken, options: IReadFileStreamOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = provider.readFileStream(resource, options, token);\n\n\t\treturn transform(fileStream, {\n\t\t\tdata: data => data instanceof VSBuffer ? data : VSBuffer.wrap(data),\n\t\t\terror: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, data => VSBuffer.concat(data));\n\t}\n\n\tprivate readFileBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, token: CancellationToken, options: IReadFileStreamOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\treadFileIntoStream(provider, resource, stream, data => data, {\n\t\t\t...options,\n\t\t\tbufferSize: this.BUFFER_SIZE,\n\t\t\terrorTransformer: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tprivate readFileUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options?: IReadFileStreamOptions): VSBufferReadableStream {\n\t\tconst stream = newWriteableStream<VSBuffer>(data => VSBuffer.concat(data));\n\n\t\t// Read the file into the stream async but do not wait for\n\t\t// this to complete because streams work via events\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tlet buffer = await provider.readFile(resource);\n\n\t\t\t\t// respect position option\n\t\t\t\tif (options && typeof options.position === 'number') {\n\t\t\t\t\tbuffer = buffer.slice(options.position);\n\t\t\t\t}\n\n\t\t\t\t// respect length option\n\t\t\t\tif (options && typeof options.length === 'number') {\n\t\t\t\t\tbuffer = buffer.slice(0, options.length);\n\t\t\t\t}\n\n\t\t\t\t// Throw if file is too large to load\n\t\t\t\tthis.validateReadFileLimits(resource, buffer.byteLength, options);\n\n\t\t\t\t// End stream with data\n\t\t\t\tstream.end(VSBuffer.wrap(buffer));\n\t\t\t} catch (err) {\n\t\t\t\tstream.error(err);\n\t\t\t\tstream.end();\n\t\t\t}\n\t\t})();\n\n\t\treturn stream;\n\t}\n\n\tprivate async validateReadFile(resource: URI, options?: IReadFileStreamOptions): Promise<IFileStatWithMetadata> {\n\t\tconst stat = await this.resolve(resource, { resolveMetadata: true });\n\n\t\t// Throw if resource is a directory\n\t\tif (stat.isDirectory) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryReadError', \"Unable to read file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Throw if file not modified since (unless disabled)\n\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED && options.etag === stat.etag) {\n\t\t\tthrow new FileOperationError(localize('fileNotModifiedError', \"File not modified since\"), FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, stat.size, options);\n\n\t\treturn stat;\n\t}\n\n\tprivate validateReadFileLimits(resource: URI, size: number, options?: IReadFileStreamOptions): void {\n\t\tif (options?.limits) {\n\t\t\tlet tooLargeErrorResult: FileOperationResult | undefined = undefined;\n\n\t\t\tif (typeof options.limits.memory === 'number' && size > options.limits.memory) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\t\t}\n\n\t\t\tif (typeof options.limits.size === 'number' && size > options.limits.size) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_TOO_LARGE;\n\t\t\t}\n\n\t\t\tif (typeof tooLargeErrorResult === 'number') {\n\t\t\t\tthrow new FileOperationError(localize('fileTooLargeError', \"Unable to read file '{0}' that is too large to open\", this.resourceForError(resource)), tooLargeErrorResult);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync canMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'move', overwrite);\n\t}\n\n\tasync canCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'copy', overwrite);\n\t}\n\n\tprivate async doCanMoveCopy(source: URI, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<Error | true> {\n\t\tif (source.toString() !== target.toString()) {\n\t\t\ttry {\n\t\t\t\tconst sourceProvider = mode === 'move' ? this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source) : await this.withReadProvider(source);\n\t\t\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t\t\tawait this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\t\t\t} catch (error) {\n\t\t\t\treturn error;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync move(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// move\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'move', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'move' ? FileOperation.MOVE : FileOperation.COPY, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync copy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = await this.withReadProvider(source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// copy\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'copy' ? FileOperation.COPY : FileOperation.MOVE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async doMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite: boolean): Promise<'move' | 'copy'> {\n\t\tif (source.toString() === target.toString()) {\n\t\t\treturn mode; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\t// validation\n\t\tconst { exists, isSameResourceWithDifferentPathCase } = await this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\n\t\t// delete as needed (unless target is same resurce with different path case)\n\t\tif (exists && !isSameResourceWithDifferentPathCase && overwrite) {\n\t\t\tawait this.del(target, { recursive: true });\n\t\t}\n\n\t\t// create parent folders\n\t\tawait this.mkdirp(targetProvider, this.getExtUri(targetProvider).providerExtUri.dirname(target));\n\n\t\t// copy source => target\n\t\tif (mode === 'copy') {\n\n\t\t\t// same provider with fast copy: leverage copy() functionality\n\t\t\tif (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n\t\t\t\tawait sourceProvider.copy(source, target, { overwrite });\n\t\t\t}\n\n\t\t\t// when copying via buffer/unbuffered, we have to manually\n\t\t\t// traverse the source if it is a folder and not a file\n\t\t\telse {\n\t\t\t\tconst sourceFile = await this.resolve(source);\n\t\t\t\tif (sourceFile.isDirectory) {\n\t\t\t\t\tawait this.doCopyFolder(sourceProvider, sourceFile, targetProvider, target);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doCopyFile(sourceProvider, source, targetProvider, target);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mode;\n\t\t}\n\n\t\t// move source => target\n\t\telse {\n\n\t\t\t// same provider: leverage rename() functionality\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tawait sourceProvider.rename(source, target, { overwrite });\n\n\t\t\t\treturn mode;\n\t\t\t}\n\n\t\t\t// across providers: copy to target & delete at source\n\t\t\telse {\n\t\t\t\tawait this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', overwrite);\n\t\t\t\tawait this.del(source, { recursive: true });\n\n\t\t\t\treturn 'copy';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doCopyFile(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI): Promise<void> {\n\n\t\t// copy: source (buffered) => target (buffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (buffered) => target (unbuffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeBufferedToUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (buffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbufferedToBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (unbuffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\t}\n\n\tprivate async doCopyFolder(sourceProvider: IFileSystemProvider, sourceFolder: IFileStat, targetProvider: IFileSystemProvider, targetFolder: URI): Promise<void> {\n\n\t\t// create folder in target\n\t\tawait targetProvider.mkdir(targetFolder);\n\n\t\t// create children in target\n\t\tif (Array.isArray(sourceFolder.children)) {\n\t\t\tawait Promises.settled(sourceFolder.children.map(async sourceChild => {\n\t\t\t\tconst targetChild = this.getExtUri(targetProvider).providerExtUri.joinPath(targetFolder, sourceChild.name);\n\t\t\t\tif (sourceChild.isDirectory) {\n\t\t\t\t\treturn this.doCopyFolder(sourceProvider, await this.resolve(sourceChild.resource), targetProvider, targetChild);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.doCopyFile(sourceProvider, sourceChild.resource, targetProvider, targetChild);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async doValidateMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<{ exists: boolean, isSameResourceWithDifferentPathCase: boolean; }> {\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\n\t\t// Check if source is equal or parent to target (requires providers to be the same)\n\t\tif (sourceProvider === targetProvider) {\n\t\t\tconst { providerExtUri, isPathCaseSensitive } = this.getExtUri(sourceProvider);\n\t\t\tif (!isPathCaseSensitive) {\n\t\t\t\tisSameResourceWithDifferentPathCase = providerExtUri.isEqual(source, target);\n\t\t\t}\n\n\t\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError1', \"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\n\t\t\tif (!isSameResourceWithDifferentPathCase && providerExtUri.isEqualOrParent(target, source)) {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError2', \"Unable to move/copy when source '{0}' is parent of target '{1}'.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\t\t}\n\n\t\t// Extra checks if target exists and this is not a rename\n\t\tconst exists = await this.exists(target);\n\t\tif (exists && !isSameResourceWithDifferentPathCase) {\n\n\t\t\t// Bail out if target exists and we are not about to overwrite\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow new FileOperationError(localize('unableToMoveCopyError3', \"Unable to move/copy '{0}' because target '{1}' already exists at destination.\", this.resourceForError(source), this.resourceForError(target)), FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\t}\n\n\t\t\t// Special case: if the target is a parent of the source, we cannot delete\n\t\t\t// it as it would delete the source as well. In this case we have to throw\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tconst { providerExtUri } = this.getExtUri(sourceProvider);\n\t\t\t\tif (providerExtUri.isEqualOrParent(source, target)) {\n\t\t\t\t\tthrow new Error(localize('unableToMoveCopyError4', \"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { exists, isSameResourceWithDifferentPathCase };\n\t}\n\n\tprivate getExtUri(provider: IFileSystemProvider): { providerExtUri: IExtUri, isPathCaseSensitive: boolean; } {\n\t\tconst isPathCaseSensitive = this.isPathCaseSensitive(provider);\n\n\t\treturn {\n\t\t\tproviderExtUri: isPathCaseSensitive ? extUri : extUriIgnorePathCase,\n\t\t\tisPathCaseSensitive\n\t\t};\n\t}\n\n\tprivate isPathCaseSensitive(provider: IFileSystemProvider): boolean {\n\t\treturn !!(provider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t}\n\n\tasync createFolder(resource: URI): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// mkdir recursively\n\t\tawait this.mkdirp(provider, resource);\n\n\t\t// events\n\t\tconst fileStat = await this.resolve(resource, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async mkdirp(provider: IFileSystemProvider, directory: URI): Promise<void> {\n\t\tconst directoriesToCreate: string[] = [];\n\n\t\t// mkdir until we reach root\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\t\twhile (!providerExtUri.isEqual(directory, providerExtUri.dirname(directory))) {\n\t\t\ttry {\n\t\t\t\tconst stat = await provider.stat(directory);\n\t\t\t\tif ((stat.type & FileType.Directory) === 0) {\n\t\t\t\t\tthrow new Error(localize('mkdirExistsError', \"Unable to create folder '{0}' that already exists but is not a directory\", this.resourceForError(directory)));\n\t\t\t\t}\n\n\t\t\t\tbreak; // we have hit a directory that exists -> good\n\t\t\t} catch (error) {\n\n\t\t\t\t// Bubble up any other error that is not file not found\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// Upon error, remember directories that need to be created\n\t\t\t\tdirectoriesToCreate.push(providerExtUri.basename(directory));\n\n\t\t\t\t// Continue up\n\t\t\t\tdirectory = providerExtUri.dirname(directory);\n\t\t\t}\n\t\t}\n\n\t\t// Create directories as needed\n\t\tfor (let i = directoriesToCreate.length - 1; i >= 0; i--) {\n\t\t\tdirectory = providerExtUri.joinPath(directory, directoriesToCreate[i]);\n\n\t\t\ttry {\n\t\t\t\tawait provider.mkdir(directory);\n\t\t\t} catch (error) {\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileExists) {\n\t\t\t\t\t// For mkdirp() we tolerate that the mkdir() call fails\n\t\t\t\t\t// in case the folder already exists. This follows node.js\n\t\t\t\t\t// own implementation of fs.mkdir({ recursive: true }) and\n\t\t\t\t\t// reduces the chances of race conditions leading to errors\n\t\t\t\t\t// if multiple calls try to create the same folders\n\t\t\t\t\t// As such, we only throw an error here if it is other than\n\t\t\t\t\t// the fact that the file already exists.\n\t\t\t\t\t// (see also https://github.com/microsoft/vscode/issues/89834)\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync canDelete(resource: URI, options?: Partial<FileDeleteOptions>): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateDelete(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateDelete(resource: URI, options?: Partial<FileDeleteOptions>): Promise<IFileSystemProvider> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// Validate trash support\n\t\tconst useTrash = !!options?.useTrash;\n\t\tif (useTrash && !(provider.capabilities & FileSystemProviderCapabilities.Trash)) {\n\t\t\tthrow new Error(localize('deleteFailedTrashUnsupported', \"Unable to delete file '{0}' via trash because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate delete\n\t\tconst exists = await this.exists(resource);\n\t\tif (!exists) {\n\t\t\tthrow new FileOperationError(localize('deleteFailedNotFound', \"Unable to delete non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\n\t\t// Validate recursive\n\t\tconst recursive = !!options?.recursive;\n\t\tif (!recursive && exists) {\n\t\t\tconst stat = await this.resolve(resource);\n\t\t\tif (stat.isDirectory && Array.isArray(stat.children) && stat.children.length > 0) {\n\t\t\t\tthrow new Error(localize('deleteFailedNonEmptyFolder', \"Unable to delete non-empty folder '{0}'.\", this.resourceForError(resource)));\n\t\t\t}\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tasync del(resource: URI, options?: Partial<FileDeleteOptions>): Promise<void> {\n\t\tconst provider = await this.doValidateDelete(resource, options);\n\n\t\tconst useTrash = !!options?.useTrash;\n\t\tconst recursive = !!options?.recursive;\n\n\t\t// Delete through provider\n\t\tawait provider.delete(resource, { recursive, useTrash });\n\n\t\t// Events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.DELETE));\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate readonly _onDidFilesChange = this._register(new Emitter<FileChangesEvent>());\n\treadonly onDidFilesChange = this._onDidFilesChange.event;\n\n\tprivate readonly activeWatchers = new Map<string, { disposable: IDisposable, count: number; }>();\n\n\twatch(resource: URI, options: IWatchOptions = { recursive: false, excludes: [] }): IDisposable {\n\t\tlet watchDisposed = false;\n\t\tlet disposeWatch = () => { watchDisposed = true; };\n\n\t\t// Watch and wire in disposable which is async but\n\t\t// check if we got disposed meanwhile and forward\n\t\tthis.doWatch(resource, options).then(disposable => {\n\t\t\tif (watchDisposed) {\n\t\t\t\tdispose(disposable);\n\t\t\t} else {\n\t\t\t\tdisposeWatch = () => dispose(disposable);\n\t\t\t}\n\t\t}, error => this.logService.error(error));\n\n\t\treturn toDisposable(() => disposeWatch());\n\t}\n\n\tasync doWatch(resource: URI, options: IWatchOptions): Promise<IDisposable> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst key = this.toWatchKey(provider, resource, options);\n\n\t\t// Only start watching if we are the first for the given key\n\t\tconst watcher = this.activeWatchers.get(key) || { count: 0, disposable: provider.watch(resource, options) };\n\t\tif (!this.activeWatchers.has(key)) {\n\t\t\tthis.activeWatchers.set(key, watcher);\n\t\t}\n\n\t\t// Increment usage counter\n\t\twatcher.count += 1;\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Unref\n\t\t\twatcher.count--;\n\n\t\t\t// Dispose only when last user is reached\n\t\t\tif (watcher.count === 0) {\n\t\t\t\tdispose(watcher.disposable);\n\t\t\t\tthis.activeWatchers.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate toWatchKey(provider: IFileSystemProvider, resource: URI, options: IWatchOptions): string {\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\n\t\treturn [\n\t\t\tproviderExtUri.getComparisonKey(resource), \t// lowercase path if the provider is case insensitive\n\t\t\tString(options.recursive),\t\t\t\t\t// use recursive: true | false as part of the key\n\t\t\toptions.excludes.join()\t\t\t\t\t\t// use excludes as part of the key\n\t\t].join();\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.activeWatchers.forEach(watcher => dispose(watcher.disposable));\n\t\tthis.activeWatchers.clear();\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate readonly writeQueue = this._register(new ResourceQueue());\n\n\tprivate async doWriteBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, options: IWriteFileOptions | undefined, readableOrStreamOrBufferedStream: VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(async () => {\n\n\t\t\t// open handle\n\t\t\tconst handle = await provider.open(resource, { create: true, unlock: options?.unlock ?? false });\n\n\t\t\t// write into handle until all bytes from buffer have been written\n\t\t\ttry {\n\t\t\t\tif (isReadableStream(readableOrStreamOrBufferedStream) || isReadableBufferedStream(readableOrStreamOrBufferedStream)) {\n\t\t\t\t\tawait this.doWriteStreamBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doWriteReadableBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t\t} finally {\n\n\t\t\t\t// close handle always\n\t\t\t\tawait provider.close(handle);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async doWriteStreamBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, streamOrBufferedStream: VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet posInFile = 0;\n\t\tlet stream: VSBufferReadableStream;\n\n\t\t// Buffered stream: consume the buffer first by writing\n\t\t// it to the target before reading from the stream.\n\t\tif (isReadableBufferedStream(streamOrBufferedStream)) {\n\t\t\tif (streamOrBufferedStream.buffer.length > 0) {\n\t\t\t\tconst chunk = VSBuffer.concat(streamOrBufferedStream.buffer);\n\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\t\tposInFile += chunk.byteLength;\n\t\t\t}\n\n\t\t\t// If the stream has been consumed, return early\n\t\t\tif (streamOrBufferedStream.ended) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstream = streamOrBufferedStream.stream;\n\t\t}\n\n\t\t// Unbuffered stream - just take as is\n\t\telse {\n\t\t\tstream = streamOrBufferedStream;\n\t\t}\n\n\t\treturn new Promise(async (resolve, reject) => {\n\n\t\t\tlistenStream(stream, {\n\t\t\t\tonData: async chunk => {\n\n\t\t\t\t\t// pause stream to perform async write operation\n\t\t\t\t\tstream.pause();\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t}\n\n\t\t\t\t\tposInFile += chunk.byteLength;\n\n\t\t\t\t\t// resume stream now that we have successfully written\n\t\t\t\t\t// run this on the next tick to prevent increasing the\n\t\t\t\t\t// execution stack because resume() may call the event\n\t\t\t\t\t// handler again before finishing.\n\t\t\t\t\tsetTimeout(() => stream.resume());\n\t\t\t\t},\n\t\t\t\tonError: error => reject(error),\n\t\t\t\tonEnd: () => resolve()\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async doWriteReadableBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, readable: VSBufferReadable): Promise<void> {\n\t\tlet posInFile = 0;\n\n\t\tlet chunk: VSBuffer | null;\n\t\twhile ((chunk = readable.read()) !== null) {\n\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\tposInFile += chunk.byteLength;\n\t\t}\n\t}\n\n\tprivate async doWriteBuffer(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, buffer: VSBuffer, length: number, posInFile: number, posInBuffer: number): Promise<void> {\n\t\tlet totalBytesWritten = 0;\n\t\twhile (totalBytesWritten < length) {\n\n\t\t\t// Write through the provider\n\t\t\tconst bytesWritten = await provider.write(handle, posInFile + totalBytesWritten, buffer.buffer, posInBuffer + totalBytesWritten, length - totalBytesWritten);\n\t\t\ttotalBytesWritten += bytesWritten;\n\t\t}\n\t}\n\n\tprivate async doWriteUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options: IWriteFileOptions | undefined, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(() => this.doWriteUnbufferedQueued(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream));\n\t}\n\n\tprivate async doWriteUnbufferedQueued(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options: IWriteFileOptions | undefined, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet buffer: VSBuffer;\n\t\tif (bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer) {\n\t\t\tbuffer = bufferOrReadableOrStreamOrBufferedStream;\n\t\t} else if (isReadableStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await streamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else if (isReadableBufferedStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await bufferedStreamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else {\n\t\t\tbuffer = readableToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t}\n\n\t\t// Write through the provider\n\t\tawait provider.writeFile(resource, buffer.buffer, { create: true, overwrite: true, unlock: options?.unlock ?? false });\n\t}\n\n\tprivate async doPipeBuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeBufferedQueued(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\tlet sourceHandle: number | undefined = undefined;\n\t\tlet targetHandle: number | undefined = undefined;\n\n\t\ttry {\n\n\t\t\t// Open handles\n\t\t\tsourceHandle = await sourceProvider.open(source, { create: false });\n\t\t\ttargetHandle = await targetProvider.open(target, { create: true, unlock: false });\n\n\t\t\tconst buffer = VSBuffer.alloc(this.BUFFER_SIZE);\n\n\t\t\tlet posInFile = 0;\n\t\t\tlet posInBuffer = 0;\n\t\t\tlet bytesRead = 0;\n\t\t\tdo {\n\t\t\t\t// read from source (sourceHandle) at current position (posInFile) into buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\t\tbytesRead = await sourceProvider.read(sourceHandle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\t\t// write into target (targetHandle) at current position (posInFile) from buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) all bytes we read (bytesRead).\n\t\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, buffer, bytesRead, posInFile, posInBuffer);\n\n\t\t\t\tposInFile += bytesRead;\n\t\t\t\tposInBuffer += bytesRead;\n\n\t\t\t\t// when buffer full, fill it again from the beginning\n\t\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\t\tposInBuffer = 0;\n\t\t\t\t}\n\t\t\t} while (bytesRead > 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait Promises.settled([\n\t\t\t\ttypeof sourceHandle === 'number' ? sourceProvider.close(sourceHandle) : Promise.resolve(),\n\t\t\t\ttypeof targetHandle === 'number' ? targetProvider.close(targetHandle) : Promise.resolve(),\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate async doPipeUnbuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeUnbufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn targetProvider.writeFile(target, await sourceProvider.readFile(source), { create: true, overwrite: true, unlock: false });\n\t}\n\n\tprivate async doPipeUnbufferedToBuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeUnbufferedToBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedToBufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\n\t\t// Open handle\n\t\tconst targetHandle = await targetProvider.open(target, { create: true, unlock: false });\n\n\t\t// Read entire buffer from source and write buffered\n\t\ttry {\n\t\t\tconst buffer = await sourceProvider.readFile(source);\n\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, VSBuffer.wrap(buffer), buffer.byteLength, 0, 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait targetProvider.close(targetHandle);\n\t\t}\n\t}\n\n\tprivate async doPipeBufferedToUnbuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\n\t\t// Read buffer via stream buffered\n\t\tconst buffer = await streamToBuffer(this.readFileBuffered(sourceProvider, source, CancellationToken.None));\n\n\t\t// Write buffer into target at once\n\t\tawait this.doWriteUnbuffered(targetProvider, target, undefined, buffer);\n\t}\n\n\tprotected throwIfFileSystemIsReadonly<T extends IFileSystemProvider>(provider: T, resource: URI): T {\n\t\tif (provider.capabilities & FileSystemProviderCapabilities.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate resourceForError(resource: URI): string {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn resource.fsPath;\n\t\t}\n\n\t\treturn resource.toString(true);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { open, close, read, write, fdatasync, Stats, promises } from 'fs';\nimport { promisify } from 'util';\nimport { IDisposable, Disposable, toDisposable, dispose, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { FileSystemProviderCapabilities, IFileChange, IWatchOptions, IStat, FileType, FileDeleteOptions, FileOverwriteOptions, FileWriteOptions, FileOpenOptions, FileSystemProviderErrorCode, createFileSystemProviderError, FileSystemProviderError, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, IFileSystemProviderWithFileFolderCopyCapability, isFileOpenForWriteOptions } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { SymlinkSupport, move, copy, rimraf, RimRafMode, exists, readdir, IDirent } from 'vs/base/node/pfs';\nimport { normalize, basename, dirname } from 'vs/base/common/path';\nimport { joinPath } from 'vs/base/common/resources';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { retry, ThrottledDelayer } from 'vs/base/common/async';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\nimport { localize } from 'vs/nls';\nimport { IDiskFileChange, toFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { FileWatcher as UnixWatcherService } from 'vs/platform/files/node/watcher/unix/watcherService';\nimport { FileWatcher as WindowsWatcherService } from 'vs/platform/files/node/watcher/win32/watcherService';\nimport { FileWatcher as NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcherService';\nimport { FileWatcher as NodeJSWatcherService } from 'vs/platform/files/node/watcher/nodejs/watcherService';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ReadableStreamEvents, newWriteableStream } from 'vs/base/common/stream';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { insert } from 'vs/base/common/arrays';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport interface IWatcherOptions {\n\tpollingInterval?: number;\n\tusePolling: boolean | string[];\n}\n\nexport interface IDiskFileSystemProviderOptions {\n\tbufferSize?: number;\n\twatcher?: IWatcherOptions;\n}\n\nexport class DiskFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly BUFFER_SIZE = this.options?.bufferSize || 64 * 1024;\n\n\tconstructor(\n\t\tprivate readonly logService: ILogService,\n\t\tprivate readonly options?: IDiskFileSystemProviderOptions\n\t) {\n\t\tsuper();\n\t}\n\n\t//#region File Capabilities\n\n\tonDidChangeCapabilities: Event<void> = Event.None;\n\n\tprotected _capabilities: FileSystemProviderCapabilities | undefined;\n\tget capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._capabilities) {\n\t\t\tthis._capabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\t\tFileSystemProviderCapabilities.FileFolderCopy |\n\t\t\t\tFileSystemProviderCapabilities.FileWriteUnlock;\n\n\t\t\tif (isLinux) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\t\t}\n\n\t\treturn this._capabilities;\n\t}\n\n\t//#endregion\n\n\t//#region File Metadata Resolving\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(this.toFilePath(resource)); // cannot use fs.stat() here to support links properly\n\n\t\t\treturn {\n\t\t\t\ttype: this.toType(stat, symbolicLink),\n\t\t\t\tctime: stat.birthtime.getTime(), // intentionally not using ctime here, we want the creation time\n\t\t\t\tmtime: stat.mtime.getTime(),\n\t\t\t\tsize: stat.size\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\ttry {\n\t\t\tconst children = await readdir(this.toFilePath(resource), { withFileTypes: true });\n\n\t\t\tconst result: [string, FileType][] = [];\n\t\t\tawait Promise.all(children.map(async child => {\n\t\t\t\ttry {\n\t\t\t\t\tlet type: FileType;\n\t\t\t\t\tif (child.isSymbolicLink()) {\n\t\t\t\t\t\ttype = (await this.stat(joinPath(resource, child.name))).type; // always resolve target the link points to if any\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = this.toType(child);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.push([child.name, type]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore errors for individual entries that can arise from permission denied\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate toType(entry: Stats | IDirent, symbolicLink?: { dangling: boolean }): FileType {\n\n\t\t// Signal file type by checking for file / directory, except:\n\t\t// - symbolic links pointing to non-existing files are FileType.Unknown\n\t\t// - files that are neither file nor directory are FileType.Unknown\n\t\tlet type: FileType;\n\t\tif (symbolicLink?.dangling) {\n\t\t\ttype = FileType.Unknown;\n\t\t} else if (entry.isFile()) {\n\t\t\ttype = FileType.File;\n\t\t} else if (entry.isDirectory()) {\n\t\t\ttype = FileType.Directory;\n\t\t} else {\n\t\t\ttype = FileType.Unknown;\n\t\t}\n\n\t\t// Always signal symbolic link as file type additionally\n\t\tif (symbolicLink) {\n\t\t\ttype |= FileType.SymbolicLink;\n\t\t}\n\n\t\treturn type;\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\treturn await promises.readFile(filePath);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\treadFileIntoStream(this, resource, stream, data => data.buffer, {\n\t\t\t...opts,\n\t\t\tbufferSize: this.BUFFER_SIZE\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tlet handle: number | undefined = undefined;\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Validate target unless { create: true, overwrite: true }\n\t\t\tif (!opts.create || !opts.overwrite) {\n\t\t\t\tconst fileExists = await exists(filePath);\n\t\t\t\tif (fileExists) {\n\t\t\t\t\tif (!opts.overwrite) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileExists', \"File already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!opts.create) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileNotExists', \"File does not exist\"), FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Open\n\t\t\thandle = await this.open(resource, { create: true, unlock: opts.unlock });\n\n\t\t\t// Write content at once\n\t\t\tawait this.write(handle, 0, content, 0, content.byteLength);\n\t\t} catch (error) {\n\t\t\tthrow await this.toFileSystemProviderWriteError(resource, error);\n\t\t} finally {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\tawait this.close(handle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readonly mapHandleToPos: Map<number, number> = new Map();\n\n\tprivate readonly writeHandles = new Map<number, URI>();\n\tprivate canFlush: boolean = true;\n\n\tasync open(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Determine wether to unlock the file (write only)\n\t\t\tif (isFileOpenForWriteOptions(opts) && opts.unlock) {\n\t\t\t\ttry {\n\t\t\t\t\tconst { stat } = await SymlinkSupport.stat(filePath);\n\t\t\t\t\tif (!(stat.mode & 0o200 /* File mode indicating writable by owner */)) {\n\t\t\t\t\t\tawait promises.chmod(filePath, stat.mode | 0o200);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore any errors here and try to just write\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Determine file flags for opening (read vs write)\n\t\t\tlet flags: string | undefined = undefined;\n\t\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\t\tif (isWindows) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// On Windows and if the file exists, we use a different strategy of saving the file\n\t\t\t\t\t\t// by first truncating the file and then writing with r+ flag. This helps to save hidden files on Windows\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/931) and prevent removing alternate data streams\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/6363)\n\t\t\t\t\t\tawait promises.truncate(filePath, 0);\n\n\t\t\t\t\t\t// After a successful truncate() the flag can be set to 'r+' which will not truncate.\n\t\t\t\t\t\tflags = 'r+';\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\t\t\t\tthis.logService.trace(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// we take opts.create as a hint that the file is opened for writing\n\t\t\t\t// as such we use 'w' to truncate an existing or create the\n\t\t\t\t// file otherwise. we do not allow reading.\n\t\t\t\tif (!flags) {\n\t\t\t\t\tflags = 'w';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// otherwise we assume the file is opened for reading\n\t\t\t\t// as such we use 'r' to neither truncate, nor create\n\t\t\t\t// the file.\n\t\t\t\tflags = 'r';\n\t\t\t}\n\n\t\t\tconst handle = await promisify(open)(filePath, flags);\n\n\t\t\t// remember this handle to track file position of the handle\n\t\t\t// we init the position to 0 since the file descriptor was\n\t\t\t// just created and the position was not moved so far (see\n\t\t\t// also http://man7.org/linux/man-pages/man2/open.2.html -\n\t\t\t// \"The file offset is set to the beginning of the file.\")\n\t\t\tthis.mapHandleToPos.set(handle, 0);\n\n\t\t\t// remember that this handle was used for writing\n\t\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\t\tthis.writeHandles.set(handle, resource);\n\t\t\t}\n\n\t\t\treturn handle;\n\t\t} catch (error) {\n\t\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\t\tthrow await this.toFileSystemProviderWriteError(resource, error);\n\t\t\t} else {\n\t\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync close(fd: number): Promise<void> {\n\t\ttry {\n\n\t\t\t// remove this handle from map of positions\n\t\t\tthis.mapHandleToPos.delete(fd);\n\n\t\t\t// if a handle is closed that was used for writing, ensure\n\t\t\t// to flush the contents to disk if possible.\n\t\t\tif (this.writeHandles.delete(fd) && this.canFlush) {\n\t\t\t\ttry {\n\t\t\t\t\tawait promisify(fdatasync)(fd);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t\t// In that case we disable flushing and log the error to our logger\n\t\t\t\t\tthis.canFlush = false;\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await promisify(close)(fd);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesRead: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(read)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesRead = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesRead = result.bytesRead;\n\t\t\t}\n\n\t\t\treturn bytesRead;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesRead);\n\t\t}\n\t}\n\n\tprivate normalizePos(fd: number, pos: number): number | null {\n\n\t\t// when calling fs.read/write we try to avoid passing in the \"pos\" argument and\n\t\t// rather prefer to pass in \"null\" because this avoids an extra seek(pos)\n\t\t// call that in some cases can even fail (e.g. when opening a file over FTP -\n\t\t// see https://github.com/microsoft/vscode/issues/73884).\n\t\t//\n\t\t// as such, we compare the passed in position argument with our last known\n\t\t// position for the file descriptor and use \"null\" if they match.\n\t\tif (pos === this.mapHandleToPos.get(fd)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\tprivate updatePos(fd: number, pos: number | null, bytesLength: number | null): void {\n\t\tconst lastKnownPos = this.mapHandleToPos.get(fd);\n\t\tif (typeof lastKnownPos === 'number') {\n\n\t\t\t// pos !== null signals that previously a position was used that is\n\t\t\t// not null. node.js documentation explains, that in this case\n\t\t\t// the internal file pointer is not moving and as such we do not move\n\t\t\t// our position pointer.\n\t\t\t//\n\t\t\t// Docs: \"If position is null, data will be read from the current file position,\n\t\t\t// and the file position will be updated. If position is an integer, the file position\n\t\t\t// will remain unchanged.\"\n\t\t\tif (typeof pos === 'number') {\n\t\t\t\t// do not modify the position\n\t\t\t}\n\n\t\t\t// bytesLength = number is a signal that the read/write operation was\n\t\t\t// successful and as such we need to advance the position in the Map\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/read.2.html):\n\t\t\t// \"On files that support seeking, the read operation commences at the\n\t\t\t// file offset, and the file offset is incremented by the number of\n\t\t\t// bytes read.\"\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/write.2.html):\n\t\t\t// \"For a seekable file (i.e., one to which lseek(2) may be applied, for\n\t\t\t// example, a regular file) writing takes place at the file offset, and\n\t\t\t// the file offset is incremented by the number of bytes actually\n\t\t\t// written.\"\n\t\t\telse if (typeof bytesLength === 'number') {\n\t\t\t\tthis.mapHandleToPos.set(fd, lastKnownPos + bytesLength);\n\t\t\t}\n\n\t\t\t// bytesLength = null signals an error in the read/write operation\n\t\t\t// and as such we drop the handle from the Map because the position\n\t\t\t// is unspecificed at this point.\n\t\t\telse {\n\t\t\t\tthis.mapHandleToPos.delete(fd);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\t// we know at this point that the file to write to is truncated and thus empty\n\t\t// if the write now fails, the file remains empty. as such we really try hard\n\t\t// to ensure the write succeeds by retrying up to three times.\n\t\treturn retry(() => this.doWrite(fd, pos, data, offset, length), 100 /* ms delay */, 3 /* retries */);\n\t}\n\n\tprivate async doWrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesWritten: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(write)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesWritten = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesWritten = result.bytesWritten;\n\t\t\t}\n\n\t\t\treturn bytesWritten;\n\t\t} catch (error) {\n\t\t\tthrow await this.toFileSystemProviderWriteError(this.writeHandles.get(fd), error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesWritten);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync mkdir(resource: URI): Promise<void> {\n\t\ttry {\n\t\t\tawait promises.mkdir(this.toFilePath(resource));\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tawait this.doDelete(filePath, opts);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprotected async doDelete(filePath: string, opts: FileDeleteOptions): Promise<void> {\n\t\tif (opts.recursive) {\n\t\t\tawait rimraf(filePath, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tawait promises.unlink(filePath);\n\t\t}\n\t}\n\n\tasync rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'move', opts.overwrite);\n\n\t\t\t// Move\n\t\t\tawait move(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('moveError', \"Unable to move '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync copy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'copy', opts.overwrite);\n\n\t\t\t// Copy\n\t\t\tawait copy(fromFilePath, toFilePath, { preserveSymlinks: true });\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('copyError', \"Unable to copy '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async validateTargetDeleted(from: URI, to: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\t\tconst isPathCaseSensitive = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\tif (!isPathCaseSensitive) {\n\t\t\tisSameResourceWithDifferentPathCase = isEqual(fromFilePath, toFilePath, true /* ignore case */);\n\t\t}\n\n\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorPathCase', \"'File cannot be copied to same path with different path case\"), FileSystemProviderErrorCode.FileExists);\n\t\t}\n\n\t\t// handle existing target (unless this is a case change)\n\t\tif (!isSameResourceWithDifferentPathCase && await exists(toFilePath)) {\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorExists', \"File at target already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t}\n\n\t\t\t// Delete target\n\t\t\tawait this.delete(to, { recursive: true, useTrash: false });\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate readonly _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate readonly _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate recursiveWatcher: WindowsWatcherService | UnixWatcherService | NsfwWatcherService | undefined;\n\tprivate readonly recursiveFoldersToWatch: { path: string, excludes: string[] }[] = [];\n\tprivate recursiveWatchRequestDelayer = this._register(new ThrottledDelayer<void>(0));\n\n\tprivate recursiveWatcherLogLevelListener: IDisposable | undefined;\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tif (opts.recursive) {\n\t\t\treturn this.watchRecursive(resource, opts.excludes);\n\t\t}\n\n\t\treturn this.watchNonRecursive(resource); // TODO@bpasero ideally the same watcher can be used in both cases\n\t}\n\n\tprivate watchRecursive(resource: URI, excludes: string[]): IDisposable {\n\n\t\t// Add to list of folders to watch recursively\n\t\tconst folderToWatch = { path: this.toFilePath(resource), excludes };\n\t\tconst remove = insert(this.recursiveFoldersToWatch, folderToWatch);\n\n\t\t// Trigger update\n\t\tthis.refreshRecursiveWatchers();\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Remove from list of folders to watch recursively\n\t\t\tremove();\n\n\t\t\t// Trigger update\n\t\t\tthis.refreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate refreshRecursiveWatchers(): void {\n\n\t\t// Buffer requests for recursive watching to decide on right watcher\n\t\t// that supports potentially watching more than one folder at once\n\t\tthis.recursiveWatchRequestDelayer.trigger(async () => {\n\t\t\tthis.doRefreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate doRefreshRecursiveWatchers(): void {\n\n\t\t// Reuse existing\n\t\tif (this.recursiveWatcher instanceof NsfwWatcherService) {\n\t\t\tthis.recursiveWatcher.setFolders(this.recursiveFoldersToWatch);\n\t\t}\n\n\t\t// Create new\n\t\telse {\n\n\t\t\t// Dispose old\n\t\t\tdispose(this.recursiveWatcher);\n\t\t\tthis.recursiveWatcher = undefined;\n\n\t\t\t// Create new if we actually have folders to watch\n\t\t\tif (this.recursiveFoldersToWatch.length > 0) {\n\t\t\t\tlet watcherImpl: {\n\t\t\t\t\tnew(\n\t\t\t\t\t\tfolders: { path: string, excludes: string[] }[],\n\t\t\t\t\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\t\t\t\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\t\t\t\t\tverboseLogging: boolean,\n\t\t\t\t\t\twatcherOptions?: IWatcherOptions\n\t\t\t\t\t): WindowsWatcherService | UnixWatcherService | NsfwWatcherService\n\t\t\t\t};\n\n\t\t\t\tlet watcherOptions: IWatcherOptions | undefined = undefined;\n\n\t\t\t\t// requires a polling watcher\n\t\t\t\tif (this.options?.watcher?.usePolling) {\n\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\twatcherOptions = this.options?.watcher;\n\t\t\t\t}\n\n\t\t\t\t// Single Folder Watcher\n\t\t\t\telse {\n\t\t\t\t\tif (this.recursiveFoldersToWatch.length === 1) {\n\t\t\t\t\t\tif (isWindows) {\n\t\t\t\t\t\t\twatcherImpl = WindowsWatcherService;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Multi Folder Watcher\n\t\t\t\t\telse {\n\t\t\t\t\t\twatcherImpl = NsfwWatcherService;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Create and start watching\n\t\t\t\tthis.recursiveWatcher = new watcherImpl(\n\t\t\t\t\tthis.recursiveFoldersToWatch,\n\t\t\t\t\tevent => this._onDidChangeFile.fire(toFileChanges(event)),\n\t\t\t\t\tmsg => {\n\t\t\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t\t\t},\n\t\t\t\t\tthis.logService.getLevel() === LogLevel.Trace,\n\t\t\t\t\twatcherOptions\n\t\t\t\t);\n\n\t\t\t\tif (!this.recursiveWatcherLogLevelListener) {\n\t\t\t\t\tthis.recursiveWatcherLogLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\t\t\t\tif (this.recursiveWatcher) {\n\t\t\t\t\t\t\tthis.recursiveWatcher.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate watchNonRecursive(resource: URI): IDisposable {\n\t\tconst watcherService = new NodeJSWatcherService(\n\t\t\tthis.toFilePath(resource),\n\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\tmsg => {\n\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t}\n\n\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t},\n\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t);\n\n\t\tconst logLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\twatcherService.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t});\n\n\t\treturn combinedDisposable(watcherService, logLevelListener);\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprotected toFilePath(resource: URI): string {\n\t\treturn normalize(resource.fsPath);\n\t}\n\n\tprivate toFileSystemProviderError(error: NodeJS.ErrnoException): FileSystemProviderError {\n\t\tif (error instanceof FileSystemProviderError) {\n\t\t\treturn error; // avoid double conversion\n\t\t}\n\n\t\tlet code: FileSystemProviderErrorCode;\n\t\tswitch (error.code) {\n\t\t\tcase 'ENOENT':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\tbreak;\n\t\t\tcase 'EISDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'ENOTDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'EEXIST':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileExists;\n\t\t\t\tbreak;\n\t\t\tcase 'EPERM':\n\t\t\tcase 'EACCES':\n\t\t\t\tcode = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcode = FileSystemProviderErrorCode.Unknown;\n\t\t}\n\n\t\treturn createFileSystemProviderError(error, code);\n\t}\n\n\tprivate async toFileSystemProviderWriteError(resource: URI | undefined, error: NodeJS.ErrnoException): Promise<FileSystemProviderError> {\n\t\tlet fileSystemProviderWriteError = this.toFileSystemProviderError(error);\n\n\t\t// If the write error signals permission issues, we try\n\t\t// to read the file's mode to see if the file is write\n\t\t// locked.\n\t\tif (resource && fileSystemProviderWriteError.code === FileSystemProviderErrorCode.NoPermissions) {\n\t\t\ttry {\n\t\t\t\tconst { stat } = await SymlinkSupport.stat(this.toFilePath(resource));\n\t\t\t\tif (!(stat.mode & 0o200 /* File mode indicating writable by owner */)) {\n\t\t\t\t\tfileSystemProviderWriteError = createFileSystemProviderError(error, FileSystemProviderErrorCode.FileWriteLocked);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error); // ignore - return original error\n\t\t\t}\n\t\t}\n\n\t\treturn fileSystemProviderWriteError;\n\t}\n\n\t//#endregion\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tdispose(this.recursiveWatcher);\n\t\tthis.recursiveWatcher = undefined;\n\n\t\tdispose(this.recursiveWatcherLogLevelListener);\n\t\tthis.recursiveWatcherLogLevelListener = undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IProductConfiguration } from 'vs/base/common/product';\n\nexport const IProductService = createDecorator<IProductService>('productService');\n\nexport interface IProductService extends Readonly<IProductConfiguration> {\n\n\treadonly _serviceBrand: undefined;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Types from 'vs/base/common/types';\nimport * as Assert from 'vs/base/common/assert';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate readonly data = new Map<string, any>();\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.has(id), 'There is already an extension with this id');\n\n\t\tthis.data.set(id, data);\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.has(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data.get(id) || null;\n\t}\n}\n\nexport const Registry: IRegistry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as types from 'vs/base/common/types';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidUpdateConfiguration: Event<string[]>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\t/**\n\t * Application specific configuration, which can be configured only in local user settings.\n\t */\n\tAPPLICATION = 1,\n\t/**\n\t * Machine specific configuration, which can be configured only in local and remote user settings.\n\t */\n\tMACHINE,\n\t/**\n\t * Window specific configuration, which can be configured in the user or workspace settings.\n\t */\n\tWINDOW,\n\t/**\n\t * Resource specific configuration, which can be configured in the user, workspace or folder settings.\n\t */\n\tRESOURCE,\n\t/**\n\t * Resource specific configuration that can be configured in language specific settings\n\t */\n\tLANGUAGE_OVERRIDABLE,\n\t/**\n\t * Machine specific configuration that can also be configured in workspace or folder settings.\n\t */\n\tMACHINE_OVERRIDABLE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\n\tscope?: ConfigurationScope;\n\n\t/**\n\t * When restricted, value of this configuration will be read only from trusted sources.\n\t * For eg., If the workspace is not trusted, then the value of this configuration is not read from workspace settings file.\n\t */\n\trestricted?: boolean;\n\n\tincluded?: boolean;\n\n\ttags?: string[];\n\n\t/**\n\t * When enabled this setting is ignored during sync and user can override this.\n\t */\n\tignoreSync?: boolean;\n\n\t/**\n\t * When enabled this setting is ignored during sync and user cannot override this.\n\t */\n\tdisallowSyncIgnore?: boolean;\n\n\tenumItemLabels?: string[];\n}\n\nexport interface IConfigurationExtensionInfo {\n\tid: string;\n\trestrictedConfigurations?: string[];\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: { [path: string]: IConfigurationPropertySchema; };\n\tallOf?: IConfigurationNode[];\n\tscope?: ConfigurationScope;\n\textensionInfo?: IConfigurationExtensionInfo;\n}\n\nexport const allSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const machineSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\n\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\n\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly defaultValues: IStringDictionary<any>;\n\tprivate readonly defaultLanguageConfigurationOverridesNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly excludedConfigurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly resourceLanguageSettingsSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers = new Set<string>();\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration: Emitter<string[]> = new Emitter<string[]>();\n\treadonly onDidUpdateConfiguration: Event<string[]> = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.defaultValues = {};\n\t\tthis.defaultLanguageConfigurationOverridesNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n\t\tthis.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate, configuration.extensionInfo)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t});\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tthis.removeFromSchema(key, configuration.properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic registerDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst overrideIdentifiers: string[] = [];\n\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration) {\n\t\t\t\tproperties.push(key);\n\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tthis.defaultValues[key] = { ...(this.defaultValues[key] || {}), ...defaultConfiguration[key] };\n\t\t\t\t\tconst property: IConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: this.defaultValues[key],\n\t\t\t\t\t\tdescription: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: resourceLanguageSettingsSchemaId\n\t\t\t\t\t};\n\t\t\t\t\toverrideIdentifiers.push(overrideIdentifierFromKey(key));\n\t\t\t\t\tthis.configurationProperties[key] = property;\n\t\t\t\t\tthis.defaultLanguageConfigurationOverridesNode.properties![key] = property;\n\t\t\t\t} else {\n\t\t\t\t\tthis.defaultValues[key] = defaultConfiguration[key];\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.registerOverrideIdentifiers(overrideIdentifiers);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tdelete this.defaultValues[key];\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tdelete this.defaultLanguageConfigurationOverridesNode.properties![key];\n\t\t\t\t} else {\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.updateOverridePropertyPatternKey();\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tfor (const overrideIdentifier of overrideIdentifiers) {\n\t\t\tthis.overrideIdentifiers.add(overrideIdentifier);\n\t\t}\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, extensionInfo?: IConfigurationExtensionInfo, scope: ConfigurationScope = ConfigurationScope.WINDOW): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (validate && validateProperty(key)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst property = properties[key];\n\n\t\t\t\t// update default value\n\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\n\t\t\t\t// update scope\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t\tproperty.restricted = types.isUndefinedOrNull(property.restricted) ? !!extensionInfo?.restrictedConfigurations?.includes(key) : property.restricted;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tif (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n\t\t\t\t\t// If not set, default deprecationMessage to the markdown source\n\t\t\t\t\tproperties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, extensionInfo, scope));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tconst register = (configuration: IConfigurationNode) => {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tthis.updateSchema(key, properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t};\n\t\tregister(configuration);\n\t}\n\n\tprivate updateSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tallSettings.properties[key] = property;\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tapplicationSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tmachineSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tmachineOverridableSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\twindowSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tthis.resourceLanguageSettingsSchema.properties![key] = property;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate removeFromSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tdelete allSettings.properties[key];\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tdelete machineSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tdelete machineOverridableSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tfor (const overrideIdentifier of this.overrideIdentifiers.values()) {\n\t\t\tconst overrideIdentifierProperty = `[${overrideIdentifier}]`;\n\t\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t};\n\t\t\tthis.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n\t\t\tallSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tapplicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\twindowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tresourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate updatePropertyDefaultValue(key: string, property: IConfigurationPropertySchema): void {\n\t\tlet defaultValue = this.defaultValues[key];\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = property.default;\n\t\t}\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = getDefaultValue(property.type);\n\t\t}\n\t\tproperty.default = defaultValue;\n\t}\n}\n\nconst OVERRIDE_PROPERTY = '\\\\[.*\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\n\nexport function overrideIdentifierFromKey(key: string): string {\n\treturn key.substring(1, key.length - 1);\n}\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (!property.trim()) {\n\t\treturn nls.localize('config.property.empty', \"Cannot register an empty property\");\n\t}\n\tif (OVERRIDE_PROPERTY_PATTERN.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): [string, ConfigurationScope | undefined][] {\n\tconst scopes: [string, ConfigurationScope | undefined][] = [];\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes.push([key, configurationProperties[key].scope]);\n\t}\n\tscopes.push(['launch', ConfigurationScope.RESOURCE]);\n\tscopes.push(['task', ConfigurationScope.RESOURCE]);\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from 'vs/base/common/objects';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions, OVERRIDE_PROPERTY_PATTERN, overrideIdentifierFromKey } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tUSER_LOCAL,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.USER_LOCAL: return 'USER_LOCAL';\n\t\tcase ConfigurationTarget.USER_REMOTE: return 'USER_REMOTE';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChange {\n\tkeys: string[];\n\toverrides: [string, string[]][];\n}\n\nexport interface IConfigurationChangeEvent {\n\n\treadonly source: ConfigurationTarget;\n\treadonly affectedKeys: string[];\n\treadonly change: IConfigurationChange;\n\n\taffectsConfiguration(configuration: string, overrides?: IConfigurationOverrides): boolean;\n\n\t// Following data is used for telemetry\n\treadonly sourceConfig: any;\n}\n\nexport interface IConfigurationValue<T> {\n\n\treadonly defaultValue?: T;\n\treadonly userValue?: T;\n\treadonly userLocalValue?: T;\n\treadonly userRemoteValue?: T;\n\treadonly workspaceValue?: T;\n\treadonly workspaceFolderValue?: T;\n\treadonly memoryValue?: T;\n\treadonly value?: T;\n\n\treadonly default?: { value?: T, override?: T };\n\treadonly user?: { value?: T, override?: T };\n\treadonly userLocal?: { value?: T, override?: T };\n\treadonly userRemote?: { value?: T, override?: T };\n\treadonly workspace?: { value?: T, override?: T };\n\treadonly workspaceFolder?: { value?: T, override?: T };\n\treadonly memory?: { value?: T, override?: T };\n\n\treadonly overrideIdentifiers?: string[];\n}\n\nexport interface IConfigurationService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): IConfigurationValue<T>;\n\n\treloadConfiguration(target?: ConfigurationTarget | IWorkspaceFolder): Promise<void>;\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tkeys: string[];\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: [UriComponents, IConfigurationModel][];\n}\n\nexport interface IConfigurationCompareResult {\n\tadded: string[];\n\tremoved: string[];\n\tupdated: string[];\n\toverrides: [string, string[]][];\n}\n\nexport function compare(from: IConfigurationModel | undefined, to: IConfigurationModel | undefined): IConfigurationCompareResult {\n\tconst added = to\n\t\t? from ? to.keys.filter(key => from.keys.indexOf(key) === -1) : [...to.keys]\n\t\t: [];\n\tconst removed = from\n\t\t? to ? from.keys.filter(key => to.keys.indexOf(key) === -1) : [...from.keys]\n\t\t: [];\n\tconst updated: string[] = [];\n\n\tif (to && from) {\n\t\tfor (const key of from.keys) {\n\t\t\tif (to.keys.indexOf(key) !== -1) {\n\t\t\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\t\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\t\tupdated.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst overrides: [string, string[]][] = [];\n\tconst byOverrideIdentifier = (overrides: IOverrides[]): IStringDictionary<IOverrides> => {\n\t\tconst result: IStringDictionary<IOverrides> = {};\n\t\tfor (const override of overrides) {\n\t\t\tfor (const identifier of override.identifiers) {\n\t\t\t\tresult[keyFromOverrideIdentifier(identifier)] = override;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\tconst toOverridesByIdentifier: IStringDictionary<IOverrides> = to ? byOverrideIdentifier(to.overrides) : {};\n\tconst fromOverridesByIdentifier: IStringDictionary<IOverrides> = from ? byOverrideIdentifier(from.overrides) : {};\n\n\tif (Object.keys(toOverridesByIdentifier).length) {\n\t\tfor (const key of added) {\n\t\t\tconst override = toOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\tif (Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of removed) {\n\t\t\tconst override = fromOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (Object.keys(toOverridesByIdentifier).length && Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of updated) {\n\t\t\tconst fromOverride = fromOverridesByIdentifier[key];\n\t\t\tconst toOverride = toOverridesByIdentifier[key];\n\t\t\tif (fromOverride && toOverride) {\n\t\t\t\tconst result = compare({ contents: fromOverride.contents, keys: fromOverride.keys, overrides: [] }, { contents: toOverride.contents, keys: toOverride.keys, overrides: [] });\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), [...result.added, ...result.removed, ...result.updated]]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated, overrides };\n}\n\nexport function toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\tconst overrides: IOverrides[] = [];\n\tfor (const key of Object.keys(raw)) {\n\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\tconst overrideRaw: any = {};\n\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t}\n\t\t\toverrides.push({\n\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\tkeys: Object.keys(overrideRaw),\n\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t});\n\t\t}\n\t}\n\treturn overrides;\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object' && curr !== null) {\n\t\ttry {\n\t\t\tcurr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n\t\t} catch (e) {\n\t\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t\t}\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key !== '__proto__') {\n\t\t\tif (key in base) {\n\t\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t\t} else if (overwrite) {\n\t\t\t\t\tbase[key] = add[key];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport function getConfigurationKeys(): string[] {\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(properties);\n}\n\nexport function getDefaultValues(): any {\n\tconst valueTreeRoot: any = Object.create(null);\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\n\tfor (let key in properties) {\n\t\tlet value = properties[key].default;\n\t\taddToValueTree(valueTreeRoot, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t}\n\n\treturn valueTreeRoot;\n}\n\nexport function keyFromOverrideIdentifier(overrideIdentifier: string): string {\n\treturn `[${overrideIdentifier}]`;\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.userValue !== 'undefined' || typeof setting.workspaceValue !== 'undefined' || typeof setting.workspaceFolderValue !== 'undefined') {\n\t\treturn setting.value!;\n\t} else if (typeof legacySetting.userValue !== 'undefined' || typeof legacySetting.workspaceValue !== 'undefined' || typeof legacySetting.workspaceFolderValue !== 'undefined') {\n\t\treturn legacySetting.value!;\n\t} else {\n\t\treturn setting.defaultValue!;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as json from 'vs/base/common/json';\nimport { ResourceMap, getOrSet } from 'vs/base/common/map';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { OVERRIDE_PROPERTY_PATTERN, ConfigurationScope, IConfigurationRegistry, Extensions, IConfigurationPropertySchema, overrideIdentifierFromKey } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IOverrides, addToValueTree, toValuesTree, IConfigurationModel, getConfigurationValue, IConfigurationOverrides, IConfigurationData, getDefaultValues, getConfigurationKeys, removeFromValueTree, toOverrides, IConfigurationValue, ConfigurationTarget, compare, IConfigurationChangeEvent, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IExtUri } from 'vs/base/common/resources';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\n\tconstructor(\n\t\tprivate _contents: any = {},\n\t\tprivate _keys: string[] = [],\n\t\tprivate _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\tgetOverrideValue<V>(section: string | undefined, overrideIdentifier: string): V | undefined {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n\t\treturn overrideContents\n\t\t\t? section ? getConfigurationValue<any>(overrideContents, section) : overrideContents\n\t\t\t: undefined;\n\t}\n\n\tgetKeysForOverrideIdentifier(identifier: string): string[] {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.keys;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents: any = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents, this.keys, this.overrides);\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.contents;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor() {\n\t\tconst contents = getDefaultValues();\n\t\tconst keys = getConfigurationKeys();\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\t\tkeys: Object.keys(contents[key]),\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport interface ConfigurationParseOptions {\n\tscopes: ConfigurationScope[] | undefined;\n\tskipRestricted?: boolean;\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _raw: any = null;\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _restrictedConfigurations: string[] = [];\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget restrictedConfigurations(): string[] {\n\t\treturn this._restrictedConfigurations;\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parse(content: string | null | undefined, options?: ConfigurationParseOptions): void {\n\t\tif (!types.isUndefinedOrNull(content)) {\n\t\t\tconst raw = this.doParseContent(content);\n\t\t\tthis.parseRaw(raw, options);\n\t\t}\n\t}\n\n\tpublic reparse(options: ConfigurationParseOptions): void {\n\t\tif (this._raw) {\n\t\t\tthis.parseRaw(this._raw, options);\n\t\t}\n\t}\n\n\tpublic parseRaw(raw: any, options?: ConfigurationParseOptions): void {\n\t\tthis._raw = raw;\n\t\tconst { contents, keys, overrides, restricted } = this.doParseRaw(raw, options);\n\t\tthis._configurationModel = new ConfigurationModel(contents, keys, overrides);\n\t\tthis._restrictedConfigurations = restricted || [];\n\t}\n\n\tprivate doParseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected doParseRaw(raw: any, options?: ConfigurationParseOptions): IConfigurationModel & { restricted?: string[] } {\n\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\tconst filtered = this.filter(raw, configurationProperties, true, options);\n\t\traw = filtered.raw;\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides: IOverrides[] = toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides, restricted: filtered.restricted };\n\t}\n\n\tprivate filter(properties: any, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema | undefined }, filterOverriddenProperties: boolean, options?: ConfigurationParseOptions): { raw: {}, restricted: string[] } {\n\t\tif (!options?.scopes && !options?.skipRestricted) {\n\t\t\treturn { raw: properties, restricted: [] };\n\t\t}\n\t\tconst raw: any = {};\n\t\tconst restricted: string[] = [];\n\t\tfor (let key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && filterOverriddenProperties) {\n\t\t\t\tconst result = this.filter(properties[key], configurationProperties, false, options);\n\t\t\t\traw[key] = result.raw;\n\t\t\t\trestricted.push(...result.restricted);\n\t\t\t} else {\n\t\t\t\tconst propertySchema = configurationProperties[key];\n\t\t\t\tconst scope = propertySchema ? typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW : undefined;\n\t\t\t\tif (propertySchema?.restricted) {\n\t\t\t\t\trestricted.push(key);\n\t\t\t\t}\n\t\t\t\t// Load unregistered configurations always.\n\t\t\t\tif (scope === undefined || options.scopes === undefined || options.scopes.includes(scope)) {\n\t\t\t\t\tif (!(options.skipRestricted && propertySchema?.restricted)) {\n\t\t\t\t\t\traw[key] = properties[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { raw, restricted };\n\t}\n\n}\n\nexport class UserSettings extends Disposable {\n\n\tprivate readonly parser: ConfigurationModelParser;\n\tprivate readonly parseOptions: ConfigurationParseOptions;\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly userSettingsResource: URI,\n\t\tprivate readonly scopes: ConfigurationScope[] | undefined,\n\t\textUri: IExtUri,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.parser = new ConfigurationModelParser(this.userSettingsResource.toString());\n\t\tthis.parseOptions = { scopes: this.scopes };\n\t\tthis._register(this.fileService.watch(extUri.dirname(this.userSettingsResource)));\n\t\t// Also listen to the resource incase the resource is a symlink - https://github.com/microsoft/vscode/issues/118134\n\t\tthis._register(this.fileService.watch(this.userSettingsResource));\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.contains(this.userSettingsResource))(() => this._onDidChange.fire()));\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.userSettingsResource);\n\t\t\tthis.parser.parse(content.value.toString() || '{}', this.parseOptions);\n\t\t\treturn this.parser.configurationModel;\n\t\t} catch (e) {\n\t\t\treturn new ConfigurationModel();\n\t\t}\n\t}\n\n\treparse(): ConfigurationModel {\n\t\tthis.parser.reparse(this.parseOptions);\n\t\treturn this.parser.configurationModel;\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this.parser.restrictedConfigurations;\n\t}\n}\n\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _localUserConfiguration: ConfigurationModel,\n\t\tprivate _remoteUserConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): IConfigurationValue<C> {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\n\t\tconst defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._defaultConfiguration.freeze().getValue<C>(key);\n\t\tconst userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.userConfiguration.freeze().getValue<C>(key);\n\t\tconst userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.localUserConfiguration.freeze().getValue<C>(key);\n\t\tconst userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.remoteUserConfiguration.freeze().getValue<C>(key);\n\t\tconst workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._workspaceConfiguration.freeze().getValue<C>(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\tconst workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : folderConfigurationModel.freeze().getValue<C>(key) : undefined;\n\t\tconst memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue<C>(key) : memoryConfigurationModel.getValue<C>(key);\n\t\tconst value = consolidateConfigurationModel.getValue<C>(key);\n\t\tconst overrideIdentifiers: string[] = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(override => override.identifiers))).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n\n\t\treturn {\n\t\t\tdefaultValue: defaultValue,\n\t\t\tuserValue: userValue,\n\t\t\tuserLocalValue: userLocalValue,\n\t\t\tuserRemoteValue: userRemoteValue,\n\t\t\tworkspaceValue: workspaceValue,\n\t\t\tworkspaceFolderValue: workspaceFolderValue,\n\t\t\tmemoryValue: memoryValue,\n\t\t\tvalue,\n\n\t\t\tdefault: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuser: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel?.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel?.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tmemory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\n\t\t\toverrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this.userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateLocalUserConfiguration(localUserConfiguration: ConfigurationModel): void {\n\t\tthis._localUserConfiguration = localUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateRemoteUserConfiguration(remoteUserConfiguration: ConfigurationModel): void {\n\t\tthis._remoteUserConfiguration = remoteUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folderConfigurations.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tcompareAndUpdateDefaultConfiguration(defaults: ConfigurationModel, keys: string[]): IConfigurationChange {\n\t\tconst overrides: [string, string[]][] = keys\n\t\t\t.filter(key => OVERRIDE_PROPERTY_PATTERN.test(key))\n\t\t\t.map(key => {\n\t\t\t\tconst overrideIdentifier = overrideIdentifierFromKey(key);\n\t\t\t\tconst fromKeys = this._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst toKeys = defaults.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst keys = [\n\t\t\t\t\t...toKeys.filter(key => fromKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => toKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => !objects.equals(this._defaultConfiguration.override(overrideIdentifier).getValue(key), defaults.override(overrideIdentifier).getValue(key)))\n\t\t\t\t];\n\t\t\t\treturn [overrideIdentifier, keys];\n\t\t\t});\n\t\tthis.updateDefaultConfiguration(defaults);\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateLocalUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.localUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateLocalUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.remoteUserConfiguration, user);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateRemoteUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.workspaceConfiguration, workspaceConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst currentFolderConfiguration = this.folderConfigurations.get(resource);\n\t\tconst { added, updated, removed, overrides } = compare(currentFolderConfiguration, folderConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length || !currentFolderConfiguration) {\n\t\t\tthis.updateFolderConfiguration(resource, folderConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tconst folderConfig = this.folderConfigurations.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tthis.deleteFolderConfiguration(folder);\n\t\tconst { added, updated, removed, overrides } = compare(folderConfig, undefined);\n\t\treturn { keys: [...added, ...updated, ...removed], overrides };\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tprivate _userConfiguration: ConfigurationModel | null = null;\n\tget userConfiguration(): ConfigurationModel {\n\t\tif (!this._userConfiguration) {\n\t\t\tthis._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._userConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._userConfiguration;\n\t}\n\n\tget localUserConfiguration(): ConfigurationModel {\n\t\treturn this._localUserConfiguration;\n\t}\n\n\tget remoteUserConfiguration(): ConfigurationModel {\n\t\treturn this._remoteUserConfiguration;\n\t}\n\n\tget workspaceConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folderConfigurations(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | undefined {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this.userConfiguration.contents,\n\t\t\t\toverrides: this.userConfiguration.overrides,\n\t\t\t\tkeys: this.userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: [...this._folderConfigurations.keys()].reduce<[UriComponents, IConfigurationModel][]>((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult.push([folder, { contents, overrides, keys }]);\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t};\n\t}\n\n\tallKeys(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().keys.forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tprotected getAllKeysForOverrideIdentifier(overrideIdentifier: string): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tstatic parse(data: IConfigurationData): Configuration {\n\t\tconst defaultConfiguration = this.parseConfigurationModel(data.defaults);\n\t\tconst userConfiguration = this.parseConfigurationModel(data.user);\n\t\tconst workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n\t\tconst folders: ResourceMap<ConfigurationModel> = data.folders.reduce((result, value) => {\n\t\t\tresult.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(defaultConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), false);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n\t}\n\n}\n\nexport function mergeChanges(...changes: IConfigurationChange[]): IConfigurationChange {\n\tif (changes.length === 0) {\n\t\treturn { keys: [], overrides: [] };\n\t}\n\tif (changes.length === 1) {\n\t\treturn changes[0];\n\t}\n\tconst keysSet = new Set<string>();\n\tconst overridesMap = new Map<string, Set<string>>();\n\tfor (const change of changes) {\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([identifier, keys]) => {\n\t\t\tconst result = getOrSet(overridesMap, identifier, new Set<string>());\n\t\t\tkeys.forEach(key => result.add(key));\n\t\t});\n\t}\n\tconst overrides: [string, string[]][] = [];\n\toverridesMap.forEach((keys, identifier) => overrides.push([identifier, [...keys.values()]]));\n\treturn { keys: [...keysSet.values()], overrides };\n}\n\nexport class ConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate readonly affectedKeysTree: any;\n\treadonly affectedKeys: string[];\n\tsource!: ConfigurationTarget;\n\tsourceConfig: any;\n\n\tconstructor(readonly change: IConfigurationChange, private readonly previous: { workspace?: Workspace, data: IConfigurationData } | undefined, private readonly currentConfiguraiton: Configuration, private readonly currentWorkspace?: Workspace) {\n\t\tconst keysSet = new Set<string>();\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n\t\tthis.affectedKeys = [...keysSet.values()];\n\n\t\tconst configurationModel = new ConfigurationModel();\n\t\tthis.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n\t\tthis.affectedKeysTree = configurationModel.contents;\n\t}\n\n\tprivate _previousConfiguration: Configuration | undefined = undefined;\n\tget previousConfiguration(): Configuration | undefined {\n\t\tif (!this._previousConfiguration && this.previous) {\n\t\t\tthis._previousConfiguration = Configuration.parse(this.previous.data);\n\t\t}\n\t\treturn this._previousConfiguration;\n\t}\n\n\taffectsConfiguration(section: string, overrides?: IConfigurationOverrides): boolean {\n\t\tif (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n\t\t\tif (overrides) {\n\t\t\t\tconst value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n\t\t\t\tconst value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n\t\t\t\treturn !objects.equals(value1, value2);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate doesAffectedKeysTreeContains(affectedKeysTree: any, section: string): boolean {\n\t\tlet requestedTree = toValuesTree({ [section]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\taffectedKeysTree = affectedKeysTree[key];\n\t\t\tif (!affectedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class AllKeysConfigurationChangeEvent extends ConfigurationChangeEvent {\n\tconstructor(configuration: Configuration, workspace: Workspace, source: ConfigurationTarget, sourceConfig: any) {\n\t\tsuper({ keys: configuration.allKeys(), overrides: [] }, undefined, configuration, workspace);\n\t\tthis.source = source;\n\t\tthis.sourceConfig = sourceConfig;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, IConfigurationChangeEvent, IConfigurationOverrides, ConfigurationTarget, isConfigurationOverrides, IConfigurationData, IConfigurationValue, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { DefaultConfigurationModel, Configuration, ConfigurationModel, ConfigurationChangeEvent, UserSettings } from 'vs/platform/configuration/common/configurationModels';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate configuration: Configuration;\n\tprivate userConfiguration: UserSettings;\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\tprivate readonly settingsResource: URI,\n\t\tfileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.userConfiguration = this._register(new UserSettings(this.settingsResource, undefined, extUriBiasedIgnorePathCase, fileService));\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reloadConfiguration(), 50));\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(configurationProperties => this.onDidDefaultConfigurationChange(configurationProperties)));\n\t\tthis._register(this.userConfiguration.onDidChange(() => this.reloadConfigurationScheduler.schedule()));\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst userConfiguration = await this.userConfiguration.loadConfiguration();\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), userConfiguration);\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): IConfigurationValue<T> {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\tasync reloadConfiguration(): Promise<void> {\n\t\tconst configurationModel = await this.userConfiguration.loadConfiguration();\n\t\tthis.onDidChangeUserConfiguration(configurationModel);\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateLocalUserConfiguration(userConfigurationModel);\n\t\tthis.trigger(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate onDidDefaultConfigurationChange(keys: string[]): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateDefaultConfiguration(new DefaultConfigurationModel(), keys);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(configurationChange: IConfigurationChange, previous: IConfigurationData, source: ConfigurationTarget): void {\n\t\tconst event = new ConfigurationChangeEvent(configurationChange, { data: previous }, this.configuration);\n\t\tevent.source = source;\n\t\tevent.sourceConfig = this.getTargetConfiguration(source);\n\t\tthis._onDidChangeConfiguration.fire(event);\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this.configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this.configuration.localUserConfiguration.contents;\n\t\t}\n\t\treturn {};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport const IRemoteAuthorityResolverService = createDecorator<IRemoteAuthorityResolverService>('remoteAuthorityResolverService');\n\nexport interface ResolvedAuthority {\n\treadonly authority: string;\n\treadonly host: string;\n\treadonly port: number;\n\treadonly connectionToken: string | undefined;\n}\n\nexport enum RemoteTrustOption {\n\tUnknown = 0,\n\tDisableTrust = 1,\n\tMachineTrusted = 2\n}\n\nexport interface ResolvedOptions {\n\treadonly extensionHostEnv?: { [key: string]: string | null };\n\treadonly trust?: RemoteTrustOption;\n}\n\nexport interface TunnelDescription {\n\tremoteAddress: { port: number, host: string };\n\tlocalAddress: { port: number, host: string } | string;\n}\nexport interface TunnelInformation {\n\tenvironmentTunnels?: TunnelDescription[];\n}\n\nexport interface ResolverResult {\n\tauthority: ResolvedAuthority;\n\toptions?: ResolvedOptions;\n\ttunnelInformation?: TunnelInformation;\n}\n\nexport interface IRemoteConnectionData {\n\thost: string;\n\tport: number;\n\tconnectionToken: string | undefined;\n}\n\nexport enum RemoteAuthorityResolverErrorCode {\n\tUnknown = 'Unknown',\n\tNotAvailable = 'NotAvailable',\n\tTemporarilyNotAvailable = 'TemporarilyNotAvailable',\n\tNoResolverFound = 'NoResolverFound'\n}\n\nexport class RemoteAuthorityResolverError extends Error {\n\n\tpublic static isTemporarilyNotAvailable(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.TemporarilyNotAvailable;\n\t}\n\n\tpublic static isNoResolverFound(err: any): err is RemoteAuthorityResolverError {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.NoResolverFound;\n\t}\n\n\tpublic static isHandled(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err.isHandled;\n\t}\n\n\tpublic readonly _message: string | undefined;\n\tpublic readonly _code: RemoteAuthorityResolverErrorCode;\n\tpublic readonly _detail: any;\n\n\tpublic isHandled: boolean;\n\n\tconstructor(message?: string, code: RemoteAuthorityResolverErrorCode = RemoteAuthorityResolverErrorCode.Unknown, detail?: any) {\n\t\tsuper(message);\n\n\t\tthis._message = message;\n\t\tthis._code = code;\n\t\tthis._detail = detail;\n\n\t\tthis.isHandled = (code === RemoteAuthorityResolverErrorCode.NotAvailable) && detail === true;\n\n\t\t// workaround when extending builtin objects and when compiling to ES5, see:\n\t\t// https://github.com/microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\t\tif (typeof (<any>Object).setPrototypeOf === 'function') {\n\t\t\t(<any>Object).setPrototypeOf(this, RemoteAuthorityResolverError.prototype);\n\t\t}\n\t}\n}\n\nexport interface IRemoteAuthorityResolverService {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeConnectionData: Event<void>;\n\n\tresolveAuthority(authority: string): Promise<ResolverResult>;\n\tgetConnectionData(authority: string): IRemoteConnectionData | null;\n\n\t_clearResolvedAuthority(authority: string): void;\n\t_setResolvedAuthority(resolvedAuthority: ResolvedAuthority, resolvedOptions?: ResolvedOptions): void;\n\t_setResolvedAuthorityError(authority: string, err: any): void;\n\t_setAuthorityConnectionToken(authority: string, connectionToken: string): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions, ConfigurationScope, IConfigurationNode } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService');\n\nexport interface IRequestService {\n\treadonly _serviceBrand: undefined;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport function isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport async function asText(context: IRequestContext): Promise<string | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn buffer.toString();\n}\n\nexport async function asJson<T = {}>(context: IRequestContext): Promise<T | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\tconst str = buffer.toString();\n\ttry {\n\t\treturn JSON.parse(str);\n\t} catch (err) {\n\t\terr.message += ':\\n' + str;\n\t\tthrow err;\n\t}\n}\n\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nexport function updateProxyConfigurationsScope(scope: ConfigurationScope): void {\n\tregisterProxyConfigurations(scope);\n}\n\nlet proxyConfiguration: IConfigurationNode | undefined;\nfunction registerProxyConfigurations(scope: ConfigurationScope): void {\n\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\tif (proxyConfiguration) {\n\t\tconfigurationRegistry.deregisterConfigurations([proxyConfiguration]);\n\t}\n\tproxyConfiguration = {\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tscope,\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?/?$|^$',\n\t\t\t\tmarkdownDescription: localize('proxy', \"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tmarkdownDescription: localize('proxyAuthorization', \"The value to send as the `Proxy-Authorization` header for every network request.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'fallback', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportFallback', \"Enable proxy support for extensions, fall back to request options, when no proxy found.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS, a reload of the window is required after turning this off.)\"),\n\t\t\t\trestricted: true\n\t\t\t}\n\t\t}\n\t};\n\tconfigurationRegistry.registerConfiguration(proxyConfiguration);\n}\n\nregisterProxyConfigurations(ConfigurationScope.MACHINE);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Event } from 'vs/base/common/event';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { VSBuffer, bufferToStream, streamToBuffer } from 'vs/base/common/buffer';\n\ntype RequestResponse = [\n\t{\n\t\theaders: IHeaders;\n\t\tstatusCode?: number;\n\t},\n\tVSBuffer\n];\n\nexport class RequestChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IRequestService) { }\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'request': return this.service.request(args[0], CancellationToken.None)\n\t\t\t\t.then(async ({ res, stream }) => {\n\t\t\t\t\tconst buffer = await streamToBuffer(stream);\n\t\t\t\t\treturn <RequestResponse>[{ statusCode: res.statusCode, headers: res.headers }, buffer];\n\t\t\t\t});\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class RequestChannelClient {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly channel: IChannel) { }\n\n\tasync request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\treturn RequestChannelClient.request(this.channel, options, token);\n\t}\n\n\tstatic async request(channel: IChannel, options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tconst [res, buffer] = await channel.call<RequestResponse>('request', [options]);\n\t\treturn { res, stream: bufferToStream(buffer) };\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Url, parse as parseUrl } from 'url';\nimport { isBoolean } from 'vs/base/common/types';\n\nexport type Agent = any;\n\nfunction getSystemProxyURI(requestURL: Url, env: typeof process.env): string | null {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn env.HTTP_PROXY || env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn env.HTTPS_PROXY || env.https_proxy || env.HTTP_PROXY || env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport async function getProxyAgent(rawRequestURL: string, env: typeof process.env, options: IOptions = {}): Promise<Agent> {\n\tconst requestURL = parseUrl(rawRequestURL);\n\tconst proxyURL = options.proxyUrl || getSystemProxyURI(requestURL, env);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\tconst proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n\t\treturn null;\n\t}\n\n\tconst opts = {\n\t\thost: proxyEndpoint.hostname || '',\n\t\tport: proxyEndpoint.port || (proxyEndpoint.protocol === 'https' ? '443' : '80'),\n\t\tauth: proxyEndpoint.auth,\n\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true,\n\t};\n\n\treturn requestURL.protocol === 'http:'\n\t\t? new (await import('http-proxy-agent'))(opts as any as Url)\n\t\t: new (await import('https-proxy-agent'))(opts);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { isUUID, generateUuid } from 'vs/base/common/uuid';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport async function getServiceMachineId(environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope, fallbackValue?: string | undefined) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope, target: StorageTarget) => void\n} | undefined): Promise<string> {\n\tlet uuid: string | null = storageService ? storageService.get('storage.serviceMachineId', StorageScope.GLOBAL) || null : null;\n\tif (uuid) {\n\t\treturn uuid;\n\t}\n\ttry {\n\t\tconst contents = await fileService.readFile(environmentService.serviceMachineIdResource);\n\t\tconst value = contents.value.toString();\n\t\tuuid = isUUID(value) ? value : null;\n\t} catch (e) {\n\t\tuuid = null;\n\t}\n\n\tif (!uuid) {\n\t\tuuid = generateUuid();\n\t\ttry {\n\t\t\tawait fileService.writeFile(environmentService.serviceMachineIdResource, VSBuffer.fromString(uuid));\n\t\t} catch (error) {\n\t\t\t//noop\n\t\t}\n\t}\n\tif (storageService) {\n\t\tstorageService.store('storage.serviceMachineId', uuid, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t}\n\treturn uuid;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IStateService = createDecorator<IStateService>('stateService');\n\nexport interface IStateService {\n\treadonly _serviceBrand: undefined;\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void;\n\n\tremoveItem(key: string): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { writeFileSync } from 'vs/base/node/pfs';\nimport { isUndefined, isUndefinedOrNull } from 'vs/base/common/types';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { ILogService } from 'vs/platform/log/common/log';\n\ntype StorageDatabase = { [key: string]: any; };\n\nexport class FileStorage {\n\n\tprivate _database: StorageDatabase | null = null;\n\tprivate lastFlushedSerializedDatabase: string | null = null;\n\n\tconstructor(private dbPath: string, private onError: (error: Error) => void) { }\n\n\tprivate get database(): StorageDatabase {\n\t\tif (!this._database) {\n\t\t\tthis._database = this.loadSync();\n\t\t}\n\n\t\treturn this._database;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tconst database = await this.loadAsync();\n\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tthis._database = database;\n\t}\n\n\tprivate loadSync(): StorageDatabase {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = fs.readFileSync(this.dbPath).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tprivate async loadAsync(): Promise<StorageDatabase> {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = (await fs.promises.readFile(this.dbPath)).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\tconst res = this.database[key];\n\t\tif (isUndefinedOrNull(res)) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\n\t\t// Remove an item when it is undefined or null\n\t\tif (isUndefinedOrNull(data)) {\n\t\t\treturn this.removeItem(key);\n\t\t}\n\n\t\t// Shortcut for primitives that did not change\n\t\tif (typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean') {\n\t\t\tif (this.database[key] === data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.database[key] = data;\n\t\tthis.saveSync();\n\t}\n\n\tremoveItem(key: string): void {\n\n\t\t// Only update if the key is actually present (not undefined)\n\t\tif (!isUndefined(this.database[key])) {\n\t\t\tthis.database[key] = undefined;\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tprivate saveSync(): void {\n\t\tconst serializedDatabase = JSON.stringify(this.database, null, 4);\n\t\tif (serializedDatabase === this.lastFlushedSerializedDatabase) {\n\t\t\treturn; // return early if the database has not changed\n\t\t}\n\n\t\ttry {\n\t\t\twriteFileSync(this.dbPath, serializedDatabase); // permission issue can happen here\n\t\t\tthis.lastFlushedSerializedDatabase = serializedDatabase;\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n}\n\nexport class StateService implements IStateService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly STATE_FILE = 'storage.json';\n\n\tprivate fileStorage: FileStorage;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tthis.fileStorage = new FileStorage(path.join(environmentService.userDataPath, StateService.STATE_FILE), error => logService.error(error));\n\t}\n\n\tinit(): Promise<void> {\n\t\treturn this.fileStorage.init();\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\treturn this.fileStorage.getItem(key, defaultValue);\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\t\tthis.fileStorage.setItem(key, data);\n\t}\n\n\tremoveItem(key: string): void {\n\t\tthis.fileStorage.removeItem(key);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event, Emitter, PauseableEmitter } from 'vs/base/common/event';\nimport { Disposable, dispose, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { IWorkspaceInitializationPayload } from 'vs/platform/workspaces/common/workspaces';\nimport { InMemoryStorageDatabase, IStorage, Storage } from 'vs/base/parts/storage/common/storage';\nimport { Promises, RunOnceScheduler, runWhenIdle } from 'vs/base/common/async';\n\nexport const IS_NEW_KEY = '__$__isNewStorageMarker';\nconst TARGET_KEY = '__$__targetStorageMarker';\n\nexport const IStorageService = createDecorator<IStorageService>('storageService');\n\nexport enum WillSaveStateReason {\n\n\t/**\n\t * No specific reason to save state.\n\t */\n\tNONE,\n\n\t/**\n\t * A hint that the workbench is about to shutdown.\n\t */\n\tSHUTDOWN\n}\n\nexport interface IWillSaveStateEvent {\n\treason: WillSaveStateReason;\n}\n\nexport interface IStorageService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Emitted whenever data is updated or deleted.\n\t */\n\treadonly onDidChangeValue: Event<IStorageValueChangeEvent>;\n\n\t/**\n\t * Emitted whenever target of a storage entry changes.\n\t */\n\treadonly onDidChangeTarget: Event<IStorageTargetChangeEvent>;\n\n\t/**\n\t * Emitted when the storage is about to persist. This is the right time\n\t * to persist data to ensure it is stored before the application shuts\n\t * down.\n\t *\n\t * The will save state event allows to optionally ask for the reason of\n\t * saving the state, e.g. to find out if the state is saved due to a\n\t * shutdown.\n\t *\n\t * Note: this event may be fired many times, not only on shutdown to prevent\n\t * loss of state in situations where the shutdown is not sufficient to\n\t * persist the data properly.\n\t */\n\treadonly onWillSaveState: Event<IWillSaveStateEvent>;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t */\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t * The element will be converted to a `boolean`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t */\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t * The element will be converted to a `number` using `parseInt` with a\n\t * base of `10`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t */\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined;\n\n\t/**\n\t * Store a value under the given key to storage. The value will be\n\t * converted to a `string`. Storing either `undefined` or `null` will\n\t * remove the entry under the key.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t *\n\t * @param target allows to define the target of the storage operation\n\t * to either the current machine or user.\n\t */\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope, target: StorageTarget): Promise<void> | void;\n\n\t/**\n\t * Delete an element stored under the provided key from storage.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tremove(key: string, scope: StorageScope): void;\n\n\t/**\n\t * Returns all the keys used in the storage for the provided `scope`\n\t * and `target`.\n\t *\n\t * Note: this will NOT return all keys stored in the storage layer.\n\t * Some keys may not have an associated `StorageTarget` and thus\n\t * will be excluded from the results.\n\t *\n\t * @param scope allows to define the scope for the keys\n\t * to either the current workspace only or all workspaces.\n\t *\n\t * @param target allows to define the target for the keys\n\t * to either the current machine or user.\n\t */\n\tkeys(scope: StorageScope, target: StorageTarget): string[];\n\n\t/**\n\t * Log the contents of the storage to the console.\n\t */\n\tlogStorage(): void;\n\n\t/**\n\t * Migrate the storage contents to another workspace.\n\t */\n\tmigrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n\n\t/**\n\t * Whether the storage for the given scope was created during this session or\n\t * existed before.\n\t */\n\tisNew(scope: StorageScope): boolean;\n\n\t/**\n\t * Allows to flush state, e.g. in cases where a shutdown is\n\t * imminent. This will send out the `onWillSaveState` to ask\n\t * everyone for latest state.\n\t *\n\t * @returns a `Promise` that can be awaited on when all updates\n\t * to the underlying storage have been flushed.\n\t */\n\tflush(): Promise<void>;\n}\n\nexport const enum StorageScope {\n\n\t/**\n\t * The stored data will be scoped to all workspaces.\n\t */\n\tGLOBAL,\n\n\t/**\n\t * The stored data will be scoped to the current workspace.\n\t */\n\tWORKSPACE\n}\n\nexport const enum StorageTarget {\n\n\t/**\n\t * The stored data is user specific and applies across machines.\n\t */\n\tUSER,\n\n\t/**\n\t * The stored data is machine specific.\n\t */\n\tMACHINE\n}\n\nexport interface IStorageValueChangeEvent {\n\n\t/**\n\t * The scope for the storage entry that changed\n\t * or was removed.\n\t */\n\treadonly scope: StorageScope;\n\n\t/**\n\t * The `key` of the storage entry that was changed\n\t * or was removed.\n\t */\n\treadonly key: string;\n\n\t/**\n\t * The `target` can be `undefined` if a key is being\n\t * removed.\n\t */\n\treadonly target: StorageTarget | undefined;\n}\n\nexport interface IStorageTargetChangeEvent {\n\n\t/**\n\t * The scope for the target that changed. Listeners\n\t * should use `keys(scope, target)` to get an updated\n\t * list of keys for the given `scope` and `target`.\n\t */\n\treadonly scope: StorageScope;\n}\n\ninterface IKeyTargets {\n\t[key: string]: StorageTarget\n}\n\nexport interface IStorageServiceOptions {\n\tflushInterval: number;\n}\n\nexport abstract class AbstractStorageService extends Disposable implements IStorageService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\n\n\tprivate readonly _onDidChangeValue = this._register(new PauseableEmitter<IStorageValueChangeEvent>());\n\treadonly onDidChangeValue = this._onDidChangeValue.event;\n\n\tprivate readonly _onDidChangeTarget = this._register(new PauseableEmitter<IStorageTargetChangeEvent>());\n\treadonly onDidChangeTarget = this._onDidChangeTarget.event;\n\n\tprivate readonly _onWillSaveState = this._register(new Emitter<IWillSaveStateEvent>());\n\treadonly onWillSaveState = this._onWillSaveState.event;\n\n\tprivate initializationPromise: Promise<void> | undefined;\n\n\tprivate readonly flushWhenIdleScheduler = this._register(new RunOnceScheduler(() => this.doFlushWhenIdle(), this.options.flushInterval));\n\tprivate readonly runFlushWhenIdle = this._register(new MutableDisposable());\n\n\tconstructor(private options: IStorageServiceOptions = { flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL }) {\n\t\tsuper();\n\t}\n\n\tprivate doFlushWhenIdle(): void {\n\t\tthis.runFlushWhenIdle.value = runWhenIdle(() => {\n\t\t\tif (this.shouldFlushWhenIdle()) {\n\t\t\t\tthis.flush();\n\t\t\t}\n\n\t\t\t// repeat\n\t\t\tthis.flushWhenIdleScheduler.schedule();\n\t\t});\n\t}\n\n\tprotected shouldFlushWhenIdle(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected stopFlushWhenIdle(): void {\n\t\tdispose([this.runFlushWhenIdle, this.flushWhenIdleScheduler]);\n\t}\n\n\tinitialize(): Promise<void> {\n\t\tif (!this.initializationPromise) {\n\t\t\tthis.initializationPromise = (async () => {\n\n\t\t\t\t// Ask subclasses to initialize storage\n\t\t\t\tawait this.doInitialize();\n\n\t\t\t\t// On some OS we do not get enough time to persist state on shutdown (e.g. when\n\t\t\t\t// Windows restarts after applying updates). In other cases, VSCode might crash,\n\t\t\t\t// so we periodically save state to reduce the chance of loosing any state.\n\t\t\t\t// In the browser we do not have support for long running unload sequences. As such,\n\t\t\t\t// we cannot ask for saving state in that moment, because that would result in a\n\t\t\t\t// long running operation.\n\t\t\t\t// Instead, periodically ask customers to save save. The library will be clever enough\n\t\t\t\t// to only save state that has actually changed.\n\t\t\t\tthis.flushWhenIdleScheduler.schedule();\n\t\t\t})();\n\t\t}\n\n\t\treturn this.initializationPromise;\n\t}\n\n\tprotected emitDidChangeValue(scope: StorageScope, key: string): void {\n\n\t\t// Specially handle `TARGET_KEY`\n\t\tif (key === TARGET_KEY) {\n\n\t\t\t// Clear our cached version which is now out of date\n\t\t\tif (scope === StorageScope.GLOBAL) {\n\t\t\t\tthis._globalKeyTargets = undefined;\n\t\t\t} else if (scope === StorageScope.WORKSPACE) {\n\t\t\t\tthis._workspaceKeyTargets = undefined;\n\t\t\t}\n\n\t\t\t// Emit as `didChangeTarget` event\n\t\t\tthis._onDidChangeTarget.fire({ scope });\n\t\t}\n\n\t\t// Emit any other key to outside\n\t\telse {\n\t\t\tthis._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key] });\n\t\t}\n\t}\n\n\tprotected emitWillSaveState(reason: WillSaveStateReason): void {\n\t\tthis._onWillSaveState.fire({ reason });\n\t}\n\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope): string | undefined;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined {\n\t\treturn this.getStorage(scope)?.get(key, fallbackValue);\n\t}\n\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope): boolean | undefined;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined {\n\t\treturn this.getStorage(scope)?.getBoolean(key, fallbackValue);\n\t}\n\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope): number | undefined;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined {\n\t\treturn this.getStorage(scope)?.getNumber(key, fallbackValue);\n\t}\n\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope, target: StorageTarget): void {\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\tthis.remove(key, scope);\n\t\t\treturn;\n\t\t}\n\n\t\t// Update our datastructures but send events only after\n\t\tthis.withPausedEmitters(() => {\n\n\t\t\t// Update key-target map\n\t\t\tthis.updateKeyTarget(key, scope, target);\n\n\t\t\t// Store actual value\n\t\t\tthis.getStorage(scope)?.set(key, value);\n\t\t});\n\t}\n\n\tremove(key: string, scope: StorageScope): void {\n\n\t\t// Update our datastructures but send events only after\n\t\tthis.withPausedEmitters(() => {\n\n\t\t\t// Update key-target map\n\t\t\tthis.updateKeyTarget(key, scope, undefined);\n\n\t\t\t// Remove actual key\n\t\t\tthis.getStorage(scope)?.delete(key);\n\t\t});\n\t}\n\n\tprivate withPausedEmitters(fn: Function): void {\n\n\t\t// Pause emitters\n\t\tthis._onDidChangeValue.pause();\n\t\tthis._onDidChangeTarget.pause();\n\n\t\ttry {\n\t\t\tfn();\n\t\t} finally {\n\n\t\t\t// Resume emitters\n\t\t\tthis._onDidChangeValue.resume();\n\t\t\tthis._onDidChangeTarget.resume();\n\t\t}\n\t}\n\n\tkeys(scope: StorageScope, target: StorageTarget): string[] {\n\t\tconst keys: string[] = [];\n\n\t\tconst keyTargets = this.getKeyTargets(scope);\n\t\tfor (const key of Object.keys(keyTargets)) {\n\t\t\tconst keyTarget = keyTargets[key];\n\t\t\tif (keyTarget === target) {\n\t\t\t\tkeys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n\n\tprivate updateKeyTarget(key: string, scope: StorageScope, target: StorageTarget | undefined): void {\n\n\t\t// Add\n\t\tconst keyTargets = this.getKeyTargets(scope);\n\t\tif (typeof target === 'number') {\n\t\t\tif (keyTargets[key] !== target) {\n\t\t\t\tkeyTargets[key] = target;\n\t\t\t\tthis.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets));\n\t\t\t}\n\t\t}\n\n\t\t// Remove\n\t\telse {\n\t\t\tif (typeof keyTargets[key] === 'number') {\n\t\t\t\tdelete keyTargets[key];\n\t\t\t\tthis.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _workspaceKeyTargets: IKeyTargets | undefined = undefined;\n\tprivate get workspaceKeyTargets(): IKeyTargets {\n\t\tif (!this._workspaceKeyTargets) {\n\t\t\tthis._workspaceKeyTargets = this.loadKeyTargets(StorageScope.WORKSPACE);\n\t\t}\n\n\t\treturn this._workspaceKeyTargets;\n\t}\n\n\tprivate _globalKeyTargets: IKeyTargets | undefined = undefined;\n\tprivate get globalKeyTargets(): IKeyTargets {\n\t\tif (!this._globalKeyTargets) {\n\t\t\tthis._globalKeyTargets = this.loadKeyTargets(StorageScope.GLOBAL);\n\t\t}\n\n\t\treturn this._globalKeyTargets;\n\t}\n\n\tprivate getKeyTargets(scope: StorageScope): IKeyTargets {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalKeyTargets : this.workspaceKeyTargets;\n\t}\n\n\tprivate loadKeyTargets(scope: StorageScope): { [key: string]: StorageTarget } {\n\t\tconst keysRaw = this.get(TARGET_KEY, scope);\n\t\tif (keysRaw) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(keysRaw);\n\t\t\t} catch (error) {\n\t\t\t\t// Fail gracefully\n\t\t\t}\n\t\t}\n\n\t\treturn Object.create(null);\n\t}\n\n\tisNew(scope: StorageScope): boolean {\n\t\treturn this.getBoolean(IS_NEW_KEY, scope) === true;\n\t}\n\n\tasync flush(): Promise<void> {\n\n\t\t// Signal event to collect changes\n\t\tthis._onWillSaveState.fire({ reason: WillSaveStateReason.NONE });\n\n\t\t// Await flush\n\t\tawait Promises.settled([\n\t\t\tthis.getStorage(StorageScope.GLOBAL)?.whenFlushed() ?? Promise.resolve(),\n\t\t\tthis.getStorage(StorageScope.WORKSPACE)?.whenFlushed() ?? Promise.resolve()\n\t\t]);\n\t}\n\n\tasync logStorage(): Promise<void> {\n\t\tconst globalItems = this.getStorage(StorageScope.GLOBAL)?.items ?? new Map<string, string>();\n\t\tconst workspaceItems = this.getStorage(StorageScope.WORKSPACE)?.items ?? new Map<string, string>();\n\n\t\treturn logStorage(\n\t\t\tglobalItems,\n\t\t\tworkspaceItems,\n\t\t\tthis.getLogDetails(StorageScope.GLOBAL) ?? '',\n\t\t\tthis.getLogDetails(StorageScope.WORKSPACE) ?? ''\n\t\t);\n\t}\n\n\t// --- abstract\n\n\tprotected abstract doInitialize(): Promise<void>;\n\n\tprotected abstract getStorage(scope: StorageScope): IStorage | undefined;\n\n\tprotected abstract getLogDetails(scope: StorageScope): string | undefined;\n\n\tabstract migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n}\n\nexport class InMemoryStorageService extends AbstractStorageService {\n\n\tprivate globalStorage = new Storage(new InMemoryStorageDatabase());\n\tprivate workspaceStorage = new Storage(new InMemoryStorageDatabase());\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._register(this.workspaceStorage.onDidChangeStorage(key => this.emitDidChangeValue(StorageScope.WORKSPACE, key)));\n\t\tthis._register(this.globalStorage.onDidChangeStorage(key => this.emitDidChangeValue(StorageScope.GLOBAL, key)));\n\t}\n\n\tprotected getStorage(scope: StorageScope): IStorage {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalStorage : this.workspaceStorage;\n\t}\n\n\tprotected getLogDetails(scope: StorageScope): string | undefined {\n\t\treturn scope === StorageScope.GLOBAL ? 'inMemory (global)' : 'inMemory (workspace)';\n\t}\n\n\tprotected async doInitialize(): Promise<void> { }\n\n\tasync migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void> {\n\t\t// not supported\n\t}\n}\n\nexport async function logStorage(global: Map<string, string>, workspace: Map<string, string>, globalPath: string, workspacePath: string): Promise<void> {\n\tconst safeParse = (value: string) => {\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t} catch (error) {\n\t\t\treturn value;\n\t\t}\n\t};\n\n\tconst globalItems = new Map<string, string>();\n\tconst globalItemsParsed = new Map<string, string>();\n\tglobal.forEach((value, key) => {\n\t\tglobalItems.set(key, value);\n\t\tglobalItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconst workspaceItems = new Map<string, string>();\n\tconst workspaceItemsParsed = new Map<string, string>();\n\tworkspace.forEach((value, key) => {\n\t\tworkspaceItems.set(key, value);\n\t\tworkspaceItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconsole.group(`Storage: Global (path: ${globalPath})`);\n\tlet globalValues: { key: string, value: string }[] = [];\n\tglobalItems.forEach((value, key) => {\n\t\tglobalValues.push({ key, value });\n\t});\n\tconsole.table(globalValues);\n\tconsole.groupEnd();\n\n\tconsole.log(globalItemsParsed);\n\n\tconsole.group(`Storage: Workspace (path: ${workspacePath})`);\n\tlet workspaceValues: { key: string, value: string }[] = [];\n\tworkspaceItems.forEach((value, key) => {\n\t\tworkspaceValues.push({ key, value });\n\t});\n\tconsole.table(workspaceValues);\n\tconsole.groupEnd();\n\n\tconsole.log(workspaceItemsParsed);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { isLinuxSnap, PlatformToString, platform, Platform } from 'vs/base/common/platform';\nimport { platform as nodePlatform, env } from 'vs/base/common/process';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { URI } from 'vs/base/common/uri';\n\nfunction getPlatformDetail(hostname: string): string | undefined {\n\tif (platform === Platform.Linux && /^penguin(\\.|$)/i.test(hostname)) {\n\t\treturn 'chromebook';\n\t}\n\n\treturn undefined;\n}\n\nexport async function resolveCommonProperties(\n\tfileService: IFileService,\n\trelease: string,\n\thostname: string,\n\tarch: string,\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string | undefined,\n\tmsftInternalDomains: string[] | undefined,\n\tinstallSourcePath: string,\n\tproduct?: string\n): Promise<{ [name: string]: string | boolean | undefined; }> {\n\tconst result: { [name: string]: string | boolean | undefined; } = Object.create(null);\n\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (release || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = PlatformToString(platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = nodePlatform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = arch;\n\t// __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.product'] = product || 'desktop';\n\n\tconst msftInternal = verifyMicrosoftInternalDomain(msftInternalDomains || []);\n\tif (msftInternal) {\n\t\t// __GDPR__COMMON__ \"common.msftInternal\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tresult['common.msftInternal'] = msftInternal;\n\t}\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (isLinuxSnap) {\n\t\t// __GDPR__COMMON__ \"common.snap\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.snap'] = 'true';\n\t}\n\n\tconst platformDetail = getPlatformDetail(hostname);\n\n\tif (platformDetail) {\n\t\t// __GDPR__COMMON__ \"common.platformDetail\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.platformDetail'] = platformDetail;\n\t}\n\n\ttry {\n\t\tconst contents = await fileService.readFile(URI.file(installSourcePath));\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.value.toString().slice(0, 30);\n\t} catch (error) {\n\t\t// ignore error\n\t}\n\n\treturn result;\n}\n\nfunction verifyMicrosoftInternalDomain(domainList: readonly string[]): boolean {\n\tconst userDnsDomain = env['USERDNSDOMAIN'];\n\tif (!userDnsDomain) {\n\t\treturn false;\n\t}\n\n\tconst domain = userDnsDomain.toLowerCase();\n\treturn domainList.some(msftDomain => domain === msftDomain);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { binarySearch } from 'vs/base/common/arrays';\nimport * as Errors from 'vs/base/common/errors';\nimport { toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\ntype ErrorEventFragment = {\n\tcallstack: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tmsg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tfile?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tline?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tcolumn?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tuncaught_error_name?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tuncaught_error_msg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tcount?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n};\nexport interface ErrorEvent {\n\tcallstack: string;\n\tmsg?: string;\n\tfile?: string;\n\tline?: number;\n\tcolumn?: number;\n\tuncaught_error_name?: string;\n\tuncaught_error_msg?: string;\n\tcount?: number;\n}\n\nexport namespace ErrorEvent {\n\texport function compare(a: ErrorEvent, b: ErrorEvent) {\n\t\tif (a.callstack < b.callstack) {\n\t\t\treturn -1;\n\t\t} else if (a.callstack > b.callstack) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n}\n\nexport default abstract class BaseErrorTelemetry {\n\n\tpublic static ERROR_FLUSH_TIMEOUT: number = 5 * 1000;\n\n\tprivate _telemetryService: ITelemetryService;\n\tprivate _flushDelay: number;\n\tprivate _flushHandle: any = -1;\n\tprivate _buffer: ErrorEvent[] = [];\n\tprotected readonly _disposables = new DisposableStore();\n\n\tconstructor(telemetryService: ITelemetryService, flushDelay = BaseErrorTelemetry.ERROR_FLUSH_TIMEOUT) {\n\t\tthis._telemetryService = telemetryService;\n\t\tthis._flushDelay = flushDelay;\n\n\t\t// (1) check for unexpected but handled errors\n\t\tconst unbind = Errors.errorHandler.addListener((err) => this._onErrorEvent(err));\n\t\tthis._disposables.add(toDisposable(unbind));\n\n\t\t// (2) install implementation-specific error listeners\n\t\tthis.installErrorListeners();\n\t}\n\n\tdispose() {\n\t\tclearTimeout(this._flushHandle);\n\t\tthis._flushBuffer();\n\t\tthis._disposables.dispose();\n\t}\n\n\tprotected installErrorListeners(): void {\n\t\t// to override\n\t}\n\n\tprivate _onErrorEvent(err: any): void {\n\n\t\tif (!err) {\n\t\t\treturn;\n\t\t}\n\n\t\t// unwrap nested errors from loader\n\t\tif (err.detail && err.detail.stack) {\n\t\t\terr = err.detail;\n\t\t}\n\n\t\t// work around behavior in workerServer.ts that breaks up Error.stack\n\t\tlet callstack = Array.isArray(err.stack) ? err.stack.join('\\n') : err.stack;\n\t\tlet msg = err.message ? err.message : safeStringify(err);\n\n\t\t// errors without a stack are not useful telemetry\n\t\tif (!callstack) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enqueue({ msg, callstack });\n\t}\n\n\tprotected _enqueue(e: ErrorEvent): void {\n\n\t\tconst idx = binarySearch(this._buffer, e, ErrorEvent.compare);\n\t\tif (idx < 0) {\n\t\t\te.count = 1;\n\t\t\tthis._buffer.splice(~idx, 0, e);\n\t\t} else {\n\t\t\tif (!this._buffer[idx].count) {\n\t\t\t\tthis._buffer[idx].count = 0;\n\t\t\t}\n\t\t\tthis._buffer[idx].count! += 1;\n\t\t}\n\n\t\tif (this._flushHandle === -1) {\n\t\t\tthis._flushHandle = setTimeout(() => {\n\t\t\t\tthis._flushBuffer();\n\t\t\t\tthis._flushHandle = -1;\n\t\t\t}, this._flushDelay);\n\t\t}\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tfor (let error of this._buffer) {\n\t\t\ttype UnhandledErrorClassification = {} & ErrorEventFragment;\n\t\t\tthis._telemetryService.publicLogError2<ErrorEvent, UnhandledErrorClassification>('UnhandledError', error);\n\t\t}\n\t\tthis._buffer.length = 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { globals } from 'vs/base/common/platform';\nimport BaseErrorTelemetry, { ErrorEvent } from 'vs/platform/telemetry/common/errorTelemetry';\n\nexport default class ErrorTelemetry extends BaseErrorTelemetry {\n\tprotected override installErrorListeners(): void {\n\t\tlet oldOnError: Function;\n\t\tlet that = this;\n\t\tif (typeof globals.onerror === 'function') {\n\t\t\toldOnError = globals.onerror;\n\t\t}\n\t\tglobals.onerror = function (message: string, filename: string, line: number, column?: number, e?: any) {\n\t\t\tthat._onUncaughtError(message, filename, line, column, e);\n\t\t\tif (oldOnError) {\n\t\t\t\toldOnError.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t\tthis._disposables.add(toDisposable(() => {\n\t\t\tif (oldOnError) {\n\t\t\t\tglobals.onerror = oldOnError;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _onUncaughtError(msg: string, file: string, line: number, column?: number, err?: any): void {\n\t\tlet data: ErrorEvent = {\n\t\t\tcallstack: msg,\n\t\t\tmsg,\n\t\t\tfile,\n\t\t\tline,\n\t\t\tcolumn\n\t\t};\n\n\t\tif (err) {\n\t\t\tlet { name, message, stack } = err;\n\t\t\tdata.uncaught_error_name = name;\n\t\t\tif (message) {\n\t\t\t\tdata.uncaught_error_msg = message;\n\t\t\t}\n\t\t\tif (stack) {\n\t\t\t\tdata.callstack = Array.isArray(err.stack)\n\t\t\t\t\t? err.stack = err.stack.join('\\n')\n\t\t\t\t\t: err.stack;\n\t\t\t}\n\t\t}\n\n\t\tthis._enqueue(data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tinstanceId: string;\n\tfirstSessionDate: string;\n\tmsftInternal?: boolean;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t/**\n\t * Whether error telemetry will get sent. If false, `publicLogError` will no-op.\n\t */\n\treadonly sendErrorTelemetry: boolean;\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<void>;\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void>;\n\n\tsetEnabled(value: boolean): void;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tsetExperimentProperty(name: string, value: string): void;\n\n\tisOptedIn: boolean;\n}\n\nexport interface ITelemetryEndpoint {\n\tid: string;\n\taiKey: string;\n\tsendErrorTelemetry: boolean;\n}\n\nexport const ICustomEndpointTelemetryService = createDecorator<ICustomEndpointTelemetryService>('customEndpointTelemetryService');\n\nexport interface ICustomEndpointTelemetryService {\n\treadonly _serviceBrand: undefined;\n\n\tpublicLog(endpoint: ITelemetryEndpoint, eventName: string, data?: ITelemetryData): Promise<void>;\n\tpublicLogError(endpoint: ITelemetryEndpoint, errorEventName: string, data?: ITelemetryData): Promise<void>;\n}\n\n// Keys\nexport const instanceStorageKey = 'telemetry.instanceId';\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\nexport const machineIdKey = 'telemetry.machineId';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getErrorMessage, isPromiseCanceledError, canceled } from 'vs/base/common/errors';\nimport { StatisticType, IGalleryExtension, IExtensionGalleryService, IGalleryExtensionAsset, IQueryOptions, SortBy, SortOrder, IExtensionIdentifier, IReportedExtension, InstallOperation, ITranslation, IGalleryExtensionVersion, IGalleryExtensionAssets, isIExtensionIdentifier, DefaultIconPath } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { getGalleryExtensionId, getGalleryExtensionTelemetryData, adoptToGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { getOrDefault } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IPager } from 'vs/base/common/paging';\nimport { IRequestService, asJson, asText, isSuccess } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { joinPath } from 'vs/base/common/resources';\n\ninterface IRawGalleryExtensionFile {\n\tassetType: string;\n\tsource: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\tkey: string;\n\tvalue: string;\n}\n\ninterface IRawGalleryExtensionVersion {\n\tversion: string;\n\tlastUpdated: string;\n\tassetUri: string;\n\tfallbackAssetUri: string;\n\tfiles: IRawGalleryExtensionFile[];\n\tproperties?: IRawGalleryExtensionProperty[];\n}\n\ninterface IRawGalleryExtensionStatistics {\n\tstatisticName: string;\n\tvalue: number;\n}\n\ninterface IRawGalleryExtension {\n\textensionId: string;\n\textensionName: string;\n\tdisplayName: string;\n\tshortDescription: string;\n\tpublisher: { displayName: string, publisherId: string, publisherName: string; };\n\tversions: IRawGalleryExtensionVersion[];\n\tstatistics: IRawGalleryExtensionStatistics[];\n\tflags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\tresults: {\n\t\textensions: IRawGalleryExtension[];\n\t\tresultMetadata: {\n\t\t\tmetadataType: string;\n\t\t\tmetadataItems: {\n\t\t\t\tname: string;\n\t\t\t\tcount: number;\n\t\t\t}[];\n\t\t}[]\n\t}[];\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200,\n\tUnpublished = 0x1000\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages',\n\tWebExtension: 'Microsoft.VisualStudio.Code.WebExtension'\n};\n\ninterface ICriterium {\n\tfilterType: FilterType;\n\tvalue?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\tpageNumber: number;\n\tpageSize: number;\n\tsortBy: SortBy;\n\tsortOrder: SortOrder;\n\tflags: Flags;\n\tcriteria: ICriterium[];\n\tassetTypes: string[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\ntype GalleryServiceQueryClassification = {\n\tfilterTypes: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\tsortBy: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\tsortOrder: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\tduration: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', 'isMeasurement': true };\n\tsuccess: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\trequestBodySize: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\tresponseBodySize?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\tstatusCode?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\terrorCode?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\tcount?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n};\n\ntype QueryTelemetryData = {\n\tfilterTypes: string[];\n\tsortBy: string;\n\tsortOrder: string;\n};\n\ntype GalleryServiceQueryEvent = QueryTelemetryData & {\n\tduration: number;\n\tsuccess: boolean;\n\trequestBodySize: string;\n\tresponseBodySize?: string;\n\tstatusCode?: string;\n\terrorCode?: string;\n\tcount?: string;\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query({ ...this.state, pageNumber, pageSize });\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.length ? values.map(value => ({ filterType, value })) : [{ filterType }]\n\t\t];\n\n\t\treturn new Query({ ...this.state, criteria });\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query({ ...this.state, sortBy });\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query({ ...this.state, sortOrder });\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query({ ...this.state, flags: flags.reduce<number>((r, f) => r | f, 0) });\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query({ ...this.state, assetTypes });\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n\n\tget telemetryData(): QueryTelemetryData {\n\t\treturn {\n\t\t\tfilterTypes: this.state.criteria.map(criterium => String(criterium.filterType)),\n\t\t\tsortBy: String(this.sortBy),\n\t\t\tsortOrder: String(this.sortOrder)\n\t\t};\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): [string, IGalleryExtensionAsset][] {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce<[string, IGalleryExtensionAsset][]>((result, file) => {\n\t\tconst asset = getVersionAsset(version, file.assetType);\n\t\tif (asset) {\n\t\t\tresult.push([file.assetType.substring(coreTranslationAssetPrefix.length), asset]);\n\t\t}\n\t\treturn result;\n\t}, []);\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\w.]+))(:(//)?)([\\w.@\\:/\\-~]+)(.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}`\n\t};\n}\n\nfunction getIconAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\tconst asset = getVersionAsset(version, AssetType.Icon);\n\tif (asset) {\n\t\treturn asset;\n\t}\n\tconst uri = DefaultIconPath;\n\treturn { uri, fallbackUri: uri };\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? { uri: `${version.assetUri}/${type}`, fallbackUri: `${version.fallbackAssetUri}/${type}` } : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction getIsWebExtension(version: IRawGalleryExtensionVersion): boolean {\n\tconst webExtensionProperty = version.properties ? version.properties.find(p => p.key === PropertyType.WebExtension) : undefined;\n\treturn !!webExtensionProperty && webExtensionProperty.value === 'true';\n}\n\nfunction getWebResource(version: IRawGalleryExtensionVersion): URI | undefined {\n\treturn version.files.some(f => f.assetType.startsWith('Microsoft.VisualStudio.Code.WebResources'))\n\t\t? joinPath(URI.parse(version.assetUri), 'Microsoft.VisualStudio.Code.WebResources', 'extension')\n\t\t: undefined;\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, index: number, query: Query, querySource?: string): IGalleryExtension {\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getIconAsset(version),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdate: version.lastUpdated,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tassetUri: URI.parse(version.assetUri),\n\t\twebResource: getWebResource(version),\n\t\tassetTypes: version.files.map(({ assetType }) => assetType),\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version),\n\t\t\twebExtension: getIsWebExtension(version)\n\t\t},\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"searchText\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\ttelemetryData: {\n\t\t\tindex: ((query.pageNumber - 1) * query.pageSize) + index,\n\t\t\tsearchText: query.searchText,\n\t\t\tquerySource\n\t\t},\n\t\tpreview: getIsPreview(galleryExtension.flags)\n\t};\n}\n\ninterface IRawExtensionsReport {\n\tmalicious: string[];\n\tslow: string[];\n}\n\nexport class ExtensionGalleryService implements IExtensionGalleryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate extensionsGalleryUrl: string | undefined;\n\tprivate extensionsControlUrl: string | undefined;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@optional(IStorageService) storageService: IStorageService,\n\t) {\n\t\tconst config = productService.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(productService.version, this.environmentService, this.fileService, storageService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tasync getExtensions(names: string[], token: CancellationToken): Promise<IGalleryExtension[]> {\n\t\tconst result: IGalleryExtension[] = [];\n\t\tlet { total, firstPage: pageResult, getPage } = await this.query({ names, pageSize: names.length }, token);\n\t\tresult.push(...pageResult);\n\t\tfor (let pageIndex = 1; result.length < total; pageIndex++) {\n\t\t\tpageResult = await getPage(pageIndex, token);\n\t\t\tif (pageResult.length) {\n\t\t\t\tresult.push(...pageResult);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tasync getCompatibleExtension(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension = await this.getCompatibleExtensionByEngine(arg1, version);\n\n\t\tif (extension?.properties.webExtension) {\n\t\t\treturn extension.webResource ? extension : null;\n\t\t} else {\n\t\t\treturn extension;\n\t\t}\n\t}\n\n\tprivate async getCompatibleExtensionByEngine(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension: IGalleryExtension | null = isIExtensionIdentifier(arg1) ? null : arg1;\n\t\tif (extension && extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\treturn extension;\n\t\t}\n\t\tconst { id, uuid } = extension ? extension.identifier : <IExtensionIdentifier>arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t}\n\n\t\tconst { galleryExtensions } = await this.queryGallery(query, CancellationToken.None);\n\t\tconst [rawExtension] = galleryExtensions;\n\t\tif (!rawExtension || !rawExtension.versions.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (version) {\n\t\t\tconst versionAsset = rawExtension.versions.filter(v => v.version === version)[0];\n\t\t\tif (versionAsset) {\n\t\t\t\tconst extension = toExtension(rawExtension, versionAsset, 0, query);\n\t\t\t\tif (extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\t\t\treturn extension;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst rawVersion = await this.getLastValidExtensionVersion(rawExtension, rawExtension.versions);\n\t\tif (rawVersion) {\n\t\t\treturn toExtension(rawExtension, rawVersion, 0, query);\n\t\t}\n\t\treturn null;\n\t}\n\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tasync query(arg1: any, arg2?: any): Promise<IPager<IGalleryExtension>> {\n\t\tconst options: IQueryOptions = CancellationToken.isCancellationToken(arg1) ? {} : arg1;\n\t\tconst token: CancellationToken = CancellationToken.isCancellationToken(arg1) ? arg1 : arg2;\n\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tlet text = options.text || '';\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 50);\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use featured filter\n\t\t\ttext = text.replace(/\\bfeatured(\\s+|\\b|$)/g, () => {\n\t\t\t\tquery = query.withFilter(FilterType.Featured);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\tconst { galleryExtensions, total } = await this.queryGallery(query, token);\n\t\tconst extensions = galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, query, options.source));\n\t\tconst getPage = async (pageIndex: number, ct: CancellationToken) => {\n\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\tthrow canceled();\n\t\t\t}\n\t\t\tconst nextPageQuery = query.withPage(pageIndex + 1);\n\t\t\tconst { galleryExtensions } = await this.queryGallery(nextPageQuery, ct);\n\t\t\treturn galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, nextPageQuery, options.source));\n\t\t};\n\n\t\treturn { firstPage: extensions, total, pageSize: query.pageSize, getPage } as IPager<IGalleryExtension>;\n\t}\n\n\tprivate async queryGallery(query: Query, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[], total: number; }> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\t// Always exclude non validated and unpublished extensions\n\t\tquery = query\n\t\t\t.withFlags(query.flags, Flags.ExcludeNonValidated)\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst data = JSON.stringify(query.raw);\n\t\tconst headers = {\n\t\t\t...commonHeaders,\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t'Content-Length': String(data.length)\n\t\t};\n\n\t\tconst startTime = new Date().getTime();\n\t\tlet context: IRequestContext | undefined, error: any, total: number = 0;\n\n\t\ttry {\n\t\t\tcontext = await this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api('/extensionquery'),\n\t\t\t\tdata,\n\t\t\t\theaders\n\t\t\t}, token);\n\n\t\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\t\treturn { galleryExtensions: [], total };\n\t\t\t}\n\n\t\t\tconst result = await asJson<IRawGalleryQueryResult>(context);\n\t\t\tif (result) {\n\t\t\t\tconst r = result.results[0];\n\t\t\t\tconst galleryExtensions = r.extensions;\n\t\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\t\ttotal = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\t\treturn { galleryExtensions, total };\n\t\t\t}\n\t\t\treturn { galleryExtensions: [], total };\n\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceQueryEvent, GalleryServiceQueryClassification>('galleryService:query', {\n\t\t\t\t...query.telemetryData,\n\t\t\t\trequestBodySize: String(data.length),\n\t\t\t\tduration: new Date().getTime() - startTime,\n\t\t\t\tsuccess: !!context && isSuccess(context),\n\t\t\t\tresponseBodySize: context?.res.headers['Content-Length'],\n\t\t\t\tstatusCode: context ? String(context.res.statusCode) : undefined,\n\t\t\t\terrorCode: error\n\t\t\t\t\t? isPromiseCanceledError(error) ? 'canceled' : getErrorMessage(error).startsWith('XHR timeout') ? 'timeout' : 'failed'\n\t\t\t\t\t: undefined,\n\t\t\t\tcount: String(total)\n\t\t\t});\n\t\t}\n\t}\n\n\tasync reportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst headers = { ...commonHeaders, Accept: '*/*;api-version=4.0-preview.1' };\n\t\ttry {\n\t\t\tawait this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`),\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None);\n\t\t} catch (error) { /* Ignore */ }\n\t}\n\n\tasync download(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', { ...data, duration });\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}&${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}?${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\tconst context = await this.getAsset(downloadAsset);\n\t\tawait this.fileService.writeFile(location, context.stream);\n\t\tlog(new Date().getTime() - startTime);\n\t}\n\n\tasync getReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\tconst context = await this.getAsset(extension.assets.readme, {}, token);\n\t\t\tconst content = await asText(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\tconst context = await this.getAsset(extension.assets.manifest, {}, token);\n\t\t\tconst text = await asText(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync getCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations.filter(t => t[0] === languageId.toUpperCase())[0];\n\t\tif (asset) {\n\t\t\tconst context = await this.getAsset(asset[1]);\n\t\t\tconst text = await asText(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync getChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\tconst context = await this.getAsset(extension.assets.changelog, {}, token);\n\t\t\tconst content = await asText(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\tconst result: IGalleryExtensionVersion[] = [];\n\t\tconst { galleryExtensions } = await this.queryGallery(query, CancellationToken.None);\n\t\tif (galleryExtensions.length) {\n\t\t\tif (compatible) {\n\t\t\t\tawait Promise.all(galleryExtensions[0].versions.map(async v => {\n\t\t\t\t\tlet engine: string | undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tengine = await this.getEngine(v);\n\t\t\t\t\t} catch (error) { /* Ignore error and skip version */ }\n\t\t\t\t\tif (engine && isEngineValid(engine, this.productService.version)) {\n\t\t\t\t\t\tresult.push({ version: v!.version, date: v!.lastUpdated });\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tresult.push(...galleryExtensions[0].versions.map(v => ({ version: v.version, date: v.lastUpdated })));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst baseOptions = { type: 'GET' };\n\t\tconst headers = { ...commonHeaders, ...(options.headers || {}) };\n\t\toptions = { ...options, ...baseOptions, headers };\n\n\t\tconst url = asset.uri;\n\t\tconst fallbackUrl = asset.fallbackUri;\n\t\tconst firstOptions = { ...options, url };\n\n\t\ttry {\n\t\t\tconst context = await this.requestService.request(firstOptions, token);\n\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\treturn context;\n\t\t\t}\n\t\t\tconst message = await asText(context);\n\t\t\tthrow new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`);\n\t\t} catch (err) {\n\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\tconst message = getErrorMessage(err);\n\t\t\ttype GalleryServiceCDNFallbackClassification = {\n\t\t\t\turl: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tmessage: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype GalleryServiceCDNFallbackEvent = {\n\t\t\t\turl: string;\n\t\t\t\tmessage: string;\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceCDNFallbackEvent, GalleryServiceCDNFallbackClassification>('galleryService:cdnFallback', { url, message });\n\n\t\t\tconst fallbackOptions = { ...options, url: fallbackUrl };\n\t\t\treturn this.requestService.request(fallbackOptions, token);\n\t\t}\n\t}\n\n\tprivate async getLastValidExtensionVersion(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tconst version = this.getLastValidExtensionVersionFromProperties(extension, versions);\n\t\tif (version) {\n\t\t\treturn version;\n\t\t}\n\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions);\n\t}\n\n\tprivate getLastValidExtensionVersionFromProperties(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): IRawGalleryExtensionVersion | null {\n\t\tfor (const version of versions) {\n\t\t\tconst engine = getEngine(version);\n\t\t\tif (!engine) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (isEngineValid(engine, this.productService.version)) {\n\t\t\t\treturn version;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async getEngine(version: IRawGalleryExtensionVersion): Promise<string> {\n\t\tconst engine = getEngine(version);\n\t\tif (engine) {\n\t\t\treturn engine;\n\t\t}\n\n\t\tconst manifestAsset = getVersionAsset(version, AssetType.Manifest);\n\t\tif (!manifestAsset) {\n\t\t\tthrow new Error('Manifest was not found');\n\t\t}\n\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\tconst context = await this.getAsset(manifestAsset, { headers });\n\t\tconst manifest = await asJson<IExtensionManifest>(context);\n\t\tif (manifest) {\n\t\t\treturn manifest.engines.vscode;\n\t\t}\n\n\t\tthrow new Error('Error while reading manifest');\n\t}\n\n\tprivate async getLastValidExtensionVersionRecursively(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tif (!versions.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst version = versions[0];\n\t\tconst engine = await this.getEngine(version);\n\t\tif (!isEngineValid(engine, this.productService.version)) {\n\t\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions.slice(1));\n\t\t}\n\n\t\tversion.properties = version.properties || [];\n\t\tversion.properties.push({ key: PropertyType.Engine, value: engine });\n\t\treturn version;\n\t}\n\n\tasync getExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst context = await this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None);\n\t\tif (context.res.statusCode !== 200) {\n\t\t\tthrow new Error('Could not get extensions report.');\n\t\t}\n\n\t\tconst result = await asJson<IRawExtensionsReport>(context);\n\t\tconst map = new Map<string, IReportedExtension>();\n\n\t\tif (result) {\n\t\t\tfor (const id of result.malicious) {\n\t\t\t\tconst ext = map.get(id) || { id: { id }, malicious: true, slow: false };\n\t\t\t\text.malicious = true;\n\t\t\t\tmap.set(id, ext);\n\t\t\t}\n\t\t}\n\n\t\treturn [...map.values()];\n\t}\n}\n\nexport async function resolveMarketplaceHeaders(version: string, environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope, target: StorageTarget) => void\n} | undefined): Promise<{ [key: string]: string; }> {\n\tconst headers: IHeaders = {\n\t\t'X-Market-Client-Id': `VSCode ${version}`,\n\t\t'User-Agent': `VSCode ${version}`\n\t};\n\tconst uuid = await getServiceMachineId(environmentService, fileService, storageService);\n\theaders['X-Market-User-Id'] = uuid;\n\treturn headers;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport product from 'vs/platform/product/common/product';\nimport { localize } from 'vs/nls';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions, ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport interface ITelemetryServiceConfig {\n\tappender: ITelemetryAppender;\n\tsendErrorTelemetry?: boolean;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic readonly IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic readonly IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _appender: ITelemetryAppender;\n\tprivate _commonProperties: Promise<{ [name: string]: any; }>;\n\tprivate _experimentProperties: { [name: string]: string } = {};\n\tprivate _piiPaths: string[];\n\tprivate _userOptIn: boolean;\n\tprivate _enabled: boolean;\n\tpublic readonly sendErrorTelemetry: boolean;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@optional(IConfigurationService) private _configurationService: IConfigurationService\n\t) {\n\t\tthis._appender = config.appender;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._userOptIn = true;\n\t\tthis._enabled = true;\n\t\tthis.sendErrorTelemetry = !!config.sendErrorTelemetry;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (let piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\t\tif (this._configurationService) {\n\t\t\tthis._updateUserOptIn();\n\t\t\tthis._configurationService.onDidChangeConfiguration(this._updateUserOptIn, this, this._disposables);\n\t\t\ttype OptInClassification = {\n\t\t\t\toptIn: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t};\n\t\t\ttype OptInEvent = {\n\t\t\t\toptIn: boolean;\n\t\t\t};\n\t\t\tthis.publicLog2<OptInEvent, OptInClassification>('optInStatus', { optIn: this._userOptIn });\n\n\t\t\tthis._commonProperties.then(values => {\n\t\t\t\tconst isHashedId = /^[a-f0-9]+$/i.test(values['common.machineId']);\n\n\t\t\t\ttype MachineIdFallbackClassification = {\n\t\t\t\t\tusingFallbackGuid: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t\t};\n\t\t\t\tthis.publicLog2<{ usingFallbackGuid: boolean }, MachineIdFallbackClassification>('machineIdFallback', { usingFallbackGuid: !isHashedId });\n\t\t\t});\n\t\t}\n\t}\n\n\tsetExperimentProperty(name: string, value: string): void {\n\t\tthis._experimentProperties[name] = value;\n\t}\n\n\tsetEnabled(value: boolean): void {\n\t\tthis._enabled = value;\n\t}\n\n\tprivate _updateUserOptIn(): void {\n\t\tconst config = this._configurationService?.getValue<any>(TELEMETRY_SECTION_ID);\n\t\tthis._userOptIn = config ? config.enableTelemetry : this._userOptIn;\n\t}\n\n\tget isOptedIn(): boolean {\n\t\treturn this._userOptIn && this._enabled;\n\t}\n\n\tasync getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\tconst values = await this._commonProperties;\n\n\t\t// well known properties\n\t\tlet sessionId = values['sessionID'];\n\t\tlet instanceId = values['common.instanceId'];\n\t\tlet machineId = values['common.machineId'];\n\t\tlet firstSessionDate = values['common.firstSessionDate'];\n\t\tlet msftInternal = values['common.msftInternal'];\n\n\t\treturn { sessionId, instanceId, machineId, firstSessionDate, msftInternal };\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (!this.isOptedIn) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (next) add experiment properties\n\t\t\tdata = mixin(data, this._experimentProperties);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\tthis._appender.log(eventName, data);\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this.publicLog(eventName, data as ITelemetryData, anonymizeFilePaths);\n\t}\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<any> {\n\t\tif (!this.sendErrorTelemetry) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// Send error event and anonymize paths\n\t\treturn this.publicLog(errorEventName, data, true);\n\t}\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<any> {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tprivate _cleanupInfo(stack: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedStack = stack;\n\n\t\tif (anonymizeFilePaths) {\n\t\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\t\tlet lastIndex = 0;\n\t\t\tupdatedStack = '';\n\n\t\t\twhile (true) {\n\t\t\t\tconst result = fileRegex.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastIndex < stack.length) {\n\t\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t\t}\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\tupdatedStack = updatedStack.replace(regexp, '');\n\t\t}\n\t\treturn updatedStack;\n\t}\n}\n\n\nconst TELEMETRY_SECTION_ID = 'telemetry';\n\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t'telemetry.enableTelemetry': {\n\t\t\t'type': 'boolean',\n\t\t\t'markdownDescription':\n\t\t\t\t!product.privacyStatementUrl ?\n\t\t\t\t\tlocalize('telemetry.enableTelemetry', \"Enable usage data and errors to be sent to a Microsoft online service.\") :\n\t\t\t\t\tlocalize('telemetry.enableTelemetryMd', \"Enable usage data and errors to be sent to a Microsoft online service. Read our privacy statement [here]({0}).\", product.privacyStatementUrl),\n\t\t\t'default': true,\n\t\t\t'restricted': true,\n\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t'tags': ['usesOnlineServices']\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, ConfigurationTarget, ConfigurationTargetToString } from 'vs/platform/configuration/common/configuration';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData, ICustomEndpointTelemetryService, ITelemetryEndpoint } from 'vs/platform/telemetry/common/telemetry';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { isObject } from 'vs/base/common/types';\nimport { Promises } from 'vs/base/common/async';\n\nexport const NullTelemetryService = new class implements ITelemetryService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly sendErrorTelemetry = false;\n\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLog(eventName, data as ITelemetryData);\n\t}\n\tpublicLogError(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tsetExperimentProperty() { }\n\tsetEnabled() { }\n\tisOptedIn = true;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId',\n\t\t\tfirstSessionDate: 'someValue.firstSessionDate'\n\t\t});\n\t}\n};\n\nexport class NullEndpointTelemetryService implements ICustomEndpointTelemetryService {\n\t_serviceBrand: undefined;\n\n\tasync publicLog(_endpoint: ITelemetryEndpoint, _eventName: string, _data?: ITelemetryData): Promise<void> {\n\t\t// noop\n\t}\n\n\tasync publicLogError(_endpoint: ITelemetryEndpoint, _errorEventName: string, _data?: ITelemetryData): Promise<void> {\n\t\t// noop\n\t}\n}\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tflush(): Promise<any>;\n}\n\nexport function combinedAppender(...appenders: ITelemetryAppender[]): ITelemetryAppender {\n\treturn {\n\t\tlog: (e, d) => appenders.forEach(a => a.log(e, d)),\n\t\tflush: () => Promises.settled(appenders.map(a => a.flush()))\n\t};\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, flush: () => Promise.resolve(null) };\n\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\ttype UpdateConfigurationClassification = {\n\t\t\t\tconfigurationSource: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tconfigurationKeys: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype UpdateConfigurationEvent = {\n\t\t\t\tconfigurationSource: string;\n\t\t\t\tconfigurationKeys: string[];\n\t\t\t};\n\t\t\ttelemetryService.publicLog2<UpdateConfigurationEvent, UpdateConfigurationClassification>('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport interface Properties {\n\t[key: string]: string;\n}\n\nexport interface Measurements {\n\t[key: string]: number;\n}\n\nexport function validateTelemetryData(data?: any): { properties: Properties, measurements: Measurements } {\n\n\tconst properties: Properties = Object.create(null);\n\tconst measurements: Measurements = Object.create(null);\n\n\tconst flat = Object.create(null);\n\tflatten(data, flat);\n\n\tfor (let prop in flat) {\n\t\t// enforce property names less than 150 char, take the last 150 char\n\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\tconst value = flat[prop];\n\n\t\tif (typeof value === 'number') {\n\t\t\tmeasurements[prop] = value;\n\n\t\t} else if (typeof value === 'boolean') {\n\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t} else if (typeof value === 'string') {\n\t\t\t//enforce property value to be less than 1024 char, take the first 1024 char\n\t\t\tproperties[prop] = value.substring(0, 1023);\n\n\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\tproperties[prop] = value;\n\t\t}\n\t}\n\n\treturn {\n\t\tproperties,\n\t\tmeasurements\n\t};\n}\n\nexport function cleanRemoteAuthority(remoteAuthority?: string): string {\n\tif (!remoteAuthority) {\n\t\treturn 'none';\n\t}\n\n\tlet ret = 'other';\n\tconst allowedAuthorities = ['ssh-remote', 'dev-container', 'attached-container', 'wsl'];\n\tallowedAuthorities.forEach((res: string) => {\n\t\tif (remoteAuthority!.indexOf(`${res}+`) === 0) {\n\t\t\tret = res;\n\t\t}\n\t});\n\n\treturn ret;\n}\n\nfunction flatten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\tif (!obj) {\n\t\treturn;\n\t}\n\n\tfor (let item of Object.getOwnPropertyNames(obj)) {\n\t\tconst value = obj[item];\n\t\tconst index = prefix ? prefix + item : item;\n\n\t\tif (Array.isArray(value)) {\n\t\t\tresult[index] = safeStringify(value);\n\n\t\t} else if (value instanceof Date) {\n\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\tresult[index] = value.toISOString();\n\n\t\t} else if (isObject(value)) {\n\t\t\tif (order < 2) {\n\t\t\t\tflatten(value, result, order + 1, index + '.');\n\t\t\t} else {\n\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t}\n\t\t} else {\n\t\t\tresult[index] = value;\n\t\t}\n\t}\n}\n\nfunction flattenKeys(value: Object | undefined): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: { [key: string]: any } | undefined): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogger, ILoggerService } from 'vs/platform/log/common/log';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\n\nexport class TelemetryLogAppender extends Disposable implements ITelemetryAppender {\n\n\tprivate readonly logger: ILogger;\n\n\tconstructor(\n\t\t@ILoggerService loggerService: ILoggerService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\t\tthis.logger = this._register(loggerService.createLogger(environmentService.telemetryLogResource));\n\t\tthis.logger.info('The below are logs for every telemetry event sent from VS Code once the log level is set to trace.');\n\t\tthis.logger.info('===========================================================');\n\t}\n\n\tflush(): Promise<any> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tlog(eventName: string, data: any): void {\n\t\tthis.logger.trace(`telemetry/${eventName}`, validateTelemetryData(data));\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as appInsights from 'applicationinsights';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { mixin } from 'vs/base/common/objects';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\n\nasync function getClient(aiKey: string): Promise<appInsights.TelemetryClient> {\n\tconst appInsights = await import('applicationinsights');\n\tlet client: appInsights.TelemetryClient;\n\tif (appInsights.defaultClient) {\n\t\tclient = new appInsights.TelemetryClient(aiKey);\n\t\tclient.channel.setUseDiskRetryCaching(true);\n\t} else {\n\t\tappInsights.setup(aiKey)\n\t\t\t.setAutoCollectRequests(false)\n\t\t\t.setAutoCollectPerformance(false)\n\t\t\t.setAutoCollectExceptions(false)\n\t\t\t.setAutoCollectDependencies(false)\n\t\t\t.setAutoDependencyCorrelation(false)\n\t\t\t.setAutoCollectConsole(false)\n\t\t\t.setInternalLogging(false, false)\n\t\t\t.setUseDiskRetryCaching(true)\n\t\t\t.start();\n\t\tclient = appInsights.defaultClient;\n\t}\n\n\tif (aiKey.indexOf('AIF-') === 0) {\n\t\tclient.config.endpointUrl = 'https://vortex.data.microsoft.com/collect/v1';\n\t}\n\treturn client;\n}\n\n\nexport class AppInsightsAppender implements ITelemetryAppender {\n\n\tprivate _aiClient: string | appInsights.TelemetryClient | undefined;\n\tprivate _asyncAIClient: Promise<appInsights.TelemetryClient> | null;\n\n\tconstructor(\n\t\tprivate _eventPrefix: string,\n\t\tprivate _defaultData: { [key: string]: any } | null,\n\t\taiKeyOrClientFactory: string | (() => appInsights.TelemetryClient), // allow factory function for testing\n\t) {\n\t\tif (!this._defaultData) {\n\t\t\tthis._defaultData = Object.create(null);\n\t\t}\n\n\t\tif (typeof aiKeyOrClientFactory === 'function') {\n\t\t\tthis._aiClient = aiKeyOrClientFactory();\n\t\t} else {\n\t\t\tthis._aiClient = aiKeyOrClientFactory;\n\t\t}\n\t\tthis._asyncAIClient = null;\n\t}\n\n\tprivate _withAIClient(callback: (aiClient: appInsights.TelemetryClient) => void): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof this._aiClient !== 'string') {\n\t\t\tcallback(this._aiClient);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncAIClient) {\n\t\t\tthis._asyncAIClient = getClient(this._aiClient);\n\t\t}\n\n\t\tthis._asyncAIClient.then(\n\t\t\t(aiClient) => {\n\t\t\t\tcallback(aiClient);\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t);\n\t}\n\n\tlog(eventName: string, data?: any): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\t\tdata = mixin(data, this._defaultData);\n\t\tdata = validateTelemetryData(data);\n\n\t\tthis._withAIClient((aiClient) => aiClient.trackEvent({\n\t\t\tname: this._eventPrefix + '/' + eventName,\n\t\t\tproperties: data.properties,\n\t\t\tmeasurements: data.measurements\n\t\t}));\n\t}\n\n\tflush(): Promise<any> {\n\t\tif (this._aiClient) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis._withAIClient((aiClient) => {\n\t\t\t\t\taiClient.flush({\n\t\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t\t// all data flushed\n\t\t\t\t\t\t\tthis._aiClient = undefined;\n\t\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { statSync, readFileSync } from 'fs';\nimport { join } from 'vs/base/common/path';\n\nexport function buildTelemetryMessage(appRoot: string, extensionsPath?: string): string {\n\tconst mergedTelemetry = Object.create(null);\n\t// Simple function to merge the telemetry into one json object\n\tconst mergeTelemetry = (contents: string, dirName: string) => {\n\t\tconst telemetryData = JSON.parse(contents);\n\t\tmergedTelemetry[dirName] = telemetryData;\n\t};\n\tif (extensionsPath) {\n\t\t// Gets all the directories inside the extension directory\n\t\tconst dirs = readdirSync(extensionsPath).filter(files => {\n\t\t\t// This handles case where broken symbolic links can cause statSync to throw and error\n\t\t\ttry {\n\t\t\t\treturn statSync(join(extensionsPath, files)).isDirectory();\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tconst telemetryJsonFolders: string[] = [];\n\t\tdirs.forEach((dir) => {\n\t\t\tconst files = readdirSync(join(extensionsPath, dir)).filter(file => file === 'telemetry.json');\n\t\t\t// We know it contains a telemetry.json file so we add it to the list of folders which have one\n\t\t\tif (files.length === 1) {\n\t\t\t\ttelemetryJsonFolders.push(dir);\n\t\t\t}\n\t\t});\n\t\ttelemetryJsonFolders.forEach((folder) => {\n\t\t\tconst contents = readFileSync(join(extensionsPath, folder, 'telemetry.json')).toString();\n\t\t\tmergeTelemetry(contents, folder);\n\t\t});\n\t}\n\tlet contents = readFileSync(join(appRoot, 'telemetry-core.json')).toString();\n\tmergeTelemetry(contents, 'vscode-core');\n\tcontents = readFileSync(join(appRoot, 'telemetry-extensions.json')).toString();\n\tmergeTelemetry(contents, 'vscode-extensions');\n\treturn JSON.stringify(mergedTelemetry, null, 4);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { IProcessEnvironment, OperatingSystem } from 'vs/base/common/platform';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IGetTerminalLayoutInfoArgs, IProcessDetails, IPtyHostProcessReplayEvent, ISetTerminalLayoutInfoArgs } from 'vs/platform/terminal/common/terminalProcess';\n\nexport enum WindowsShellType {\n\tCommandPrompt = 'cmd',\n\tPowerShell = 'pwsh',\n\tWsl = 'wsl',\n\tGitBash = 'gitbash'\n}\nexport type TerminalShellType = WindowsShellType | undefined;\nexport interface IRawTerminalInstanceLayoutInfo<T> {\n\trelativeSize: number;\n\tterminal: T;\n}\nexport type ITerminalInstanceLayoutInfoById = IRawTerminalInstanceLayoutInfo<number>;\nexport type ITerminalInstanceLayoutInfo = IRawTerminalInstanceLayoutInfo<IPtyHostAttachTarget>;\n\nexport interface IRawTerminalTabLayoutInfo<T> {\n\tisActive: boolean;\n\tactivePersistentProcessId: number | undefined;\n\tterminals: IRawTerminalInstanceLayoutInfo<T>[];\n}\n\nexport type ITerminalTabLayoutInfoById = IRawTerminalTabLayoutInfo<number>;\nexport type ITerminalTabLayoutInfo = IRawTerminalTabLayoutInfo<IPtyHostAttachTarget | null>;\n\nexport interface IRawTerminalsLayoutInfo<T> {\n\ttabs: IRawTerminalTabLayoutInfo<T>[];\n}\n\nexport interface IPtyHostAttachTarget {\n\tid: number;\n\tpid: number;\n\ttitle: string;\n\tcwd: string;\n\tworkspaceId: string;\n\tworkspaceName: string;\n\tisOrphan: boolean;\n\ticon: string | undefined;\n}\n\nexport type ITerminalsLayoutInfo = IRawTerminalsLayoutInfo<IPtyHostAttachTarget | null>;\nexport type ITerminalsLayoutInfoById = IRawTerminalsLayoutInfo<number>;\n\nexport interface IRawTerminalInstanceLayoutInfo<T> {\n\trelativeSize: number;\n\tterminal: T;\n}\n\nexport enum TerminalIpcChannels {\n\t/**\n\t * Communicates between the renderer process and shared process.\n\t */\n\tLocalPty = 'localPty',\n\t/**\n\t * Communicates between the shared process and the pty host process.\n\t */\n\tPtyHost = 'ptyHost',\n\t/**\n\t * Deals with logging from the pty host process.\n\t */\n\tLog = 'log',\n\t/**\n\t * Enables the detection of unresponsive pty hosts.\n\t */\n\tHeartbeat = 'heartbeat'\n}\n\nexport interface IOffProcessTerminalService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Fired when the ptyHost process becomes non-responsive, this should disable stdin for all\n\t * terminals using this pty host connection and mark them as disconnected.\n\t */\n\tonPtyHostUnresponsive: Event<void>;\n\t/**\n\t * Fired when the ptyHost process becomes responsive after being non-responsive. Allowing\n\t * previously disconnected terminals to reconnect.\n\t */\n\tonPtyHostResponsive: Event<void>;\n\t/**\n\t * Fired when the ptyHost has been restarted, this is used as a signal for listening terminals\n\t * that its pty has been lost and will remain disconnected.\n\t */\n\tonPtyHostRestart: Event<void>;\n\n\tattachToProcess(id: number): Promise<ITerminalChildProcess | undefined>;\n\tlistProcesses(): Promise<IProcessDetails[]>;\n\tgetDefaultSystemShell(osOverride?: OperatingSystem): Promise<string>;\n\tgetShellEnvironment(): Promise<IProcessEnvironment>;\n\tsetTerminalLayoutInfo(layoutInfo?: ITerminalsLayoutInfoById): Promise<void>;\n\tgetTerminalLayoutInfo(): Promise<ITerminalsLayoutInfo | undefined>;\n\treduceConnectionGraceTime(): Promise<void>;\n}\n\nexport const ILocalTerminalService = createDecorator<ILocalTerminalService>('localTerminalService');\nexport interface ILocalTerminalService extends IOffProcessTerminalService {\n\tcreateProcess(shellLaunchConfig: IShellLaunchConfig, cwd: string, cols: number, rows: number, env: IProcessEnvironment, windowsEnableConpty: boolean, shouldPersist: boolean): Promise<ITerminalChildProcess>;\n}\n\nexport const IPtyService = createDecorator<IPtyService>('ptyService');\nexport interface IPtyService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onPtyHostExit?: Event<number>;\n\treadonly onPtyHostStart?: Event<void>;\n\treadonly onPtyHostUnresponsive?: Event<void>;\n\treadonly onPtyHostResponsive?: Event<void>;\n\treadonly onProcessData: Event<{ id: number, event: IProcessDataEvent | string }>;\n\treadonly onProcessExit: Event<{ id: number, event: number | undefined }>;\n\treadonly onProcessReady: Event<{ id: number, event: { pid: number, cwd: string } }>;\n\treadonly onProcessTitleChanged: Event<{ id: number, event: string }>;\n\treadonly onProcessShellTypeChanged: Event<{ id: number, event: TerminalShellType }>;\n\treadonly onProcessOverrideDimensions: Event<{ id: number, event: ITerminalDimensionsOverride | undefined }>;\n\treadonly onProcessResolvedShellLaunchConfig: Event<{ id: number, event: IShellLaunchConfig }>;\n\treadonly onProcessReplay: Event<{ id: number, event: IPtyHostProcessReplayEvent }>;\n\treadonly onProcessOrphanQuestion: Event<{ id: number }>;\n\n\trestartPtyHost?(): Promise<void>;\n\tshutdownAll?(): Promise<void>;\n\n\tcreateProcess(\n\t\tshellLaunchConfig: IShellLaunchConfig,\n\t\tcwd: string,\n\t\tcols: number,\n\t\trows: number,\n\t\tenv: IProcessEnvironment,\n\t\texecutableEnv: IProcessEnvironment,\n\t\twindowsEnableConpty: boolean,\n\t\tshouldPersist: boolean,\n\t\tworkspaceId: string,\n\t\tworkspaceName: string\n\t): Promise<number>;\n\tattachToProcess(id: number): Promise<void>;\n\tdetachFromProcess(id: number): Promise<void>;\n\n\t/**\n\t * Lists all orphaned processes, ie. those without a connected frontend.\n\t */\n\tlistProcesses(): Promise<IProcessDetails[]>;\n\n\tstart(id: number): Promise<ITerminalLaunchError | undefined>;\n\tshutdown(id: number, immediate: boolean): Promise<void>;\n\tinput(id: number, data: string): Promise<void>;\n\tresize(id: number, cols: number, rows: number): Promise<void>;\n\tgetInitialCwd(id: number): Promise<string>;\n\tgetCwd(id: number): Promise<string>;\n\tgetLatency(id: number): Promise<number>;\n\tacknowledgeDataEvent(id: number, charCount: number): Promise<void>;\n\tprocessBinary(id: number, data: string): Promise<void>;\n\t/** Confirm the process is _not_ an orphan. */\n\torphanQuestionReply(id: number): Promise<void>;\n\n\tgetDefaultSystemShell(osOverride?: OperatingSystem): Promise<string>;\n\tgetShellEnvironment(): Promise<IProcessEnvironment>;\n\tsetTerminalLayoutInfo(args: ISetTerminalLayoutInfoArgs): Promise<void>;\n\tgetTerminalLayoutInfo(args: IGetTerminalLayoutInfoArgs): Promise<ITerminalsLayoutInfo | undefined>;\n\treduceConnectionGraceTime(): Promise<void>;\n}\n\nexport enum HeartbeatConstants {\n\t/**\n\t * The duration between heartbeats\n\t */\n\tBeatInterval = 5000,\n\t/**\n\t * Defines a multiplier for BeatInterval for how long to wait before starting the second wait\n\t * timer.\n\t */\n\tFirstWaitMultiplier = 1.2,\n\t/**\n\t * Defines a multiplier for BeatInterval for how long to wait before telling the user about\n\t * non-responsiveness. The second timer is to avoid informing the user incorrectly when waking\n\t * the computer up from sleep\n\t */\n\tSecondWaitMultiplier = 1,\n\t/**\n\t * How long to wait before telling the user about non-responsiveness when they try to create a\n\t * process. This short circuits the standard wait timeouts to tell the user sooner and only\n\t * create process is handled to avoid additional perf overhead.\n\t */\n\tCreateProcessTimeout = 5000\n}\n\nexport interface IHeartbeatService {\n\treadonly onBeat: Event<void>;\n}\n\nexport interface IShellLaunchConfig {\n\t/**\n\t * The name of the terminal, if this is not set the name of the process will be used.\n\t */\n\tname?: string;\n\n\t/**\n\t * An string to follow the name of the terminal with, indicating a special kind of terminal\n\t */\n\tdescription?: string;\n\n\t/**\n\t * The shell executable (bash, cmd, etc.).\n\t */\n\texecutable?: string;\n\n\t/**\n\t * The CLI arguments to use with executable, a string[] is in argv format and will be escaped,\n\t * a string is in \"CommandLine\" pre-escaped format and will be used as is. The string option is\n\t * only supported on Windows and will throw an exception if used on macOS or Linux.\n\t */\n\targs?: string[] | string;\n\n\t/**\n\t * The current working directory of the terminal, this overrides the `terminal.integrated.cwd`\n\t * settings key.\n\t */\n\tcwd?: string | URI;\n\n\t/**\n\t * A custom environment for the terminal, if this is not set the environment will be inherited\n\t * from the VS Code process.\n\t */\n\tenv?: ITerminalEnvironment;\n\n\t/**\n\t * Whether to ignore a custom cwd from the `terminal.integrated.cwd` settings key (e.g. if the\n\t * shell is being launched by an extension).\n\t */\n\tignoreConfigurationCwd?: boolean;\n\n\t/** Whether to wait for a key press before closing the terminal. */\n\twaitOnExit?: boolean | string;\n\n\t/**\n\t * A string including ANSI escape sequences that will be written to the terminal emulator\n\t * _before_ the terminal process has launched, a trailing \\n is added at the end of the string.\n\t * This allows for example the terminal instance to display a styled message as the first line\n\t * of the terminal. Use \\x1b over \\033 or \\e for the escape control character.\n\t */\n\tinitialText?: string;\n\n\t/**\n\t * Custom PTY/pseudoterminal process to use.\n\t */\n\tcustomPtyImplementation?: (terminalId: number, cols: number, rows: number) => ITerminalChildProcess;\n\n\t/**\n\t * A UUID generated by the extension host process for terminals created on the extension host process.\n\t */\n\textHostTerminalId?: string;\n\n\t/**\n\t * This is a terminal that attaches to an already running terminal.\n\t */\n\tattachPersistentProcess?: { id: number; pid: number; title: string; cwd: string; icon?: string; };\n\n\t/**\n\t * Whether the terminal process environment should be exactly as provided in\n\t * `TerminalOptions.env`. When this is false (default), the environment will be based on the\n\t * window's environment and also apply configured platform settings like\n\t * `terminal.integrated.windows.env` on top. When this is true, the complete environment must be\n\t * provided as nothing will be inherited from the process or any configuration.\n\t */\n\tstrictEnv?: boolean;\n\n\t/**\n\t * When enabled the terminal will run the process as normal but not be surfaced to the user\n\t * until `Terminal.show` is called. The typical usage for this is when you need to run\n\t * something that may need interactivity but only want to tell the user about it when\n\t * interaction is needed. Note that the terminals will still be exposed to all extensions\n\t * as normal.\n\t */\n\thideFromUser?: boolean;\n\n\t/**\n\t * Whether this terminal is not a terminal that the user directly created and uses, but rather\n\t * a terminal used to drive some VS Code feature.\n\t */\n\tisFeatureTerminal?: boolean;\n\n\t/**\n\t * Whether this terminal was created by an extension.\n\t */\n\tisExtensionOwnedTerminal?: boolean;\n\n\t/**\n\t * The codicon ID to use for this terminal. If not specified it will use the default fallback\n\t * icon.\n\t */\n\ticon?: string;\n}\n\nexport interface IShellLaunchConfigDto {\n\tname?: string;\n\texecutable?: string;\n\targs?: string[] | string;\n\tcwd?: string | UriComponents;\n\tenv?: ITerminalEnvironment;\n\thideFromUser?: boolean;\n}\n\nexport interface ITerminalEnvironment {\n\t[key: string]: string | null | undefined;\n}\n\nexport interface ITerminalLaunchError {\n\tmessage: string;\n\tcode?: number;\n}\n\n/**\n * An interface representing a raw terminal child process, this contains a subset of the\n * child_process.ChildProcess node.js interface.\n */\nexport interface ITerminalChildProcess {\n\t/**\n\t * A unique identifier for the terminal process. Note that the uniqueness only applies to a\n\t * given pty service connection, IDs will be duplicated for remote and local terminals for\n\t * example. The ID will be 0 if it does not support reconnection.\n\t */\n\tid: number;\n\n\t/**\n\t * Whether the process should be persisted across reloads.\n\t */\n\tshouldPersist: boolean;\n\n\tonProcessData: Event<IProcessDataEvent | string>;\n\tonProcessExit: Event<number | undefined>;\n\tonProcessReady: Event<{ pid: number, cwd: string }>;\n\tonProcessTitleChanged: Event<string>;\n\tonProcessOverrideDimensions?: Event<ITerminalDimensionsOverride | undefined>;\n\tonProcessResolvedShellLaunchConfig?: Event<IShellLaunchConfig>;\n\tonProcessShellTypeChanged: Event<TerminalShellType>;\n\n\t/**\n\t * Starts the process.\n\t *\n\t * @returns undefined when the process was successfully started, otherwise an object containing\n\t * information on what went wrong.\n\t */\n\tstart(): Promise<ITerminalLaunchError | undefined>;\n\n\t/**\n\t * Detach the process from the UI and await reconnect.\n\t */\n\tdetach?(): void;\n\n\t/**\n\t * Shutdown the terminal process.\n\t *\n\t * @param immediate When true the process will be killed immediately, otherwise the process will\n\t * be given some time to make sure no additional data comes through.\n\t */\n\tshutdown(immediate: boolean): void;\n\tinput(data: string): void;\n\tprocessBinary(data: string): Promise<void>;\n\tresize(cols: number, rows: number): void;\n\n\t/**\n\t * Acknowledge a data event has been parsed by the terminal, this is used to implement flow\n\t * control to ensure remote processes to not get too far ahead of the client and flood the\n\t * connection.\n\t * @param charCount The number of characters being acknowledged.\n\t */\n\tacknowledgeDataEvent(charCount: number): void;\n\n\tgetInitialCwd(): Promise<string>;\n\tgetCwd(): Promise<string>;\n\tgetLatency(): Promise<number>;\n}\n\nexport const enum LocalReconnectConstants {\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t*/\n\tReconnectionGraceTime = 60000, // 60 seconds\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t*/\n\tReconnectionShortGraceTime = 6000, // 6 seconds\n}\n\nexport const enum FlowControlConstants {\n\t/**\n\t * The number of _unacknowledged_ chars to have been sent before the pty is paused in order for\n\t * the client to catch up.\n\t */\n\tHighWatermarkChars = 100000,\n\t/**\n\t * After flow control pauses the pty for the client the catch up, this is the number of\n\t * _unacknowledged_ chars to have been caught up to on the client before resuming the pty again.\n\t * This is used to attempt to prevent pauses in the flowing data; ideally while the pty is\n\t * paused the number of unacknowledged chars would always be greater than 0 or the client will\n\t * appear to stutter. In reality this balance is hard to accomplish though so heavy commands\n\t * will likely pause as latency grows, not flooding the connection is the important thing as\n\t * it's shared with other core functionality.\n\t */\n\tLowWatermarkChars = 5000,\n\t/**\n\t * The number characters that are accumulated on the client side before sending an ack event.\n\t * This must be less than or equal to LowWatermarkChars or the terminal max never unpause.\n\t */\n\tCharCountAckSize = 5000\n}\n\nexport interface IProcessDataEvent {\n\tdata: string;\n\ttrackCommit: boolean;\n\t/**\n\t * When trackCommit is set, this will be set to a promise that resolves when the data is parsed.\n\t */\n\twritePromise?: Promise<void>;\n}\n\nexport interface ITerminalDimensions {\n\t/**\n\t * The columns of the terminal.\n\t */\n\tcols: number;\n\n\t/**\n\t * The rows of the terminal.\n\t */\n\trows: number;\n}\n\nexport interface ITerminalDimensionsOverride extends Readonly<ITerminalDimensions> {\n\t/**\n\t * indicate that xterm must receive these exact dimensions, even if they overflow the ui!\n\t */\n\tforceExactSize?: boolean;\n}\n\nexport type SafeConfigProvider = <T>(key: string) => T | undefined;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IPtyService, IProcessDataEvent, IShellLaunchConfig, ITerminalDimensionsOverride, ITerminalLaunchError, ITerminalsLayoutInfo, TerminalIpcChannels, IHeartbeatService, HeartbeatConstants, TerminalShellType } from 'vs/platform/terminal/common/terminal';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { FileAccess } from 'vs/base/common/network';\nimport { ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IProcessEnvironment, OperatingSystem } from 'vs/base/common/platform';\nimport { Emitter } from 'vs/base/common/event';\nimport { LogLevelChannelClient } from 'vs/platform/log/common/logIpc';\nimport { IGetTerminalLayoutInfoArgs, IProcessDetails, IPtyHostProcessReplayEvent, ISetTerminalLayoutInfoArgs } from 'vs/platform/terminal/common/terminalProcess';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nenum Constants {\n\tMaxRestarts = 5\n}\n\n/**\n * Tracks the last terminal ID from the pty host so we can give it to the new pty host if it's\n * restarted and avoid ID conflicts.\n */\nlet lastPtyId = 0;\n\n/**\n * This service implements IPtyService by launching a pty host process, forwarding messages to and\n * from the pty host process and manages the connection.\n */\nexport class PtyHostService extends Disposable implements IPtyService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _client: Client;\n\t// ProxyChannel is not used here because events get lost when forwarding across multiple proxies\n\tprivate _proxy: IPtyService;\n\n\tprivate _restartCount = 0;\n\tprivate _isResponsive = true;\n\tprivate _isDisposed = false;\n\n\tprivate _heartbeatFirstTimeout?: NodeJS.Timeout;\n\tprivate _heartbeatSecondTimeout?: NodeJS.Timeout;\n\n\tprivate readonly _onPtyHostExit = this._register(new Emitter<number>());\n\treadonly onPtyHostExit = this._onPtyHostExit.event;\n\tprivate readonly _onPtyHostStart = this._register(new Emitter<void>());\n\treadonly onPtyHostStart = this._onPtyHostStart.event;\n\tprivate readonly _onPtyHostUnresponsive = this._register(new Emitter<void>());\n\treadonly onPtyHostUnresponsive = this._onPtyHostUnresponsive.event;\n\tprivate readonly _onPtyHostResponsive = this._register(new Emitter<void>());\n\treadonly onPtyHostResponsive = this._onPtyHostResponsive.event;\n\tprivate readonly _onProcessData = this._register(new Emitter<{ id: number, event: IProcessDataEvent | string }>());\n\treadonly onProcessData = this._onProcessData.event;\n\tprivate readonly _onProcessExit = this._register(new Emitter<{ id: number, event: number | undefined }>());\n\treadonly onProcessExit = this._onProcessExit.event;\n\tprivate readonly _onProcessReady = this._register(new Emitter<{ id: number, event: { pid: number, cwd: string } }>());\n\treadonly onProcessReady = this._onProcessReady.event;\n\tprivate readonly _onProcessReplay = this._register(new Emitter<{ id: number, event: IPtyHostProcessReplayEvent }>());\n\treadonly onProcessReplay = this._onProcessReplay.event;\n\tprivate readonly _onProcessTitleChanged = this._register(new Emitter<{ id: number, event: string }>());\n\treadonly onProcessTitleChanged = this._onProcessTitleChanged.event;\n\tprivate readonly _onProcessShellTypeChanged = this._register(new Emitter<{ id: number, event: TerminalShellType }>());\n\treadonly onProcessShellTypeChanged = this._onProcessShellTypeChanged.event;\n\tprivate readonly _onProcessOverrideDimensions = this._register(new Emitter<{ id: number, event: ITerminalDimensionsOverride | undefined }>());\n\treadonly onProcessOverrideDimensions = this._onProcessOverrideDimensions.event;\n\tprivate readonly _onProcessResolvedShellLaunchConfig = this._register(new Emitter<{ id: number, event: IShellLaunchConfig }>());\n\treadonly onProcessResolvedShellLaunchConfig = this._onProcessResolvedShellLaunchConfig.event;\n\tprivate readonly _onProcessOrphanQuestion = this._register(new Emitter<{ id: number }>());\n\treadonly onProcessOrphanQuestion = this._onProcessOrphanQuestion.event;\n\n\tconstructor(\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(toDisposable(() => this._disposePtyHost()));\n\n\t\t[this._client, this._proxy] = this._startPtyHost();\n\t}\n\n\tprivate _startPtyHost(): [Client, IPtyService] {\n\t\tconst client = new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'Pty Host',\n\t\t\t\targs: ['--type=ptyHost'],\n\t\t\t\tenv: {\n\t\t\t\t\tVSCODE_LAST_PTY_ID: lastPtyId,\n\t\t\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/platform/terminal/node/ptyHostMain',\n\t\t\t\t\tVSCODE_PIPE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_VERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tthis._onPtyHostStart.fire();\n\n\t\t// Setup heartbeat service and trigger a heartbeat immediately to reset the timeouts\n\t\tconst heartbeatService = ProxyChannel.toService<IHeartbeatService>(client.getChannel(TerminalIpcChannels.Heartbeat));\n\t\theartbeatService.onBeat(() => this._handleHeartbeat());\n\t\tthis._handleHeartbeat();\n\n\t\t// Handle exit\n\t\tthis._register(client.onDidProcessExit(e => {\n\t\t\t/* __GDPR__\n\t\t\t\t\"ptyHost/exit\" : {}\n\t\t\t*/\n\t\t\tthis._telemetryService.publicLog('ptyHost/exit');\n\t\t\tthis._onPtyHostExit.fire(e.code);\n\t\t\tif (!this._isDisposed) {\n\t\t\t\tif (this._restartCount <= Constants.MaxRestarts) {\n\t\t\t\t\tthis._logService.error(`ptyHost terminated unexpectedly with code ${e.code}`);\n\t\t\t\t\tthis._restartCount++;\n\t\t\t\t\tthis.restartPtyHost();\n\t\t\t\t} else {\n\t\t\t\t\tthis._logService.error(`ptyHost terminated unexpectedly with code ${e.code}, giving up`);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Setup logging\n\t\tconst logChannel = client.getChannel(TerminalIpcChannels.Log);\n\t\tthis._register(this._logService.onDidChangeLogLevel(() => {\n\t\t\tLogLevelChannelClient.setLevel(logChannel, this._logService.getLevel());\n\t\t}));\n\n\t\t// Create proxy and forward events\n\t\tconst proxy = ProxyChannel.toService<IPtyService>(client.getChannel(TerminalIpcChannels.PtyHost));\n\t\tthis._register(proxy.onProcessData(e => this._onProcessData.fire(e)));\n\t\tthis._register(proxy.onProcessExit(e => this._onProcessExit.fire(e)));\n\t\tthis._register(proxy.onProcessReady(e => this._onProcessReady.fire(e)));\n\t\tthis._register(proxy.onProcessTitleChanged(e => this._onProcessTitleChanged.fire(e)));\n\t\tthis._register(proxy.onProcessShellTypeChanged(e => this._onProcessShellTypeChanged.fire(e)));\n\t\tthis._register(proxy.onProcessOverrideDimensions(e => this._onProcessOverrideDimensions.fire(e)));\n\t\tthis._register(proxy.onProcessResolvedShellLaunchConfig(e => this._onProcessResolvedShellLaunchConfig.fire(e)));\n\t\tthis._register(proxy.onProcessReplay(e => this._onProcessReplay.fire(e)));\n\t\tthis._register(proxy.onProcessOrphanQuestion(e => this._onProcessOrphanQuestion.fire(e)));\n\n\t\treturn [client, proxy];\n\t}\n\n\toverride dispose() {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n\n\tasync createProcess(shellLaunchConfig: IShellLaunchConfig, cwd: string, cols: number, rows: number, env: IProcessEnvironment, executableEnv: IProcessEnvironment, windowsEnableConpty: boolean, shouldPersist: boolean, workspaceId: string, workspaceName: string): Promise<number> {\n\t\tconst timeout = setTimeout(() => this._handleUnresponsiveCreateProcess(), HeartbeatConstants.CreateProcessTimeout);\n\t\tconst id = await this._proxy.createProcess(shellLaunchConfig, cwd, cols, rows, env, executableEnv, windowsEnableConpty, shouldPersist, workspaceId, workspaceName);\n\t\tclearTimeout(timeout);\n\t\tlastPtyId = Math.max(lastPtyId, id);\n\t\treturn id;\n\t}\n\tattachToProcess(id: number): Promise<void> {\n\t\treturn this._proxy.attachToProcess(id);\n\t}\n\tdetachFromProcess(id: number): Promise<void> {\n\t\treturn this._proxy.detachFromProcess(id);\n\t}\n\tlistProcesses(): Promise<IProcessDetails[]> {\n\t\treturn this._proxy.listProcesses();\n\t}\n\treduceConnectionGraceTime(): Promise<void> {\n\t\treturn this._proxy.reduceConnectionGraceTime();\n\t}\n\tstart(id: number): Promise<ITerminalLaunchError | undefined> {\n\t\treturn this._proxy.start(id);\n\t}\n\tshutdown(id: number, immediate: boolean): Promise<void> {\n\t\treturn this._proxy.shutdown(id, immediate);\n\t}\n\tinput(id: number, data: string): Promise<void> {\n\t\treturn this._proxy.input(id, data);\n\t}\n\tprocessBinary(id: number, data: string): Promise<void> {\n\t\treturn this._proxy.processBinary(id, data);\n\t}\n\tresize(id: number, cols: number, rows: number): Promise<void> {\n\t\treturn this._proxy.resize(id, cols, rows);\n\t}\n\tacknowledgeDataEvent(id: number, charCount: number): Promise<void> {\n\t\treturn this._proxy.acknowledgeDataEvent(id, charCount);\n\t}\n\tgetInitialCwd(id: number): Promise<string> {\n\t\treturn this._proxy.getInitialCwd(id);\n\t}\n\tgetCwd(id: number): Promise<string> {\n\t\treturn this._proxy.getCwd(id);\n\t}\n\tgetLatency(id: number): Promise<number> {\n\t\treturn this._proxy.getLatency(id);\n\t}\n\torphanQuestionReply(id: number): Promise<void> {\n\t\treturn this._proxy.orphanQuestionReply(id);\n\t}\n\n\tgetDefaultSystemShell(osOverride?: OperatingSystem): Promise<string> {\n\t\treturn this._proxy.getDefaultSystemShell(osOverride);\n\t}\n\tgetShellEnvironment(): Promise<IProcessEnvironment> {\n\t\treturn this._proxy.getShellEnvironment();\n\t}\n\n\tsetTerminalLayoutInfo(args: ISetTerminalLayoutInfoArgs): Promise<void> {\n\t\treturn this._proxy.setTerminalLayoutInfo(args);\n\t}\n\tasync getTerminalLayoutInfo(args: IGetTerminalLayoutInfoArgs): Promise<ITerminalsLayoutInfo | undefined> {\n\t\treturn await this._proxy.getTerminalLayoutInfo(args);\n\t}\n\n\tasync restartPtyHost(): Promise<void> {\n\t\t/* __GDPR__\n\t\t\t\"ptyHost/restart\" : {}\n\t\t*/\n\t\tthis._telemetryService.publicLog('ptyHost/restart');\n\t\tthis._isResponsive = true;\n\t\tthis._disposePtyHost();\n\t\t[this._client, this._proxy] = this._startPtyHost();\n\t}\n\n\tprivate _disposePtyHost(): void {\n\t\tif (this._proxy.shutdownAll) {\n\t\t\tthis._proxy.shutdownAll();\n\t\t}\n\t\tthis._client.dispose();\n\t}\n\n\tprivate _handleHeartbeat() {\n\t\tthis._clearHeartbeatTimeouts();\n\t\tthis._heartbeatFirstTimeout = setTimeout(() => this._handleHeartbeatFirstTimeout(), HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier);\n\t\tif (!this._isResponsive) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"ptyHost/responsive\" : {}\n\t\t\t*/\n\t\t\tthis._telemetryService.publicLog('ptyHost/responsive');\n\t\t\tthis._isResponsive = true;\n\t\t}\n\t\tthis._onPtyHostResponsive.fire();\n\t}\n\n\tprivate _handleHeartbeatFirstTimeout() {\n\t\tthis._logService.warn(`No ptyHost heartbeat after ${HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier / 1000} seconds`);\n\t\tthis._heartbeatFirstTimeout = undefined;\n\t\tthis._heartbeatSecondTimeout = setTimeout(() => this._handleHeartbeatSecondTimeout(), HeartbeatConstants.BeatInterval * HeartbeatConstants.SecondWaitMultiplier);\n\t}\n\n\tprivate _handleHeartbeatSecondTimeout() {\n\t\tthis._logService.error(`No ptyHost heartbeat after ${(HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier + HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier) / 1000} seconds`);\n\t\tthis._heartbeatSecondTimeout = undefined;\n\t\tif (this._isResponsive) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"ptyHost/responsive\" : {}\n\t\t\t*/\n\t\t\tthis._telemetryService.publicLog('ptyHost/unresponsive');\n\t\t\tthis._isResponsive = false;\n\t\t}\n\t\tthis._onPtyHostUnresponsive.fire();\n\t}\n\n\tprivate _handleUnresponsiveCreateProcess() {\n\t\tthis._clearHeartbeatTimeouts();\n\t\tthis._logService.error(`No ptyHost response to createProcess after ${HeartbeatConstants.CreateProcessTimeout / 1000} seconds`);\n\t\t/* __GDPR__\n\t\t\t\"ptyHost/responsive\" : {}\n\t\t*/\n\t\tthis._telemetryService.publicLog('ptyHost/responsive');\n\t\tthis._onPtyHostUnresponsive.fire();\n\t}\n\n\tprivate _clearHeartbeatTimeouts() {\n\t\tif (this._heartbeatFirstTimeout) {\n\t\t\tclearTimeout(this._heartbeatFirstTimeout);\n\t\t\tthis._heartbeatFirstTimeout = undefined;\n\t\t}\n\t\tif (this._heartbeatSecondTimeout) {\n\t\t\tclearTimeout(this._heartbeatSecondTimeout);\n\t\t\tthis._heartbeatSecondTimeout = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { joinPath, basenameOrAuthority } from 'vs/base/common/resources';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspaceIdentifier, IStoredWorkspaceFolder, ISingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { IWorkspaceFolderProvider } from 'vs/base/common/labels';\n\nexport const IWorkspaceContextService = createDecorator<IWorkspaceContextService>('contextService');\n\nexport interface IWorkspaceContextService extends IWorkspaceFolderProvider {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event which fires on workbench state changes.\n\t */\n\treadonly onDidChangeWorkbenchState: Event<WorkbenchState>;\n\n\t/**\n\t * An event which fires on workspace name changes.\n\t */\n\treadonly onDidChangeWorkspaceName: Event<void>;\n\n\t/**\n\t * An event which fires before workspace folders change.\n\t */\n\treadonly onWillChangeWorkspaceFolders: Event<IWorkspaceFoldersWillChangeEvent>;\n\n\t/**\n\t * An event which fires on workspace folders change.\n\t */\n\treadonly onDidChangeWorkspaceFolders: Event<IWorkspaceFoldersChangeEvent>;\n\n\t/**\n\t * Provides access to the complete workspace object.\n\t */\n\tgetCompleteWorkspace(): Promise<IWorkspace>;\n\n\t/**\n\t * Provides access to the workspace object the window is running with.\n\t * Use `getCompleteWorkspace` to get complete workspace object.\n\t */\n\tgetWorkspace(): IWorkspace;\n\n\t/**\n\t * Return the state of the workbench.\n\t *\n\t * WorkbenchState.EMPTY - if the workbench was opened with empty window or file\n\t * WorkbenchState.FOLDER - if the workbench was opened with a folder\n\t * WorkbenchState.WORKSPACE - if the workbench was opened with a workspace\n\t */\n\tgetWorkbenchState(): WorkbenchState;\n\n\t/**\n\t * Returns the folder for the given resource from the workspace.\n\t * Can be null if there is no workspace or the resource is not inside the workspace.\n\t */\n\tgetWorkspaceFolder(resource: URI): IWorkspaceFolder | null;\n\n\t/**\n\t * Return `true` if the current workspace has the given identifier or root URI otherwise `false`.\n\t */\n\tisCurrentWorkspace(workspaceIdOrFolder: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI): boolean;\n\n\t/**\n\t * Returns if the provided resource is inside the workspace or not.\n\t */\n\tisInsideWorkspace(resource: URI): boolean;\n}\n\nexport const enum WorkbenchState {\n\tEMPTY = 1,\n\tFOLDER,\n\tWORKSPACE\n}\n\nexport interface IWorkspaceFoldersWillChangeEvent {\n\tjoin(promise: Promise<void>): void;\n\treadonly changes: IWorkspaceFoldersChangeEvent;\n\treadonly fromCache: boolean;\n}\n\nexport interface IWorkspaceFoldersChangeEvent {\n\tadded: IWorkspaceFolder[];\n\tremoved: IWorkspaceFolder[];\n\tchanged: IWorkspaceFolder[];\n}\n\nexport interface IWorkspace {\n\n\t/**\n\t * the unique identifier of the workspace.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * Folders in the workspace.\n\t */\n\treadonly folders: IWorkspaceFolder[];\n\n\t/**\n\t * the location of the workspace configuration\n\t */\n\treadonly configuration?: URI | null;\n}\n\nexport function isWorkspace(thing: unknown): thing is IWorkspace {\n\tconst candidate = thing as IWorkspace | undefined;\n\n\treturn !!(candidate && typeof candidate === 'object'\n\t\t&& typeof candidate.id === 'string'\n\t\t&& Array.isArray(candidate.folders));\n}\n\nexport interface IWorkspaceFolderData {\n\n\t/**\n\t * The associated URI for this workspace folder.\n\t */\n\treadonly uri: URI;\n\n\t/**\n\t * The name of this workspace folder. Defaults to\n\t * the basename of its [uri-path](#Uri.path)\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The ordinal number of this workspace folder.\n\t */\n\treadonly index: number;\n}\n\nexport interface IWorkspaceFolder extends IWorkspaceFolderData {\n\n\t/**\n\t * Given workspace folder relative path, returns the resource with the absolute path.\n\t */\n\ttoResource: (relativePath: string) => URI;\n}\n\nexport function isWorkspaceFolder(thing: unknown): thing is IWorkspaceFolder {\n\tconst candidate = thing as IWorkspaceFolder;\n\n\treturn !!(candidate && typeof candidate === 'object'\n\t\t&& URI.isUri(candidate.uri)\n\t\t&& typeof candidate.name === 'string'\n\t\t&& typeof candidate.toResource === 'function');\n}\n\nexport class Workspace implements IWorkspace {\n\n\tprivate _foldersMap: TernarySearchTree<URI, WorkspaceFolder> = TernarySearchTree.forUris<WorkspaceFolder>(this._ignorePathCasing);\n\tprivate _folders!: WorkspaceFolder[];\n\n\tconstructor(\n\t\tprivate _id: string,\n\t\tfolders: WorkspaceFolder[],\n\t\tprivate _configuration: URI | null,\n\t\tprivate _ignorePathCasing: (key: URI) => boolean,\n\t) {\n\t\tthis.folders = folders;\n\t}\n\n\tupdate(workspace: Workspace) {\n\t\tthis._id = workspace.id;\n\t\tthis._configuration = workspace.configuration;\n\t\tthis._ignorePathCasing = workspace._ignorePathCasing;\n\t\tthis.folders = workspace.folders;\n\t}\n\n\tget folders(): WorkspaceFolder[] {\n\t\treturn this._folders;\n\t}\n\n\tset folders(folders: WorkspaceFolder[]) {\n\t\tthis._folders = folders;\n\t\tthis.updateFoldersMap();\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget configuration(): URI | null {\n\t\treturn this._configuration;\n\t}\n\n\tset configuration(configuration: URI | null) {\n\t\tthis._configuration = configuration;\n\t}\n\n\tgetFolder(resource: URI): IWorkspaceFolder | null {\n\t\tif (!resource) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._foldersMap.findSubstr(resource.with({\n\t\t\tscheme: resource.scheme,\n\t\t\tauthority: resource.authority,\n\t\t\tpath: resource.path\n\t\t})) || null;\n\t}\n\n\tprivate updateFoldersMap(): void {\n\t\tthis._foldersMap = TernarySearchTree.forUris<WorkspaceFolder>(this._ignorePathCasing);\n\t\tfor (const folder of this.folders) {\n\t\t\tthis._foldersMap.set(folder.uri, folder);\n\t\t}\n\t}\n\n\ttoJSON(): IWorkspace {\n\t\treturn { id: this.id, folders: this.folders, configuration: this.configuration };\n\t}\n}\n\nexport class WorkspaceFolder implements IWorkspaceFolder {\n\n\treadonly uri: URI;\n\tname: string;\n\tindex: number;\n\n\tconstructor(data: IWorkspaceFolderData,\n\t\treadonly raw?: IStoredWorkspaceFolder) {\n\t\tthis.uri = data.uri;\n\t\tthis.index = data.index;\n\t\tthis.name = data.name;\n\t}\n\n\ttoResource(relativePath: string): URI {\n\t\treturn joinPath(this.uri, relativePath);\n\t}\n\n\ttoJSON(): IWorkspaceFolderData {\n\t\treturn { uri: this.uri, name: this.name, index: this.index };\n\t}\n}\n\nexport function toWorkspaceFolder(resource: URI): WorkspaceFolder {\n\treturn new WorkspaceFolder({ uri: resource, index: 0, name: basenameOrAuthority(resource) }, { uri: resource.toString() });\n}\n","import { ITelemetryData } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ITelemetryInfo, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport class TelemetryChannel implements IServerChannel {\n\tconstructor(private service: ITelemetryService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'publicLog': return this.service.publicLog(args[0], args[1], args[2]);\n\t\t\tcase 'publicLog2': return this.service.publicLog2(args[0], args[1], args[2]);\n\t\t\tcase 'publicLogError': return this.service.publicLogError(args[0], args[1]);\n\t\t\tcase 'publicLogError2': return this.service.publicLogError2(args[0], args[1]);\n\t\t\tcase 'setEnabled': return Promise.resolve(this.service.setEnabled(args[0]));\n\t\t\tcase 'getTelemetryInfo': return this.service.getTelemetryInfo();\n\t\t\tcase 'setExperimentProperty': return Promise.resolve(this.service.setExperimentProperty(args[0], args[1]));\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class TelemetryChannelClient implements ITelemetryService {\n\t_serviceBrand: any;\n\n\t// These don't matter; telemetry is sent to the Node side which decides\n\t// whether to send the telemetry event.\n\tpublic isOptedIn = true;\n\tpublic sendErrorTelemetry = true;\n\n\tconstructor(private readonly channel: IChannel) {}\n\n\tpublic publicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic publicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog2', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic publicLogError(errorEventName: string, data?: ITelemetryData): Promise<void> {\n\t\treturn this.channel.call('publicLogError', [errorEventName, data]);\n\t}\n\n\tpublic publicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void> {\n\t\treturn this.channel.call('publicLogError2', [eventName, data]);\n\t}\n\n\tpublic setEnabled(value: boolean): void {\n\t\tthis.channel.call('setEnable', [value]);\n\t}\n\n\tpublic getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn this.channel.call('getTelemetryInfo');\n\t}\n\n\tpublic setExperimentProperty(name: string, value: string): void {\n\t\tthis.channel.call('setExperimentProperty', [name, value]);\n\t}\n}\n","import * as appInsights from 'applicationinsights';\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as os from 'os';\n\nclass Channel {\n\tpublic get _sender() {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic get _buffer() {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic setUseDiskRetryCaching(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic send(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic triggerSend(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n}\n\nexport class TelemetryClient  {\n\tpublic context: any = undefined;\n\tpublic commonProperties: any = undefined;\n\tpublic config: any = {};\n\n\tpublic channel: any = new Channel();\n\n\tpublic addTelemetryProcessor(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic clearTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic runTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackTrace(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackMetric(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackException(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic track(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequestSync(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackEvent(options: appInsights.Contracts.EventTelemetry): void {\n\t\tif (!options.properties) {\n\t\t\toptions.properties = {};\n\t\t}\n\t\tif (!options.measurements) {\n\t\t\toptions.measurements = {};\n\t\t}\n\n\t\ttry {\n\t\t\tconst cpus = os.cpus();\n\t\t\toptions.measurements.cores = cpus.length;\n\t\t\toptions.properties['common.cpuModel'] = cpus[0].model;\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.measurements.memoryFree = os.freemem();\n\t\t\toptions.measurements.memoryTotal = os.totalmem();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.properties['common.shell'] = os.userInfo().shell;\n\t\t\toptions.properties['common.release'] = os.release();\n\t\t\toptions.properties['common.arch'] = os.arch();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\tconst url = process.env.TELEMETRY_URL || 'https://v1.telemetry.coder.com/track';\n\t\t\tconst request = (/^http:/.test(url) ? http : https).request(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t});\n\t\t\trequest.on('error', () => { /* We don't care. */ });\n\t\t\trequest.write(JSON.stringify(options));\n\t\t\trequest.end();\n\t\t} catch (error) {}\n\t}\n\n\tpublic flush(options: { callback: (v: string) => void }): void {\n\t\tif (options.callback) {\n\t\t\toptions.callback('');\n\t\t}\n\t}\n}\n","import { logger as baseLogger } from '@coder/logger';\nexport const logger = baseLogger.named('vscode');\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as util from 'util';\nimport { FileAccess } from 'vs/base/common/network';\nimport * as lp from 'vs/base/node/languagePacks';\nimport product from 'vs/platform/product/common/product';\nimport { Translations } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst configurations = new Map<string, Promise<lp.NLSConfiguration>>();\nconst metadataPath = path.join(FileAccess.asFileUri('', require).fsPath, 'nls.metadata.json');\n\nexport const isInternalConfiguration = (config: lp.NLSConfiguration): config is lp.InternalNLSConfiguration => {\n\treturn config && !!(<lp.InternalNLSConfiguration>config)._languagePackId;\n};\n\nconst DefaultConfiguration = {\n\tlocale: 'en',\n\tavailableLanguages: {},\n};\n\nexport const getNlsConfiguration = async (locale: string, userDataPath: string): Promise<lp.NLSConfiguration> => {\n\tconst id = `${locale}: ${userDataPath}`;\n\tif (!configurations.has(id)) {\n\t\tconfigurations.set(id, new Promise(async (resolve) =>  {\n\t\t\tconst config = product.commit && await util.promisify(fs.exists)(metadataPath)\n\t\t\t\t? await lp.getNLSConfiguration(product.commit, userDataPath, metadataPath, locale)\n\t\t\t\t: DefaultConfiguration;\n\t\t\tif (isInternalConfiguration(config)) {\n\t\t\t\tconfig._languagePackSupport = true;\n\t\t\t}\n\t\t\t// If the configuration has no results keep trying since code-server\n\t\t\t// doesn't restart when a language is installed so this result would\n\t\t\t// persist (the plugin might not be installed yet or something).\n\t\t\tif (config.locale !== 'en' && config.locale !== 'en-us' && Object.keys(config.availableLanguages).length === 0) {\n\t\t\t\tconfigurations.delete(id);\n\t\t\t}\n\t\t\tresolve(config);\n\t\t}));\n\t}\n\treturn configurations.get(id)!;\n};\n\nexport const getTranslations = async (locale: string, userDataPath: string): Promise<Translations> => {\n\tconst config = await getNlsConfiguration(locale, userDataPath);\n\tif (isInternalConfiguration(config)) {\n\t\ttry {\n\t\t\treturn JSON.parse(await util.promisify(fs.readFile)(config._translationsConfigFile, 'utf8'));\n\t\t} catch (error) { /* Nothing yet. */}\n\t}\n\treturn {};\n};\n\nexport const getLocaleFromConfig = async (userDataPath: string): Promise<string> => {\n\tconst files = ['locale.json', 'argv.json'];\n\tfor (let i = 0; i < files.length; ++i) {\n\t\ttry {\n\t\t\tconst localeConfigUri = path.join(userDataPath, 'User', files[i]);\n\t\t\tconst content = stripComments(await util.promisify(fs.readFile)(localeConfigUri, 'utf8'));\n\t\t\treturn JSON.parse(content).locale;\n\t\t} catch (error) { /* Ignore. */ }\n\t}\n\treturn 'en';\n};\n\n// Taken from src/main.js in the main VS Code source.\nconst stripComments = (content: string): string => {\n\tconst regexp = /('(?:[^\\\\']*(?:\\\\.)?)*')|('(?:[^\\\\']*(?:\\\\.)?)*')|(\\/\\*(?:\\r?\\n|.)*?\\*\\/)|(\\/{2,}.*?(?:(?:\\r?\\n)|$))/g;\n\n\treturn content.replace(regexp, (match, _m1, _m2, m3, m4) => {\n\t\t// Only one of m1, m2, m3, m4 matches\n\t\tif (m3) {\n\t\t\t// A block comment. Replace with nothing\n\t\t\treturn '';\n\t\t} else if (m4) {\n\t\t\t// A line comment. If it ends in \\r?\\n then keep it.\n\t\t\tconst length_1 = m4.length;\n\t\t\tif (length_1 > 2 && m4[length_1 - 1] === '\\n') {\n\t\t\t\treturn m4[length_1 - 2] === '\\r' ? '\\r\\n' : '\\n';\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else {\n\t\t\t// We match a string\n\t\t\treturn match;\n\t\t}\n\t});\n};\n","import { field, Logger, logger } from '@coder/logger';\nimport * as cp from 'child_process';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter } from 'vs/base/common/event';\nimport { FileAccess } from 'vs/base/common/network';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IRemoteExtensionHostStartParams } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { IExtHostReadyMessage } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\n\nexport abstract class Connection {\n\tprivate readonly _onClose = new Emitter<void>();\n\t/**\n\t * Fire when the connection is closed (not just disconnected). This should\n\t * only happen when the connection is offline and old or has an error.\n\t */\n\tpublic readonly onClose = this._onClose.event;\n\tprivate disposed = false;\n\tprivate _offline: number | undefined;\n\n\tprotected readonly logger: Logger;\n\n\tpublic constructor(\n\t\tprotected readonly protocol: Protocol,\n\t\tpublic readonly name: string,\n\t) {\n\t\tthis.logger = logger.named(\n\t\t\tthis.name,\n\t\t\tfield('token', this.protocol.options.reconnectionToken),\n\t\t);\n\n\t\tthis.logger.debug('Connecting...');\n\t\tthis.onClose(() => this.logger.debug('Closed'));\n\t}\n\n\tpublic get offline(): number | undefined {\n\t\treturn this._offline;\n\t}\n\n\tpublic reconnect(protocol: Protocol): void {\n\t\tthis.logger.debug('Reconnecting...');\n\t\tthis._offline = undefined;\n\t\tthis.doReconnect(protocol);\n\t}\n\n\tpublic dispose(reason?: string): void {\n\t\tthis.logger.debug('Disposing...', field('reason', reason));\n\t\tif (!this.disposed) {\n\t\t\tthis.disposed = true;\n\t\t\tthis.doDispose();\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\tprotected setOffline(): void {\n\t\tthis.logger.debug('Disconnected');\n\t\tif (!this._offline) {\n\t\t\tthis._offline = Date.now();\n\t\t}\n\t}\n\n\t/**\n\t * Set up the connection on a new socket.\n\t */\n\tprotected abstract doReconnect(protcol: Protocol): void;\n\n\t/**\n\t * Dispose/destroy everything permanently.\n\t */\n\tprotected abstract doDispose(): void;\n}\n\n/**\n * Used for all the IPC channels.\n */\nexport class ManagementConnection extends Connection {\n\tpublic constructor(protocol: Protocol) {\n\t\tsuper(protocol, 'management');\n\t\tprotocol.onDidDispose(() => this.dispose()); // Explicit close.\n\t\tprotocol.onSocketClose(() => this.setOffline()); // Might reconnect.\n\t\tprotocol.sendMessage({ type: 'ok' });\n\t}\n\n\tprotected doDispose(): void {\n\t\tthis.protocol.destroy();\n\t}\n\n\tprotected doReconnect(protocol: Protocol): void {\n\t\tprotocol.sendMessage({ type: 'ok' });\n\t\tthis.protocol.beginAcceptReconnection(protocol.getSocket(), protocol.readEntireBuffer());\n\t\tthis.protocol.endAcceptReconnection();\n\t\tprotocol.dispose();\n\t}\n}\n\ninterface DisconnectedMessage {\n\ttype: 'VSCODE_EXTHOST_DISCONNECTED';\n}\n\ninterface ConsoleMessage {\n\ttype: '__$console';\n\t// See bootstrap-fork.js#L135.\n\tseverity: 'log' | 'warn' | 'error';\n\targuments: any[];\n}\n\ntype ExtHostMessage = DisconnectedMessage | ConsoleMessage | IExtHostReadyMessage;\n\nexport class ExtensionHostConnection extends Connection {\n\tprivate process?: cp.ChildProcess;\n\n\tpublic constructor(\n\t\tprotocol: Protocol,\n\t\tprivate readonly params: IRemoteExtensionHostStartParams,\n\t\tprivate readonly environment: INativeEnvironmentService,\n\t) {\n\t\tsuper(protocol, 'exthost');\n\n\t\tprotocol.sendMessage({ debugPort: this.params.port });\n\t\tconst buffer = protocol.readEntireBuffer();\n\t\tconst inflateBytes = protocol.inflateBytes;\n\t\tprotocol.dispose();\n\t\tprotocol.getUnderlyingSocket().pause();\n\n\t\tthis.spawn(buffer, inflateBytes).then((p) => this.process = p);\n\t}\n\n\tprotected doDispose(): void {\n\t\tthis.protocol.destroy();\n\t\tif (this.process) {\n\t\t\tthis.process.kill();\n\t\t}\n\t}\n\n\tprotected doReconnect(protocol: Protocol): void {\n\t\tprotocol.sendMessage({ debugPort: this.params.port });\n\t\tconst buffer = protocol.readEntireBuffer();\n\t\tconst inflateBytes = protocol.inflateBytes;\n\t\tprotocol.dispose();\n\t\tprotocol.getUnderlyingSocket().pause();\n\t\tthis.protocol.setSocket(protocol.getSocket());\n\n\t\tthis.sendInitMessage(buffer, inflateBytes);\n\t}\n\n\tprivate sendInitMessage(buffer: VSBuffer, inflateBytes: Uint8Array | undefined): void {\n\t\tif (!this.process) {\n\t\t\tthrow new Error('Tried to initialize VS Code before spawning');\n\t\t}\n\n\t\tthis.logger.debug('Sending socket');\n\n\t\t// TODO: Do something with the debug port.\n\t\tthis.process.send({\n\t\t\ttype: 'VSCODE_EXTHOST_IPC_SOCKET',\n\t\t\tinitialDataChunk: Buffer.from(buffer.buffer).toString('base64'),\n\t\t\tskipWebSocketFrames: this.protocol.options.skipWebSocketFrames,\n\t\t\tpermessageDeflate: this.protocol.options.permessageDeflate,\n\t\t\tinflateBytes: inflateBytes ? Buffer.from(inflateBytes).toString('base64') : undefined,\n\t\t}, this.protocol.getUnderlyingSocket());\n\t}\n\n\tprivate async spawn(buffer: VSBuffer, inflateBytes: Uint8Array | undefined): Promise<cp.ChildProcess> {\n\t\tthis.logger.debug('Getting NLS configuration...');\n\t\tconst config = await getNlsConfiguration(this.params.language, this.environment.userDataPath);\n\t\tthis.logger.debug('Spawning extension host...');\n\t\tconst proc = cp.fork(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t// While not technically necessary, makes it easier to tell which process\n\t\t\t// bootstrap-fork is executing. Can also do pkill -f extensionHost\n\t\t\t// Other spawns in the VS Code codebase behave similarly.\n\t\t\t[ '--type=extensionHost' ],\n\t\t\t{\n\t\t\t\tenv: {\n\t\t\t\t\t...process.env,\n\t\t\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/workbench/services/extensions/node/extensionHostProcess',\n\t\t\t\t\tVSCODE_PIPE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_VERBOSE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_EXTHOST_WILL_SEND_SOCKET: 'true',\n\t\t\t\t\tVSCODE_HANDLES_UNCAUGHT_ERRORS: 'true',\n\t\t\t\t\tVSCODE_LOG_STACK: 'false',\n\t\t\t\t\tVSCODE_LOG_LEVEL: process.env.LOG_LEVEL,\n\t\t\t\t\tVSCODE_NLS_CONFIG: JSON.stringify(config),\n\t\t\t\t\tVSCODE_PARENT_PID: String(process.pid),\n\t\t\t\t},\n\t\t\t\tsilent: true,\n\t\t\t},\n\t\t);\n\n\t\tproc.on('error', (error) => {\n\t\t\tthis.logger.error('Exited unexpectedly', field('error', error));\n\t\t\tthis.dispose();\n\t\t});\n\t\tproc.on('exit', (code) => {\n\t\t\tthis.logger.debug('Exited', field('code', code));\n\t\t\tthis.dispose();\n\t\t});\n\t\tif (proc.stdout && proc.stderr) {\n\t\t\tproc.stdout.setEncoding('utf8').on('data', (d) => this.logger.info(d));\n\t\t\tproc.stderr.setEncoding('utf8').on('data', (d) => this.logger.error(d));\n\t\t}\n\n\t\tproc.on('message', (event: ExtHostMessage) => {\n\t\t\tswitch (event.type) {\n\t\t\t\tcase '__$console':\n\t\t\t\t\tconst fn = this.logger[event.severity === 'log' ? 'info' : event.severity];\n\t\t\t\t\tif (fn) {\n\t\t\t\t\t\tfn.bind(this.logger)('console', field('arguments', event.arguments));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logger.error('Unexpected severity', field('event', event));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VSCODE_EXTHOST_DISCONNECTED':\n\t\t\t\t\tthis.logger.debug('Got disconnected message');\n\t\t\t\t\tthis.setOffline();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VSCODE_EXTHOST_IPC_READY':\n\t\t\t\t\tthis.logger.debug('Handshake completed');\n\t\t\t\t\tthis.sendInitMessage(buffer, inflateBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.logger.error('Unexpected message', field('event', event));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tthis.logger.debug('Waiting for handshake...');\n\t\treturn proc;\n\t}\n}\n","import { URITransformer } from 'vs/base/common/uriIpc';\n\nexport const getUriTransformer = (remoteAuthority: string): URITransformer => {\n\treturn new URITransformer(remoteAuthority);\n};\n\n/**\n * Encode a path for opening via the folder or workspace query parameter. This\n * preserves slashes so it can be edited by hand more easily.\n */\nexport const encodePath = (path: string): string => {\n\treturn path.split('/').map((p) => encodeURIComponent(p)).join('/');\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\n\nexport const IEnvironmentVariableService = createDecorator<IEnvironmentVariableService>('environmentVariableService');\n\nexport enum EnvironmentVariableMutatorType {\n\tReplace = 1,\n\tAppend = 2,\n\tPrepend = 3\n}\n\nexport interface IEnvironmentVariableMutator {\n\treadonly value: string;\n\treadonly type: EnvironmentVariableMutatorType;\n}\n\nexport interface IExtensionOwnedEnvironmentVariableMutator extends IEnvironmentVariableMutator {\n\treadonly extensionIdentifier: string;\n}\n\nexport interface IEnvironmentVariableCollection {\n\treadonly map: ReadonlyMap<string, IEnvironmentVariableMutator>;\n}\n\nexport interface IEnvironmentVariableCollectionWithPersistence extends IEnvironmentVariableCollection {\n\treadonly persistent: boolean;\n}\n\nexport interface IMergedEnvironmentVariableCollectionDiff {\n\tadded: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n\tchanged: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n\tremoved: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n}\n\n/**\n * Represents an environment variable collection that results from merging several collections\n * together.\n */\nexport interface IMergedEnvironmentVariableCollection {\n\treadonly map: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n\n\t/**\n\t * Applies this collection to a process environment.\n\t * @param variableResolver An optional function to use to resolve variables within the\n\t * environment values.\n\t */\n\tapplyToProcessEnvironment(env: IProcessEnvironment, variableResolver?: (str: string) => string): void;\n\n\t/**\n\t * Generates a diff of this connection against another. Returns undefined if the collections are\n\t * the same.\n\t */\n\tdiff(other: IMergedEnvironmentVariableCollection): IMergedEnvironmentVariableCollectionDiff | undefined;\n}\n\n/**\n * Tracks and persists environment variable collections as defined by extensions.\n */\nexport interface IEnvironmentVariableService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Gets a single collection constructed by merging all environment variable collections into\n\t * one.\n\t */\n\treadonly collections: ReadonlyMap<string, IEnvironmentVariableCollection>;\n\n\t/**\n\t * Gets a single collection constructed by merging all environment variable collections into\n\t * one.\n\t */\n\treadonly mergedCollection: IMergedEnvironmentVariableCollection;\n\n\t/**\n\t * An event that is fired when an extension's environment variable collection changes, the event\n\t * provides the new merged collection.\n\t */\n\tonDidChangeCollections: Event<IMergedEnvironmentVariableCollection>;\n\n\t/**\n\t * Sets an extension's environment variable collection.\n\t */\n\tset(extensionIdentifier: string, collection: IEnvironmentVariableCollection): void;\n\n\t/**\n\t * Deletes an extension's environment variable collection.\n\t */\n\tdelete(extensionIdentifier: string): void;\n}\n\n/** [variable, mutator] */\nexport type ISerializableEnvironmentVariableCollection = [string, IEnvironmentVariableMutator][];\n\nexport interface IEnvironmentVariableInfo {\n\treadonly requiresAction: boolean;\n\tgetInfo(): string;\n\tgetIcon(): ThemeIcon;\n\tgetActions?(): {\n\t\tlabel: string;\n\t\tcommandId: string;\n\t\ticonClass?: string;\n\t\trun(target: any): void;\n\t}[];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment, isWindows } from 'vs/base/common/platform';\nimport { EnvironmentVariableMutatorType, IEnvironmentVariableCollection, IExtensionOwnedEnvironmentVariableMutator, IMergedEnvironmentVariableCollection, IMergedEnvironmentVariableCollectionDiff } from 'vs/workbench/contrib/terminal/common/environmentVariable';\n\nexport class MergedEnvironmentVariableCollection implements IMergedEnvironmentVariableCollection {\n\treadonly map: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\n\tconstructor(collections: Map<string, IEnvironmentVariableCollection>) {\n\t\tcollections.forEach((collection, extensionIdentifier) => {\n\t\t\tconst it = collection.map.entries();\n\t\t\tlet next = it.next();\n\t\t\twhile (!next.done) {\n\t\t\t\tconst variable = next.value[0];\n\t\t\t\tlet entry = this.map.get(variable);\n\t\t\t\tif (!entry) {\n\t\t\t\t\tentry = [];\n\t\t\t\t\tthis.map.set(variable, entry);\n\t\t\t\t}\n\n\t\t\t\t// If the first item in the entry is replace ignore any other entries as they would\n\t\t\t\t// just get replaced by this one.\n\t\t\t\tif (entry.length > 0 && entry[0].type === EnvironmentVariableMutatorType.Replace) {\n\t\t\t\t\tnext = it.next();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Mutators get applied in the reverse order than they are created\n\t\t\t\tconst mutator = next.value[1];\n\t\t\t\tentry.unshift({\n\t\t\t\t\textensionIdentifier,\n\t\t\t\t\tvalue: mutator.value,\n\t\t\t\t\ttype: mutator.type\n\t\t\t\t});\n\n\t\t\t\tnext = it.next();\n\t\t\t}\n\t\t});\n\t}\n\n\tapplyToProcessEnvironment(env: IProcessEnvironment, variableResolver?: (str: string) => string): void {\n\t\tlet lowerToActualVariableNames: { [lowerKey: string]: string | undefined } | undefined;\n\t\tif (isWindows) {\n\t\t\tlowerToActualVariableNames = {};\n\t\t\tObject.keys(env).forEach(e => lowerToActualVariableNames![e.toLowerCase()] = e);\n\t\t}\n\t\tthis.map.forEach((mutators, variable) => {\n\t\t\tconst actualVariable = isWindows ? lowerToActualVariableNames![variable.toLowerCase()] || variable : variable;\n\t\t\tmutators.forEach(mutator => {\n\t\t\t\tconst value = variableResolver ? variableResolver(mutator.value) : mutator.value;\n\t\t\t\tswitch (mutator.type) {\n\t\t\t\t\tcase EnvironmentVariableMutatorType.Append:\n\t\t\t\t\t\tenv[actualVariable] = (env[actualVariable] || '') + value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase EnvironmentVariableMutatorType.Prepend:\n\t\t\t\t\t\tenv[actualVariable] = value + (env[actualVariable] || '');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase EnvironmentVariableMutatorType.Replace:\n\t\t\t\t\t\tenv[actualVariable] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tdiff(other: IMergedEnvironmentVariableCollection): IMergedEnvironmentVariableCollectionDiff | undefined {\n\t\tconst added: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\t\tconst changed: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\t\tconst removed: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\n\t\t// Find added\n\t\tother.map.forEach((otherMutators, variable) => {\n\t\t\tconst currentMutators = this.map.get(variable);\n\t\t\tconst result = getMissingMutatorsFromArray(otherMutators, currentMutators);\n\t\t\tif (result) {\n\t\t\t\tadded.set(variable, result);\n\t\t\t}\n\t\t});\n\n\t\t// Find removed\n\t\tthis.map.forEach((currentMutators, variable) => {\n\t\t\tconst otherMutators = other.map.get(variable);\n\t\t\tconst result = getMissingMutatorsFromArray(currentMutators, otherMutators);\n\t\t\tif (result) {\n\t\t\t\tremoved.set(variable, result);\n\t\t\t}\n\t\t});\n\n\t\t// Find changed\n\t\tthis.map.forEach((currentMutators, variable) => {\n\t\t\tconst otherMutators = other.map.get(variable);\n\t\t\tconst result = getChangedMutatorsFromArray(currentMutators, otherMutators);\n\t\t\tif (result) {\n\t\t\t\tchanged.set(variable, result);\n\t\t\t}\n\t\t});\n\n\t\tif (added.size === 0 && changed.size === 0 && removed.size === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn { added, changed, removed };\n\t}\n}\n\nfunction getMissingMutatorsFromArray(\n\tcurrent: IExtensionOwnedEnvironmentVariableMutator[],\n\tother: IExtensionOwnedEnvironmentVariableMutator[] | undefined\n): IExtensionOwnedEnvironmentVariableMutator[] | undefined {\n\t// If it doesn't exist, all are removed\n\tif (!other) {\n\t\treturn current;\n\t}\n\n\t// Create a map to help\n\tconst otherMutatorExtensions = new Set<string>();\n\tother.forEach(m => otherMutatorExtensions.add(m.extensionIdentifier));\n\n\t// Find entries removed from other\n\tconst result: IExtensionOwnedEnvironmentVariableMutator[] = [];\n\tcurrent.forEach(mutator => {\n\t\tif (!otherMutatorExtensions.has(mutator.extensionIdentifier)) {\n\t\t\tresult.push(mutator);\n\t\t}\n\t});\n\n\treturn result.length === 0 ? undefined : result;\n}\n\nfunction getChangedMutatorsFromArray(\n\tcurrent: IExtensionOwnedEnvironmentVariableMutator[],\n\tother: IExtensionOwnedEnvironmentVariableMutator[] | undefined\n): IExtensionOwnedEnvironmentVariableMutator[] | undefined {\n\t// If it doesn't exist, none are changed (they are removed)\n\tif (!other) {\n\t\treturn undefined;\n\t}\n\n\t// Create a map to help\n\tconst otherMutatorExtensions = new Map<string, IExtensionOwnedEnvironmentVariableMutator>();\n\tother.forEach(m => otherMutatorExtensions.set(m.extensionIdentifier, m));\n\n\t// Find entries that exist in both but are not equal\n\tconst result: IExtensionOwnedEnvironmentVariableMutator[] = [];\n\tcurrent.forEach(mutator => {\n\t\tconst otherMutator = otherMutatorExtensions.get(mutator.extensionIdentifier);\n\t\tif (otherMutator && (mutator.type !== otherMutator.type || mutator.value !== otherMutator.value)) {\n\t\t\t// Return the new result, not the old one\n\t\t\tresult.push(otherMutator);\n\t\t}\n\t});\n\n\treturn result.length === 0 ? undefined : result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentVariableMutator, ISerializableEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\n\n// This file is shared between the renderer and extension host\n\nexport function serializeEnvironmentVariableCollection(collection: ReadonlyMap<string, IEnvironmentVariableMutator>): ISerializableEnvironmentVariableCollection {\n\treturn [...collection.entries()];\n}\n\nexport function deserializeEnvironmentVariableCollection(\n\tserializedCollection: ISerializableEnvironmentVariableCollection\n): Map<string, IEnvironmentVariableMutator> {\n\treturn new Map<string, IEnvironmentVariableMutator>(serializedCollection);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { URI as Uri } from 'vs/base/common/uri';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { sanitizeProcessEnvironment } from 'vs/base/common/processes';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IShellLaunchConfig, ITerminalEnvironment } from 'vs/platform/terminal/common/terminal';\nimport { IProcessEnvironment, isWindows, locale, OperatingSystem, OS, platform, Platform } from 'vs/base/common/platform';\n\n/**\n * This module contains utility functions related to the environment, cwd and paths.\n */\n\nexport function mergeEnvironments(parent: IProcessEnvironment, other: ITerminalEnvironment | undefined): void {\n\tif (!other) {\n\t\treturn;\n\t}\n\n\t// On Windows apply the new values ignoring case, while still retaining\n\t// the case of the original key.\n\tif (isWindows) {\n\t\tfor (const configKey in other) {\n\t\t\tlet actualKey = configKey;\n\t\t\tfor (const envKey in parent) {\n\t\t\t\tif (configKey.toLowerCase() === envKey.toLowerCase()) {\n\t\t\t\t\tactualKey = envKey;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst value = other[configKey];\n\t\t\tif (value !== undefined) {\n\t\t\t\t_mergeEnvironmentValue(parent, actualKey, value);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tObject.keys(other).forEach((key) => {\n\t\t\tconst value = other[key];\n\t\t\tif (value !== undefined) {\n\t\t\t\t_mergeEnvironmentValue(parent, key, value);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction _mergeEnvironmentValue(env: ITerminalEnvironment, key: string, value: string | null): void {\n\tif (typeof value === 'string') {\n\t\tenv[key] = value;\n\t} else {\n\t\tdelete env[key];\n\t}\n}\n\nexport function addTerminalEnvironmentKeys(env: IProcessEnvironment, version: string | undefined, locale: string | undefined, detectLocale: 'auto' | 'off' | 'on'): void {\n\tenv['TERM_PROGRAM'] = 'vscode';\n\tif (version) {\n\t\tenv['TERM_PROGRAM_VERSION'] = version;\n\t}\n\tif (shouldSetLangEnvVariable(env, detectLocale)) {\n\t\tenv['LANG'] = getLangEnvVariable(locale);\n\t}\n\tenv['COLORTERM'] = 'truecolor';\n}\n\nfunction mergeNonNullKeys(env: IProcessEnvironment, other: ITerminalEnvironment | undefined) {\n\tif (!other) {\n\t\treturn;\n\t}\n\tfor (const key of Object.keys(other)) {\n\t\tconst value = other[key];\n\t\tif (value) {\n\t\t\tenv[key] = value;\n\t\t}\n\t}\n}\n\nfunction resolveConfigurationVariables(variableResolver: VariableResolver, env: ITerminalEnvironment): ITerminalEnvironment {\n\tObject.keys(env).forEach((key) => {\n\t\tconst value = env[key];\n\t\tif (typeof value === 'string') {\n\t\t\ttry {\n\t\t\t\tenv[key] = variableResolver(value);\n\t\t\t} catch (e) {\n\t\t\t\tenv[key] = value;\n\t\t\t}\n\t\t}\n\t});\n\treturn env;\n}\n\nexport function shouldSetLangEnvVariable(env: IProcessEnvironment, detectLocale: 'auto' | 'off' | 'on'): boolean {\n\tif (detectLocale === 'on') {\n\t\treturn true;\n\t}\n\tif (detectLocale === 'auto') {\n\t\tconst lang = env['LANG'];\n\t\treturn !lang || (lang.search(/\\.UTF\\-8$/) === -1 && lang.search(/\\.utf8$/) === -1 && lang.search(/\\.euc.+/) === -1);\n\t}\n\treturn false; // 'off'\n}\n\nexport function getLangEnvVariable(locale?: string): string {\n\tconst parts = locale ? locale.split('-') : [];\n\tconst n = parts.length;\n\tif (n === 0) {\n\t\t// Fallback to en_US if the locale is unknown\n\t\treturn 'en_US.UTF-8';\n\t}\n\tif (n === 1) {\n\t\t// The local may only contain the language, not the variant, if this is the case guess the\n\t\t// variant such that it can be used as a valid $LANG variable. The language variant chosen\n\t\t// is the original and/or most prominent with help from\n\t\t// https://stackoverflow.com/a/2502675/1156119\n\t\t// The list of locales was generated by running `locale -a` on macOS\n\t\tconst languageVariants: { [key: string]: string } = {\n\t\t\taf: 'ZA',\n\t\t\tam: 'ET',\n\t\t\tbe: 'BY',\n\t\t\tbg: 'BG',\n\t\t\tca: 'ES',\n\t\t\tcs: 'CZ',\n\t\t\tda: 'DK',\n\t\t\t// de: 'AT',\n\t\t\t// de: 'CH',\n\t\t\tde: 'DE',\n\t\t\tel: 'GR',\n\t\t\t// en: 'AU',\n\t\t\t// en: 'CA',\n\t\t\t// en: 'GB',\n\t\t\t// en: 'IE',\n\t\t\t// en: 'NZ',\n\t\t\ten: 'US',\n\t\t\tes: 'ES',\n\t\t\tet: 'EE',\n\t\t\teu: 'ES',\n\t\t\tfi: 'FI',\n\t\t\t// fr: 'BE',\n\t\t\t// fr: 'CA',\n\t\t\t// fr: 'CH',\n\t\t\tfr: 'FR',\n\t\t\the: 'IL',\n\t\t\thr: 'HR',\n\t\t\thu: 'HU',\n\t\t\thy: 'AM',\n\t\t\tis: 'IS',\n\t\t\t// it: 'CH',\n\t\t\tit: 'IT',\n\t\t\tja: 'JP',\n\t\t\tkk: 'KZ',\n\t\t\tko: 'KR',\n\t\t\tlt: 'LT',\n\t\t\t// nl: 'BE',\n\t\t\tnl: 'NL',\n\t\t\tno: 'NO',\n\t\t\tpl: 'PL',\n\t\t\tpt: 'BR',\n\t\t\t// pt: 'PT',\n\t\t\tro: 'RO',\n\t\t\tru: 'RU',\n\t\t\tsk: 'SK',\n\t\t\tsl: 'SI',\n\t\t\tsr: 'YU',\n\t\t\tsv: 'SE',\n\t\t\ttr: 'TR',\n\t\t\tuk: 'UA',\n\t\t\tzh: 'CN',\n\t\t};\n\t\tif (parts[0] in languageVariants) {\n\t\t\tparts.push(languageVariants[parts[0]]);\n\t\t}\n\t} else {\n\t\t// Ensure the variant is uppercase to be a valid $LANG\n\t\tparts[1] = parts[1].toUpperCase();\n\t}\n\treturn parts.join('_') + '.UTF-8';\n}\n\nexport function getCwd(\n\tshell: IShellLaunchConfig,\n\tuserHome: string | undefined,\n\tvariableResolver: VariableResolver | undefined,\n\troot: Uri | undefined,\n\tcustomCwd: string | undefined,\n\tlogService?: ILogService\n): string {\n\tif (shell.cwd) {\n\t\tconst unresolved = (typeof shell.cwd === 'object') ? shell.cwd.fsPath : shell.cwd;\n\t\tconst resolved = _resolveCwd(unresolved, variableResolver);\n\t\treturn _sanitizeCwd(resolved || unresolved);\n\t}\n\n\tlet cwd: string | undefined;\n\n\tif (!shell.ignoreConfigurationCwd && customCwd) {\n\t\tif (variableResolver) {\n\t\t\tcustomCwd = _resolveCwd(customCwd, variableResolver, logService);\n\t\t}\n\t\tif (customCwd) {\n\t\t\tif (path.isAbsolute(customCwd)) {\n\t\t\t\tcwd = customCwd;\n\t\t\t} else if (root) {\n\t\t\t\tcwd = path.join(root.fsPath, customCwd);\n\t\t\t}\n\t\t}\n\t}\n\n\t// If there was no custom cwd or it was relative with no workspace\n\tif (!cwd) {\n\t\tcwd = root ? root.fsPath : userHome || '';\n\t}\n\n\treturn _sanitizeCwd(cwd);\n}\n\nfunction _resolveCwd(cwd: string, variableResolver: VariableResolver | undefined, logService?: ILogService): string | undefined {\n\tif (variableResolver) {\n\t\ttry {\n\t\t\treturn variableResolver(cwd);\n\t\t} catch (e) {\n\t\t\tlogService?.error('Could not resolve terminal cwd', e);\n\t\t\treturn undefined;\n\t\t}\n\t}\n\treturn cwd;\n}\n\nfunction _sanitizeCwd(cwd: string): string {\n\t// Make the drive letter uppercase on Windows (see #9448)\n\tif (OS === OperatingSystem.Windows && cwd && cwd[1] === ':') {\n\t\treturn cwd[0].toUpperCase() + cwd.substr(1);\n\t}\n\treturn cwd;\n}\n\nexport function escapeNonWindowsPath(path: string): string {\n\tlet newPath = path;\n\tif (newPath.indexOf('\\\\') !== 0) {\n\t\tnewPath = newPath.replace(/\\\\/g, '\\\\\\\\');\n\t}\n\tconst bannedChars = /[\\`\\$\\|\\&\\>\\~\\#\\!\\^\\*\\;\\<\\\"\\']/g;\n\tnewPath = newPath.replace(bannedChars, '');\n\treturn `'${newPath}'`;\n}\n\nexport type TerminalShellSetting = (\n\t`terminal.integrated.automationShell.windows`\n\t| `terminal.integrated.automationShell.osx`\n\t| `terminal.integrated.automationShell.linux`\n\t| `terminal.integrated.shell.windows`\n\t| `terminal.integrated.shell.osx`\n\t| `terminal.integrated.shell.linux`\n);\n\nexport type TerminalShellArgsSetting = (\n\t`terminal.integrated.shellArgs.windows`\n\t| `terminal.integrated.shellArgs.osx`\n\t| `terminal.integrated.shellArgs.linux`\n);\n\nexport type VariableResolver = (str: string) => string;\n\nexport function createVariableResolver(lastActiveWorkspace: IWorkspaceFolder | undefined, env: IProcessEnvironment, configurationResolverService: IConfigurationResolverService | undefined): VariableResolver | undefined {\n\tif (!configurationResolverService) {\n\t\treturn undefined;\n\t}\n\treturn (str) => configurationResolverService.resolveWithEnvironment(env, lastActiveWorkspace, str);\n}\n\n/**\n * @deprecated Use ITerminalProfileResolverService\n */\nexport function getDefaultShell(\n\tfetchSetting: (key: TerminalShellSetting) => string | undefined,\n\tdefaultShell: string,\n\tisWoW64: boolean,\n\twindir: string | undefined,\n\tvariableResolver: VariableResolver | undefined,\n\tlogService: ILogService,\n\tuseAutomationShell: boolean,\n\tplatformOverride: Platform = platform\n): string {\n\tlet maybeExecutable: string | undefined;\n\tif (useAutomationShell) {\n\t\t// If automationShell is specified, this should override the normal setting\n\t\tmaybeExecutable = getShellSetting(fetchSetting, 'automationShell', platformOverride) as string | undefined;\n\t}\n\tif (!maybeExecutable) {\n\t\tmaybeExecutable = getShellSetting(fetchSetting, 'shell', platformOverride) as string | undefined;\n\t}\n\tlet executable: string = maybeExecutable || defaultShell;\n\n\t// Change Sysnative to System32 if the OS is Windows but NOT WoW64. It's\n\t// safe to assume that this was used by accident as Sysnative does not\n\t// exist and will break the terminal in non-WoW64 environments.\n\tif ((platformOverride === Platform.Windows) && !isWoW64 && windir) {\n\t\tconst sysnativePath = path.join(windir, 'Sysnative').replace(/\\//g, '\\\\').toLowerCase();\n\t\tif (executable && executable.toLowerCase().indexOf(sysnativePath) === 0) {\n\t\t\texecutable = path.join(windir, 'System32', executable.substr(sysnativePath.length + 1));\n\t\t}\n\t}\n\n\t// Convert / to \\ on Windows for convenience\n\tif (executable && platformOverride === Platform.Windows) {\n\t\texecutable = executable.replace(/\\//g, '\\\\');\n\t}\n\n\tif (variableResolver) {\n\t\ttry {\n\t\t\texecutable = variableResolver(executable);\n\t\t} catch (e) {\n\t\t\tlogService.error(`Could not resolve shell`, e);\n\t\t}\n\t}\n\n\treturn executable;\n}\n\n/**\n * @deprecated Use ITerminalProfileResolverService\n */\nexport function getDefaultShellArgs(\n\tfetchSetting: (key: TerminalShellSetting | TerminalShellArgsSetting) => string | string[] | undefined,\n\tuseAutomationShell: boolean,\n\tvariableResolver: VariableResolver | undefined,\n\tlogService: ILogService,\n\tplatformOverride: Platform = platform,\n): string | string[] {\n\tif (useAutomationShell) {\n\t\tif (!!getShellSetting(fetchSetting, 'automationShell', platformOverride)) {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tconst platformKey = platformOverride === Platform.Windows ? 'windows' : platformOverride === Platform.Mac ? 'osx' : 'linux';\n\tlet args = fetchSetting(<TerminalShellArgsSetting>`terminal.integrated.shellArgs.${platformKey}`);\n\tif (!args) {\n\t\treturn [];\n\t}\n\tif (typeof args === 'string' && platformOverride === Platform.Windows) {\n\t\treturn variableResolver ? variableResolver(args) : args;\n\t}\n\tif (variableResolver) {\n\t\tconst resolvedArgs: string[] = [];\n\t\tfor (const arg of args) {\n\t\t\ttry {\n\t\t\t\tresolvedArgs.push(variableResolver(arg));\n\t\t\t} catch (e) {\n\t\t\t\tlogService.error(`Could not resolve terminal.integrated.shellArgs.${platformKey}`, e);\n\t\t\t\tresolvedArgs.push(arg);\n\t\t\t}\n\t\t}\n\t\targs = resolvedArgs;\n\t}\n\treturn args;\n}\n\nfunction getShellSetting(\n\tfetchSetting: (key: TerminalShellSetting) => string | string[] | undefined,\n\ttype: 'automationShell' | 'shell',\n\tplatformOverride: Platform = platform,\n): string | string[] | undefined {\n\tconst platformKey = platformOverride === Platform.Windows ? 'windows' : platformOverride === Platform.Mac ? 'osx' : 'linux';\n\treturn fetchSetting(<TerminalShellSetting>`terminal.integrated.${type}.${platformKey}`);\n}\n\nexport function createTerminalEnvironment(\n\tshellLaunchConfig: IShellLaunchConfig,\n\tenvFromConfig: ITerminalEnvironment | undefined,\n\tvariableResolver: VariableResolver | undefined,\n\tversion: string | undefined,\n\tdetectLocale: 'auto' | 'off' | 'on',\n\tbaseEnv: IProcessEnvironment\n): IProcessEnvironment {\n\t// Create a terminal environment based on settings, launch config and permissions\n\tlet env: IProcessEnvironment = {};\n\tif (shellLaunchConfig.strictEnv) {\n\t\t// strictEnv is true, only use the requested env (ignoring null entries)\n\t\tmergeNonNullKeys(env, shellLaunchConfig.env);\n\t} else {\n\t\t// Merge process env with the env from config and from shellLaunchConfig\n\t\tmergeNonNullKeys(env, baseEnv);\n\n\t\tconst allowedEnvFromConfig = { ...envFromConfig };\n\n\t\t// Resolve env vars from config and shell\n\t\tif (variableResolver) {\n\t\t\tif (allowedEnvFromConfig) {\n\t\t\t\tresolveConfigurationVariables(variableResolver, allowedEnvFromConfig);\n\t\t\t}\n\t\t\tif (shellLaunchConfig.env) {\n\t\t\t\tresolveConfigurationVariables(variableResolver, shellLaunchConfig.env);\n\t\t\t}\n\t\t}\n\n\t\t// Sanitize the environment, removing any undesirable VS Code and Electron environment\n\t\t// variables\n\t\tsanitizeProcessEnvironment(env, 'VSCODE_IPC_HOOK_CLI');\n\n\t\t// Merge config (settings) and ShellLaunchConfig environments\n\t\tmergeEnvironments(env, allowedEnvFromConfig);\n\t\tmergeEnvironments(env, shellLaunchConfig.env);\n\n\t\t// Adding other env keys necessary to create the process\n\t\taddTerminalEnvironmentKeys(env, version, locale, detectLocale);\n\t}\n\treturn env;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport * as path from 'vs/base/common/path';\nimport { IProcessEnvironment, isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\n\nlet mainProcessParentEnv: IProcessEnvironment | undefined;\n\nexport async function getMainProcessParentEnv(baseEnvironment: IProcessEnvironment): Promise<IProcessEnvironment> {\n\tif (mainProcessParentEnv) {\n\t\treturn mainProcessParentEnv;\n\t}\n\n\t// For Linux use /proc/<pid>/status to get the parent of the main process and then fetch its\n\t// env using /proc/<pid>/environ.\n\tif (isLinux) {\n\t\tconst mainProcessId = process.ppid;\n\t\tconst codeProcessName = path.basename(process.argv[0]);\n\t\tlet pid: number = 0;\n\t\tlet ppid: number = mainProcessId;\n\t\tlet name: string = codeProcessName;\n\t\tdo {\n\t\t\tpid = ppid;\n\t\t\tconst status = await fs.promises.readFile(`/proc/${pid}/status`, 'utf8');\n\t\t\tconst splitByLine = status.split('\\n');\n\t\t\tsplitByLine.forEach(line => {\n\t\t\t\tif (line.indexOf('Name:') === 0) {\n\t\t\t\t\tname = line.replace(/^Name:\\s+/, '');\n\t\t\t\t}\n\t\t\t\tif (line.indexOf('PPid:') === 0) {\n\t\t\t\t\tppid = parseInt(line.replace(/^PPid:\\s+/, ''));\n\t\t\t\t}\n\t\t\t});\n\t\t} while (name === codeProcessName);\n\t\tconst rawEnv = await fs.promises.readFile(`/proc/${pid}/environ`, 'utf8');\n\t\tconst env: IProcessEnvironment = {};\n\t\trawEnv.split('\\0').forEach(e => {\n\t\t\tconst i = e.indexOf('=');\n\t\t\tenv[e.substr(0, i)] = e.substr(i + 1);\n\t\t});\n\t\tmainProcessParentEnv = env;\n\t}\n\n\t// For macOS we want the \"root\" environment as shells by default run as login shells. It\n\t// doesn't appear to be possible to get the \"root\" environment as `ps eww -o command` for\n\t// PID 1 (the parent of the main process when launched from the dock/finder) returns no\n\t// environment, because of this we will fill in the root environment using a allowlist of\n\t// environment variables that we have.\n\tif (isMacintosh) {\n\t\tmainProcessParentEnv = {};\n\t\t// This list was generated by diffing launching a terminal with {} and the system\n\t\t// terminal launched from finder.\n\t\tconst rootEnvVars = [\n\t\t\t'SHELL',\n\t\t\t'SSH_AUTH_SOCK',\n\t\t\t'Apple_PubSub_Socket_Render',\n\t\t\t'XPC_FLAGS',\n\t\t\t'XPC_SERVICE_NAME',\n\t\t\t'HOME',\n\t\t\t'LOGNAME',\n\t\t\t'TMPDIR'\n\t\t];\n\t\trootEnvVars.forEach(k => {\n\t\t\tif (baseEnvironment[k]) {\n\t\t\t\tmainProcessParentEnv![k] = baseEnvironment[k]!;\n\t\t\t}\n\t\t});\n\t}\n\n\t// TODO: Windows should return a fresh environment block, might need native code?\n\tif (isWindows) {\n\t\tmainProcessParentEnv = baseEnvironment;\n\t}\n\n\treturn mainProcessParentEnv!;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ConfigurationScope, Extensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { URI } from 'vs/base/common/uri';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { refineServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport const FOLDER_CONFIG_FOLDER_NAME = '.vscode';\nexport const FOLDER_SETTINGS_NAME = 'settings';\nexport const FOLDER_SETTINGS_PATH = `${FOLDER_CONFIG_FOLDER_NAME}/${FOLDER_SETTINGS_NAME}.json`;\n\nexport const defaultSettingsSchemaId = 'vscode://schemas/settings/default';\nexport const userSettingsSchemaId = 'vscode://schemas/settings/user';\nexport const machineSettingsSchemaId = 'vscode://schemas/settings/machine';\nexport const workspaceSettingsSchemaId = 'vscode://schemas/settings/workspace';\nexport const folderSettingsSchemaId = 'vscode://schemas/settings/folder';\nexport const launchSchemaId = 'vscode://schemas/launch';\nexport const tasksSchemaId = 'vscode://schemas/tasks';\n\nexport const LOCAL_MACHINE_SCOPES = [ConfigurationScope.APPLICATION, ConfigurationScope.WINDOW, ConfigurationScope.RESOURCE, ConfigurationScope.LANGUAGE_OVERRIDABLE];\nexport const REMOTE_MACHINE_SCOPES = [ConfigurationScope.MACHINE, ConfigurationScope.WINDOW, ConfigurationScope.RESOURCE, ConfigurationScope.LANGUAGE_OVERRIDABLE, ConfigurationScope.MACHINE_OVERRIDABLE];\nexport const WORKSPACE_SCOPES = [ConfigurationScope.WINDOW, ConfigurationScope.RESOURCE, ConfigurationScope.LANGUAGE_OVERRIDABLE, ConfigurationScope.MACHINE_OVERRIDABLE];\nexport const FOLDER_SCOPES = [ConfigurationScope.RESOURCE, ConfigurationScope.LANGUAGE_OVERRIDABLE, ConfigurationScope.MACHINE_OVERRIDABLE];\n\nexport const TASKS_CONFIGURATION_KEY = 'tasks';\nexport const LAUNCH_CONFIGURATION_KEY = 'launch';\n\nexport const WORKSPACE_STANDALONE_CONFIGURATIONS = Object.create(null);\nWORKSPACE_STANDALONE_CONFIGURATIONS[TASKS_CONFIGURATION_KEY] = `${FOLDER_CONFIG_FOLDER_NAME}/${TASKS_CONFIGURATION_KEY}.json`;\nWORKSPACE_STANDALONE_CONFIGURATIONS[LAUNCH_CONFIGURATION_KEY] = `${FOLDER_CONFIG_FOLDER_NAME}/${LAUNCH_CONFIGURATION_KEY}.json`;\nexport const USER_STANDALONE_CONFIGURATIONS = Object.create(null);\nUSER_STANDALONE_CONFIGURATIONS[TASKS_CONFIGURATION_KEY] = `${TASKS_CONFIGURATION_KEY}.json`;\n\nexport type ConfigurationKey = { type: 'user' | 'workspaces' | 'folder', key: string };\n\nexport interface IConfigurationCache {\n\n\tneedsCaching(resource: URI): boolean;\n\tread(key: ConfigurationKey): Promise<string>;\n\twrite(key: ConfigurationKey, content: string): Promise<void>;\n\tremove(key: ConfigurationKey): Promise<void>;\n\n}\n\nexport function filterSettingsRequireWorkspaceTrust(settings: ReadonlyArray<string>): ReadonlyArray<string> {\n\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\treturn settings.filter(key => {\n\t\tconst property = configurationRegistry.getConfigurationProperties()[key];\n\t\treturn property.restricted && property.scope !== ConfigurationScope.APPLICATION && property.scope !== ConfigurationScope.MACHINE;\n\t});\n}\n\nexport type RestrictedSettings = {\n\tdefault: ReadonlyArray<string>;\n\tuserLocal?: ReadonlyArray<string>;\n\tuserRemote?: ReadonlyArray<string>;\n\tworkspace?: ReadonlyArray<string>;\n\tworkspaceFolder?: ResourceMap<ReadonlyArray<string>>;\n};\n\nexport const IWorkbenchConfigurationService = refineServiceDecorator<IConfigurationService, IWorkbenchConfigurationService>(IConfigurationService);\nexport interface IWorkbenchConfigurationService extends IConfigurationService {\n\t/**\n\t * Restricted settings defined in each configuraiton target\n\t */\n\treadonly restrictedSettings: RestrictedSettings;\n\n\t/**\n\t * Event that triggers when the restricted settings changes\n\t */\n\treadonly onDidChangeRestrictedSettings: Event<RestrictedSettings>;\n\n\t/**\n\t * A promise that resolves when the remote configuration is loaded in a remote window.\n\t * The promise is resolved immediately if the window is not remote.\n\t */\n\twhenRemoteConfigurationLoaded(): Promise<void>;\n}\n\nexport const TASKS_DEFAULT = '{\\n\\t\\\"version\\\": \\\"2.0.0\\\",\\n\\t\\\"tasks\\\": []\\n}';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nexport const IConfigurationResolverService = createDecorator<IConfigurationResolverService>('configurationResolverService');\n\nexport interface IConfigurationResolverService {\n\treadonly _serviceBrand: undefined;\n\n\tresolveWithEnvironment(environment: IProcessEnvironment, folder: IWorkspaceFolder | undefined, value: string): string;\n\n\tresolveAsync(folder: IWorkspaceFolder | undefined, value: string): Promise<string>;\n\tresolveAsync(folder: IWorkspaceFolder | undefined, value: string[]): Promise<string[]>;\n\tresolveAsync(folder: IWorkspaceFolder | undefined, value: IStringDictionary<string>): Promise<IStringDictionary<string>>;\n\n\t/**\n\t * Recursively resolves all variables in the given config and returns a copy of it with substituted values.\n\t * Command variables are only substituted if a \"commandValueMapping\" dictionary is given and if it contains an entry for the command.\n\t */\n\tresolveAnyAsync(folder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): Promise<any>;\n\n\t/**\n\t * Recursively resolves all variables (including commands and user input) in the given config and returns a copy of it with substituted values.\n\t * If a \"variables\" dictionary (with names -> command ids) is given, command variables are first mapped through it before being resolved.\n\t *\n\t * @param section For example, 'tasks' or 'debug'. Used for resolving inputs.\n\t * @param variables Aliases for commands.\n\t */\n\tresolveWithInteractionReplace(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>, target?: ConfigurationTarget): Promise<any>;\n\n\t/**\n\t * Similar to resolveWithInteractionReplace, except without the replace. Returns a map of variables and their resolution.\n\t * Keys in the map will be of the format input:variableName or command:variableName.\n\t */\n\tresolveWithInteraction(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>, target?: ConfigurationTarget): Promise<Map<string, string> | undefined>;\n\n\t/**\n\t * Contributes a variable that can be resolved later. Consumers that use resolveAny, resolveWithInteraction,\n\t * and resolveWithInteractionReplace will have contributed variables resolved.\n\t */\n\tcontributeVariable(variable: string, resolution: () => Promise<string | undefined>): void;\n}\n\nexport interface PromptStringInputInfo {\n\tid: string;\n\ttype: 'promptString';\n\tdescription: string;\n\tdefault?: string;\n\tpassword?: boolean;\n}\n\nexport interface PickStringInputInfo {\n\tid: string;\n\ttype: 'pickString';\n\tdescription: string;\n\toptions: (string | { value: string, label?: string })[];\n\tdefault?: string;\n}\n\nexport interface CommandInputInfo {\n\tid: string;\n\ttype: 'command';\n\tcommand: string;\n\targs?: any;\n}\n\nexport type ConfiguredInput = PromptStringInputInfo | PickStringInputInfo | CommandInputInfo;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as paths from 'vs/base/common/path';\nimport * as process from 'vs/base/common/process';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { IProcessEnvironment, isWindows, isMacintosh, isLinux } from 'vs/base/common/platform';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { localize } from 'vs/nls';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { ILabelService } from 'vs/platform/label/common/label';\n\nexport interface IVariableResolveContext {\n\tgetFolderUri(folderName: string): uri | undefined;\n\tgetWorkspaceFolderCount(): number;\n\tgetConfigurationValue(folderUri: uri | undefined, section: string): string | undefined;\n\tgetAppRoot(): string | undefined;\n\tgetExecPath(): string | undefined;\n\tgetFilePath(): string | undefined;\n\tgetWorkspaceFolderPathForFile?(): string | undefined;\n\tgetSelectedText(): string | undefined;\n\tgetLineNumber(): string | undefined;\n}\n\nexport class AbstractVariableResolverService implements IConfigurationResolverService {\n\n\tstatic readonly VARIABLE_LHS = '${';\n\tstatic readonly VARIABLE_REGEXP = /\\$\\{(.*?)\\}/g;\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _context: IVariableResolveContext;\n\tprivate _labelService?: ILabelService;\n\tprivate _envVariablesPromise?: Promise<IProcessEnvironment>;\n\tprotected _contributedVariables: Map<string, () => Promise<string | undefined>> = new Map();\n\n\tconstructor(_context: IVariableResolveContext, _labelService?: ILabelService, _envVariablesPromise?: Promise<IProcessEnvironment>) {\n\t\tthis._context = _context;\n\t\tthis._labelService = _labelService;\n\t\tif (_envVariablesPromise) {\n\t\t\tthis._envVariablesPromise = _envVariablesPromise.then(envVariables => {\n\t\t\t\treturn this.prepareEnv(envVariables);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate prepareEnv(envVariables: IProcessEnvironment): IProcessEnvironment {\n\t\t// windows env variables are case insensitive\n\t\tif (isWindows) {\n\t\t\tconst ev: IProcessEnvironment = Object.create(null);\n\t\t\tObject.keys(envVariables).forEach(key => {\n\t\t\t\tev[key.toLowerCase()] = envVariables[key];\n\t\t\t});\n\t\t\treturn ev;\n\t\t}\n\t\treturn envVariables;\n\t}\n\n\tpublic resolveWithEnvironment(environment: IProcessEnvironment, root: IWorkspaceFolder | undefined, value: string): string {\n\t\treturn this.recursiveResolve(this.prepareEnv(environment), root ? root.uri : undefined, value);\n\t}\n\n\tpublic async resolveAsync(root: IWorkspaceFolder | undefined, value: string): Promise<string>;\n\tpublic async resolveAsync(root: IWorkspaceFolder | undefined, value: string[]): Promise<string[]>;\n\tpublic async resolveAsync(root: IWorkspaceFolder | undefined, value: IStringDictionary<string>): Promise<IStringDictionary<string>>;\n\tpublic async resolveAsync(root: IWorkspaceFolder | undefined, value: any): Promise<any> {\n\t\treturn this.recursiveResolve(await this._envVariablesPromise, root ? root.uri : undefined, value);\n\t}\n\n\tprivate async resolveAnyBase(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>, resolvedVariables?: Map<string, string>): Promise<any> {\n\n\t\tconst result = objects.deepClone(config) as any;\n\n\t\t// hoist platform specific attributes to top level\n\t\tif (isWindows && result.windows) {\n\t\t\tObject.keys(result.windows).forEach(key => result[key] = result.windows[key]);\n\t\t} else if (isMacintosh && result.osx) {\n\t\t\tObject.keys(result.osx).forEach(key => result[key] = result.osx[key]);\n\t\t} else if (isLinux && result.linux) {\n\t\t\tObject.keys(result.linux).forEach(key => result[key] = result.linux[key]);\n\t\t}\n\n\t\t// delete all platform specific sections\n\t\tdelete result.windows;\n\t\tdelete result.osx;\n\t\tdelete result.linux;\n\n\t\t// substitute all variables recursively in string values\n\t\treturn this.recursiveResolve(await this._envVariablesPromise, workspaceFolder ? workspaceFolder.uri : undefined, result, commandValueMapping, resolvedVariables);\n\t}\n\n\tpublic async resolveAnyAsync(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): Promise<any> {\n\t\treturn this.resolveAnyBase(workspaceFolder, config, commandValueMapping);\n\t}\n\n\tprotected async resolveAnyMap(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): Promise<{ newConfig: any, resolvedVariables: Map<string, string> }> {\n\t\tconst resolvedVariables = new Map<string, string>();\n\t\tconst newConfig = await this.resolveAnyBase(workspaceFolder, config, commandValueMapping, resolvedVariables);\n\t\treturn { newConfig, resolvedVariables };\n\t}\n\n\tpublic resolveWithInteractionReplace(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>): Promise<any> {\n\t\tthrow new Error('resolveWithInteractionReplace not implemented.');\n\t}\n\n\tpublic resolveWithInteraction(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>): Promise<Map<string, string> | undefined> {\n\t\tthrow new Error('resolveWithInteraction not implemented.');\n\t}\n\n\tpublic contributeVariable(variable: string, resolution: () => Promise<string | undefined>): void {\n\t\tif (this._contributedVariables.has(variable)) {\n\t\t\tthrow new Error('Variable ' + variable + ' is contributed twice.');\n\t\t} else {\n\t\t\tthis._contributedVariables.set(variable, resolution);\n\t\t}\n\t}\n\n\tprivate recursiveResolve(environment: IProcessEnvironment | undefined, folderUri: uri | undefined, value: any, commandValueMapping?: IStringDictionary<string>, resolvedVariables?: Map<string, string>): any {\n\t\tif (types.isString(value)) {\n\t\t\treturn this.resolveString(environment, folderUri, value, commandValueMapping, resolvedVariables);\n\t\t} else if (types.isArray(value)) {\n\t\t\treturn value.map(s => this.recursiveResolve(environment, folderUri, s, commandValueMapping, resolvedVariables));\n\t\t} else if (types.isObject(value)) {\n\t\t\tlet result: IStringDictionary<string | IStringDictionary<string> | string[]> = Object.create(null);\n\t\t\tObject.keys(value).forEach(key => {\n\t\t\t\tconst replaced = this.resolveString(environment, folderUri, key, commandValueMapping, resolvedVariables);\n\t\t\t\tresult[replaced] = this.recursiveResolve(environment, folderUri, value[key], commandValueMapping, resolvedVariables);\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t\treturn value;\n\t}\n\n\tprivate resolveString(environment: IProcessEnvironment | undefined, folderUri: uri | undefined, value: string, commandValueMapping: IStringDictionary<string> | undefined, resolvedVariables?: Map<string, string>): string {\n\n\t\t// loop through all variables occurrences in 'value'\n\t\tconst replaced = value.replace(AbstractVariableResolverService.VARIABLE_REGEXP, (match: string, variable: string) => {\n\t\t\t// disallow attempted nesting, see #77289\n\t\t\tif (variable.includes(AbstractVariableResolverService.VARIABLE_LHS)) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\tlet resolvedValue = this.evaluateSingleVariable(environment, match, variable, folderUri, commandValueMapping);\n\n\t\t\tif (resolvedVariables) {\n\t\t\t\tresolvedVariables.set(variable, resolvedValue);\n\t\t\t}\n\n\t\t\treturn resolvedValue;\n\t\t});\n\n\t\treturn replaced;\n\t}\n\n\tprivate fsPath(displayUri: uri): string {\n\t\treturn this._labelService ? this._labelService.getUriLabel(displayUri, { noPrefix: true }) : displayUri.fsPath;\n\t}\n\n\tprivate evaluateSingleVariable(environment: IProcessEnvironment | undefined, match: string, variable: string, folderUri: uri | undefined, commandValueMapping: IStringDictionary<string> | undefined): string {\n\n\t\t// try to separate variable arguments from variable name\n\t\tlet argument: string | undefined;\n\t\tconst parts = variable.split(':');\n\t\tif (parts.length > 1) {\n\t\t\tvariable = parts[0];\n\t\t\targument = parts[1];\n\t\t}\n\n\t\t// common error handling for all variables that require an open editor\n\t\tconst getFilePath = (): string => {\n\n\t\t\tconst filePath = this._context.getFilePath();\n\t\t\tif (filePath) {\n\t\t\t\treturn filePath;\n\t\t\t}\n\t\t\tthrow new Error(localize('canNotResolveFile', \"Variable {0} can not be resolved. Please open an editor.\", match));\n\t\t};\n\n\t\t// common error handling for all variables that require an open editor\n\t\tconst getFolderPathForFile = (): string => {\n\n\t\t\tconst filePath = getFilePath();\t\t// throws error if no editor open\n\t\t\tif (this._context.getWorkspaceFolderPathForFile) {\n\t\t\t\tconst folderPath = this._context.getWorkspaceFolderPathForFile();\n\t\t\t\tif (folderPath) {\n\t\t\t\t\treturn folderPath;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new Error(localize('canNotResolveFolderForFile', \"Variable {0}: can not find workspace folder of '{1}'.\", match, paths.basename(filePath)));\n\t\t};\n\n\t\t// common error handling for all variables that require an open folder and accept a folder name argument\n\t\tconst getFolderUri = (): uri => {\n\n\t\t\tif (argument) {\n\t\t\t\tconst folder = this._context.getFolderUri(argument);\n\t\t\t\tif (folder) {\n\t\t\t\t\treturn folder;\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('canNotFindFolder', \"Variable {0} can not be resolved. No such folder '{1}'.\", match, argument));\n\t\t\t}\n\n\t\t\tif (folderUri) {\n\t\t\t\treturn folderUri;\n\t\t\t}\n\n\t\t\tif (this._context.getWorkspaceFolderCount() > 1) {\n\t\t\t\tthrow new Error(localize('canNotResolveWorkspaceFolderMultiRoot', \"Variable {0} can not be resolved in a multi folder workspace. Scope this variable using ':' and a workspace folder name.\", match));\n\t\t\t}\n\t\t\tthrow new Error(localize('canNotResolveWorkspaceFolder', \"Variable {0} can not be resolved. Please open a folder.\", match));\n\t\t};\n\n\n\t\tswitch (variable) {\n\n\t\t\tcase 'env':\n\t\t\t\tif (argument) {\n\t\t\t\t\tif (environment) {\n\t\t\t\t\t\t// Depending on the source of the environment, on Windows, the values may all be lowercase.\n\t\t\t\t\t\tconst env = environment[isWindows ? argument.toLowerCase() : argument];\n\t\t\t\t\t\tif (types.isString(env)) {\n\t\t\t\t\t\t\treturn env;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// For `env` we should do the same as a normal shell does - evaluates undefined envs to an empty string #46436\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('missingEnvVarName', \"Variable {0} can not be resolved because no environment variable name is given.\", match));\n\n\t\t\tcase 'config':\n\t\t\t\tif (argument) {\n\t\t\t\t\tconst config = this._context.getConfigurationValue(folderUri, argument);\n\t\t\t\t\tif (types.isUndefinedOrNull(config)) {\n\t\t\t\t\t\tthrow new Error(localize('configNotFound', \"Variable {0} can not be resolved because setting '{1}' not found.\", match, argument));\n\t\t\t\t\t}\n\t\t\t\t\tif (types.isObject(config)) {\n\t\t\t\t\t\tthrow new Error(localize('configNoString', \"Variable {0} can not be resolved because '{1}' is a structured value.\", match, argument));\n\t\t\t\t\t}\n\t\t\t\t\treturn config;\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('missingConfigName', \"Variable {0} can not be resolved because no settings name is given.\", match));\n\n\t\t\tcase 'command':\n\t\t\t\treturn this.resolveFromMap(match, argument, commandValueMapping, 'command');\n\n\t\t\tcase 'input':\n\t\t\t\treturn this.resolveFromMap(match, argument, commandValueMapping, 'input');\n\n\t\t\tdefault: {\n\n\t\t\t\tswitch (variable) {\n\t\t\t\t\tcase 'workspaceRoot':\n\t\t\t\t\tcase 'workspaceFolder':\n\t\t\t\t\t\treturn normalizeDriveLetter(this.fsPath(getFolderUri()));\n\n\t\t\t\t\tcase 'cwd':\n\t\t\t\t\t\treturn ((folderUri || argument) ? normalizeDriveLetter(this.fsPath(getFolderUri())) : process.cwd());\n\n\t\t\t\t\tcase 'workspaceRootFolderName':\n\t\t\t\t\tcase 'workspaceFolderBasename':\n\t\t\t\t\t\treturn paths.basename(this.fsPath(getFolderUri()));\n\n\t\t\t\t\tcase 'lineNumber':\n\t\t\t\t\t\tconst lineNumber = this._context.getLineNumber();\n\t\t\t\t\t\tif (lineNumber) {\n\t\t\t\t\t\t\treturn lineNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(localize('canNotResolveLineNumber', \"Variable {0} can not be resolved. Make sure to have a line selected in the active editor.\", match));\n\n\t\t\t\t\tcase 'selectedText':\n\t\t\t\t\t\tconst selectedText = this._context.getSelectedText();\n\t\t\t\t\t\tif (selectedText) {\n\t\t\t\t\t\t\treturn selectedText;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(localize('canNotResolveSelectedText', \"Variable {0} can not be resolved. Make sure to have some text selected in the active editor.\", match));\n\n\t\t\t\t\tcase 'file':\n\t\t\t\t\t\treturn getFilePath();\n\n\t\t\t\t\tcase 'fileWorkspaceFolder':\n\t\t\t\t\t\treturn getFolderPathForFile();\n\n\t\t\t\t\tcase 'relativeFile':\n\t\t\t\t\t\tif (folderUri || argument) {\n\t\t\t\t\t\t\treturn paths.relative(this.fsPath(getFolderUri()), getFilePath());\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn getFilePath();\n\n\t\t\t\t\tcase 'relativeFileDirname':\n\t\t\t\t\t\tconst dirname = paths.dirname(getFilePath());\n\t\t\t\t\t\tif (folderUri || argument) {\n\t\t\t\t\t\t\tconst relative = paths.relative(this.fsPath(getFolderUri()), dirname);\n\t\t\t\t\t\t\treturn relative.length === 0 ? '.' : relative;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn dirname;\n\n\t\t\t\t\tcase 'fileDirname':\n\t\t\t\t\t\treturn paths.dirname(getFilePath());\n\n\t\t\t\t\tcase 'fileExtname':\n\t\t\t\t\t\treturn paths.extname(getFilePath());\n\n\t\t\t\t\tcase 'fileBasename':\n\t\t\t\t\t\treturn paths.basename(getFilePath());\n\n\t\t\t\t\tcase 'fileBasenameNoExtension':\n\t\t\t\t\t\tconst basename = paths.basename(getFilePath());\n\t\t\t\t\t\treturn (basename.slice(0, basename.length - paths.extname(basename).length));\n\n\t\t\t\t\tcase 'fileDirnameBasename':\n\t\t\t\t\t\treturn paths.basename(paths.dirname(getFilePath()));\n\n\t\t\t\t\tcase 'execPath':\n\t\t\t\t\t\tconst ep = this._context.getExecPath();\n\t\t\t\t\t\tif (ep) {\n\t\t\t\t\t\t\treturn ep;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn match;\n\n\t\t\t\t\tcase 'execInstallFolder':\n\t\t\t\t\t\tconst ar = this._context.getAppRoot();\n\t\t\t\t\t\tif (ar) {\n\t\t\t\t\t\t\treturn ar;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn match;\n\n\t\t\t\t\tcase 'pathSeparator':\n\t\t\t\t\t\treturn paths.sep;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst key = argument ? `${variable}:${argument}` : variable;\n\t\t\t\t\t\t\treturn this.resolveFromMap(match, key, commandValueMapping, undefined);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate resolveFromMap(match: string, argument: string | undefined, commandValueMapping: IStringDictionary<string> | undefined, prefix: string | undefined): string {\n\t\tif (argument && commandValueMapping) {\n\t\t\tconst v = (prefix === undefined) ? commandValueMapping[argument] : commandValueMapping[prefix + ':' + argument];\n\t\t\tif (typeof v === 'string') {\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tthrow new Error(localize('noValueForCommand', \"Variable {0} can not be resolved because the command has no value.\", match));\n\t\t}\n\t\treturn match;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IResourceEditorInput, IEditorOptions, ITextEditorOptions, IResourceEditorInputIdentifier } from 'vs/platform/editor/common/editor';\nimport { IEditorInput, IEditorPane, GroupIdentifier, IEditorInputWithOptions, IUntitledTextResourceEditorInput, IResourceDiffEditorInput, ITextEditorPane, ITextDiffEditorPane, IEditorIdentifier, ISaveOptions, IRevertOptions, EditorsOrder, IVisibleEditorPane, IEditorCloseEvent } from 'vs/workbench/common/editor';\nimport { Event } from 'vs/base/common/event';\nimport { IEditor, IDiffEditor } from 'vs/editor/common/editorCommon';\nimport { IEditorGroup, IEditorReplacement } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport const IEditorService = createDecorator<IEditorService>('editorService');\n\nexport type IResourceEditorInputType = IResourceEditorInput | IUntitledTextResourceEditorInput | IResourceDiffEditorInput;\n\nexport interface IResourceEditorReplacement {\n\treadonly editor: IResourceEditorInputType;\n\treadonly replacement: IResourceEditorInputType;\n}\n\nexport const ACTIVE_GROUP = -1;\nexport type ACTIVE_GROUP_TYPE = typeof ACTIVE_GROUP;\n\nexport const SIDE_GROUP = -2;\nexport type SIDE_GROUP_TYPE = typeof SIDE_GROUP;\n\nexport interface IOpenEditorOverrideEntry {\n\treadonly id: string;\n\treadonly label: string;\n\treadonly active: boolean;\n\treadonly detail?: string;\n}\n\nexport interface IOpenEditorOverrideHandler {\n\topen(editor: IEditorInput, options: IEditorOptions | ITextEditorOptions | undefined, group: IEditorGroup): IOpenEditorOverride | undefined;\n\tgetEditorOverrides?(resource: URI, options: IEditorOptions | undefined, group: IEditorGroup | undefined): IOpenEditorOverrideEntry[];\n}\n\nexport interface IOpenEditorOverride {\n\n\t/**\n\t * If defined, will prevent the opening of an editor and replace the resulting\n\t * promise with the provided promise for the openEditor() call.\n\t */\n\toverride?: Promise<IEditorPane | undefined>;\n}\n\nexport interface ISaveEditorsOptions extends ISaveOptions {\n\n\t/**\n\t * If true, will ask for a location of the editor to save to.\n\t */\n\treadonly saveAs?: boolean;\n}\n\nexport interface IBaseSaveRevertAllEditorOptions {\n\n\t/**\n\t * Whether to include untitled editors as well.\n\t */\n\treadonly includeUntitled?: boolean;\n\n\t/**\n\t * Whether to exclude sticky editors.\n\t */\n\treadonly excludeSticky?: boolean;\n}\n\nexport interface ISaveAllEditorsOptions extends ISaveEditorsOptions, IBaseSaveRevertAllEditorOptions { }\n\nexport interface IRevertAllEditorsOptions extends IRevertOptions, IBaseSaveRevertAllEditorOptions { }\n\nexport interface IEditorService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Emitted when the currently active editor changes.\n\t *\n\t * @see `IEditorService.activeEditorPane`\n\t */\n\treadonly onDidActiveEditorChange: Event<void>;\n\n\t/**\n\t * Emitted when any of the current visible editors changes.\n\t *\n\t * @see `IEditorService.visibleEditorPanes`\n\t */\n\treadonly onDidVisibleEditorsChange: Event<void>;\n\n\t/**\n\t * Emitted when an editor is closed.\n\t */\n\treadonly onDidCloseEditor: Event<IEditorCloseEvent>;\n\n\t/**\n\t * The currently active editor pane or `undefined` if none. The editor pane is\n\t * the workbench container for editors of any kind.\n\t *\n\t * @see `IEditorService.activeEditor` for access to the active editor input\n\t */\n\treadonly activeEditorPane: IVisibleEditorPane | undefined;\n\n\t/**\n\t * The currently active editor or `undefined` if none. An editor is active when it is\n\t * located in the currently active editor group. It will be `undefined` if the active\n\t * editor group has no editors open.\n\t */\n\treadonly activeEditor: IEditorInput | undefined;\n\n\t/**\n\t * The currently active text editor control or `undefined` if there is currently no active\n\t * editor or the active editor widget is neither a text nor a diff editor.\n\t *\n\t * @see `IEditorService.activeEditor`\n\t */\n\treadonly activeTextEditorControl: IEditor | IDiffEditor | undefined;\n\n\t/**\n\t * The currently active text editor mode or `undefined` if there is currently no active\n\t * editor or the active editor control is neither a text nor a diff editor. If the active\n\t * editor is a diff editor, the modified side's mode will be taken.\n\t */\n\treadonly activeTextEditorMode: string | undefined;\n\n\t/**\n\t * All editor panes that are currently visible across all editor groups.\n\t *\n\t * @see `IEditorService.visibleEditors` for access to the visible editor inputs\n\t */\n\treadonly visibleEditorPanes: readonly IVisibleEditorPane[];\n\n\t/**\n\t * All editors that are currently visible. An editor is visible when it is opened in an\n\t * editor group and active in that group. Multiple editor groups can be opened at the same time.\n\t */\n\treadonly visibleEditors: readonly IEditorInput[];\n\n\t/**\n\t * All text editor widgets that are currently visible across all editor groups. A text editor\n\t * widget is either a text or a diff editor.\n\t */\n\treadonly visibleTextEditorControls: readonly (IEditor | IDiffEditor)[];\n\n\t/**\n\t * All editors that are opened across all editor groups in sequential order\n\t * of appearance.\n\t *\n\t * This includes active as well as inactive editors in each editor group.\n\t */\n\treadonly editors: readonly IEditorInput[];\n\n\t/**\n\t * The total number of editors that are opened either inactive or active.\n\t */\n\treadonly count: number;\n\n\t/**\n\t * All editors that are opened across all editor groups with their group\n\t * identifier.\n\t *\n\t * @param order the order of the editors to use\n\t * @param options whether to exclude sticky editors or not\n\t */\n\tgetEditors(order: EditorsOrder, options?: { excludeSticky?: boolean }): readonly IEditorIdentifier[];\n\n\t/**\n\t * Open an editor in an editor group.\n\t *\n\t * @param editor the editor to open\n\t * @param options the options to use for the editor\n\t * @param group the target group. If unspecified, the editor will open in the currently\n\t * active group. Use `SIDE_GROUP_TYPE` to open the editor in a new editor group to the side\n\t * of the currently active group.\n\t *\n\t * @returns the editor that opened or `undefined` if the operation failed or the editor was not\n\t * opened to be active.\n\t */\n\topenEditor(editor: IEditorInput, options?: IEditorOptions | ITextEditorOptions, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<IEditorPane | undefined>;\n\topenEditor(editor: IResourceEditorInput | IUntitledTextResourceEditorInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextEditorPane | undefined>;\n\topenEditor(editor: IResourceDiffEditorInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextDiffEditorPane | undefined>;\n\n\t/**\n\t * Open editors in an editor group.\n\t *\n\t * @param editors the editors to open with associated options\n\t * @param group the target group. If unspecified, the editor will open in the currently\n\t * active group. Use `SIDE_GROUP_TYPE` to open the editor in a new editor group to the side\n\t * of the currently active group.\n\t *\n\t * @returns the editors that opened. The array can be empty or have less elements for editors\n\t * that failed to open or were instructed to open as inactive.\n\t */\n\topenEditors(editors: IEditorInputWithOptions[], group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<readonly IEditorPane[]>;\n\topenEditors(editors: IResourceEditorInputType[], group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<readonly IEditorPane[]>;\n\n\t/**\n\t * Replaces editors in an editor group with the provided replacement.\n\t *\n\t * @param editors the editors to replace\n\t * @param group the editor group\n\t *\n\t * @returns a promise that is resolved when the replaced active\n\t * editor (if any) has finished loading.\n\t */\n\treplaceEditors(editors: IResourceEditorReplacement[], group: IEditorGroup | GroupIdentifier): Promise<void>;\n\treplaceEditors(editors: IEditorReplacement[], group: IEditorGroup | GroupIdentifier): Promise<void>;\n\n\t/**\n\t * Find out if the provided editor is opened in any editor group.\n\t *\n\t * Note: An editor can be opened but not actively visible.\n\t *\n\t * Note: This method will return `true` if a side by side editor\n\t * is opened where the `primary` editor matches too.\n\t */\n\tisOpened(editor: IResourceEditorInputIdentifier): boolean;\n\n\t/**\n\t * This method will return an entry for each editor that reports\n\t * a `resource` that matches the provided one in the group or\n\t * across all groups.\n\t *\n\t * It is possible that multiple editors are returned in case the\n\t * same resource is opened in different editors. To find the specific\n\t * editor, use the `IResourceEditorInputIdentifier` as input.\n\t */\n\tfindEditors(resource: URI): readonly IEditorIdentifier[];\n\tfindEditors(resource: IResourceEditorInputIdentifier): readonly IEditorIdentifier[];\n\tfindEditors(resource: URI, group: IEditorGroup | GroupIdentifier): readonly IEditorInput[];\n\tfindEditors(resource: IResourceEditorInputIdentifier, group: IEditorGroup | GroupIdentifier): IEditorInput | undefined;\n\n\t/**\n\t * Get all available editor overrides for the editor input.\n\t */\n\tgetEditorOverrides(resource: URI, options: IEditorOptions | undefined, group: IEditorGroup | undefined): [IOpenEditorOverrideHandler, IOpenEditorOverrideEntry][];\n\n\t/**\n\t * Allows to override the opening of editors by installing a handler that will\n\t * be called each time an editor is about to open allowing to override the\n\t * operation to open a different editor.\n\t */\n\toverrideOpenEditor(handler: IOpenEditorOverrideHandler): IDisposable;\n\n\t/**\n\t * Converts a lightweight input to a workbench editor input.\n\t */\n\tcreateEditorInput(input: IResourceEditorInputType): IEditorInput;\n\n\t/**\n\t * Save the provided list of editors.\n\t *\n\t * @returns `true` if all editors saved and `false` otherwise.\n\t */\n\tsave(editors: IEditorIdentifier | IEditorIdentifier[], options?: ISaveEditorsOptions): Promise<boolean>;\n\n\t/**\n\t * Save all editors.\n\t *\n\t * @returns `true` if all editors saved and `false` otherwise.\n\t */\n\tsaveAll(options?: ISaveAllEditorsOptions): Promise<boolean>;\n\n\t/**\n\t * Reverts the provided list of editors.\n\t *\n\t * @returns `true` if all editors reverted and `false` otherwise.\n\t */\n\trevert(editors: IEditorIdentifier | IEditorIdentifier[], options?: IRevertOptions): Promise<boolean>;\n\n\t/**\n\t * Reverts all editors.\n\t *\n\t * @returns `true` if all editors reverted and `false` otherwise.\n\t */\n\trevertAll(options?: IRevertAllEditorsOptions): Promise<boolean>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { withNullAsUndefined, assertIsDefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable, Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IEditor, IEditorViewState, ScrollType, IDiffEditor } from 'vs/editor/common/editorCommon';\nimport { IEditorModel, IEditorOptions, ITextEditorOptions, IBaseResourceEditorInput, IResourceEditorInput, EditorActivation, EditorOpenContext, ITextEditorSelection, TextEditorSelectionRevealType, EditorOverride } from 'vs/platform/editor/common/editor';\nimport { IInstantiationService, IConstructorSignature0, ServicesAccessor, BrandedService } from 'vs/platform/instantiation/common/instantiation';\nimport { IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IEncodingSupport, IModeSupport } from 'vs/workbench/services/textfile/common/textfiles';\nimport { GroupsOrder, IEditorGroup, IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { ICompositeControl, IComposite } from 'vs/workbench/common/composite';\nimport { ActionRunner, IAction } from 'vs/base/common/actions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IPathData } from 'vs/platform/windows/common/windows';\nimport { coalesce, firstOrDefault } from 'vs/base/common/arrays';\nimport { ACTIVE_GROUP, IResourceEditorInputType, SIDE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IExtUri } from 'vs/base/common/resources';\n\n// Static values for editor contributions\nexport const EditorExtensions = {\n\tEditors: 'workbench.contributions.editors',\n\tAssociations: 'workbench.editors.associations',\n\tEditorInputFactories: 'workbench.contributions.editor.inputFactories'\n};\n\n// Editor State Context Keys\nexport const ActiveEditorDirtyContext = new RawContextKey<boolean>('activeEditorIsDirty', false, localize('activeEditorIsDirty', \"Whether the active editor is dirty\"));\nexport const ActiveEditorPinnedContext = new RawContextKey<boolean>('activeEditorIsNotPreview', false, localize('activeEditorIsNotPreview', \"Whether the active editor is not in preview mode\"));\nexport const ActiveEditorStickyContext = new RawContextKey<boolean>('activeEditorIsPinned', false, localize('activeEditorIsPinned', \"Whether the active editor is pinned\"));\nexport const ActiveEditorReadonlyContext = new RawContextKey<boolean>('activeEditorIsReadonly', false, localize('activeEditorIsReadonly', \"Whether the active editor is readonly\"));\n\n// Editor Kind Context Keys\nexport const ActiveEditorContext = new RawContextKey<string | null>('activeEditor', null, { type: 'string', description: localize('activeEditor', \"The identifier of the active editor\") });\nexport const ActiveEditorAvailableEditorIdsContext = new RawContextKey<string>('activeEditorAvailableEditorIds', '', localize('activeEditorAvailableEditorIds', \"The available editor identifiers that are usable for the active editor\"));\nexport const TextCompareEditorVisibleContext = new RawContextKey<boolean>('textCompareEditorVisible', false, localize('textCompareEditorVisible', \"Whether a text compare editor is visible\"));\nexport const TextCompareEditorActiveContext = new RawContextKey<boolean>('textCompareEditorActive', false, localize('textCompareEditorActive', \"Whether a text compare editor is active\"));\n\n// Editor Group Context Keys\nexport const EditorGroupEditorsCountContext = new RawContextKey<number>('groupEditorsCount', 0, localize('groupEditorsCount', \"The number of opened editor groups\"));\nexport const ActiveEditorGroupEmptyContext = new RawContextKey<boolean>('activeEditorGroupEmpty', false, localize('activeEditorGroupEmpty', \"Whether the active editor group is empty\"));\nexport const ActiveEditorGroupIndexContext = new RawContextKey<number>('activeEditorGroupIndex', 0, localize('activeEditorGroupIndex', \"The index of the active editor group\"));\nexport const ActiveEditorGroupLastContext = new RawContextKey<boolean>('activeEditorGroupLast', false, localize('activeEditorGroupLast', \"Whether the active editor group is the last group\"));\nexport const MultipleEditorGroupsContext = new RawContextKey<boolean>('multipleEditorGroups', false, localize('multipleEditorGroups', \"Whether there are multiple editor groups opened\"));\nexport const SingleEditorGroupsContext = MultipleEditorGroupsContext.toNegated();\n\n// Editor Layout Context Keys\nexport const EditorsVisibleContext = new RawContextKey<boolean>('editorIsOpen', false, localize('editorIsOpen', \"Whether an editor is open\"));\nexport const InEditorZenModeContext = new RawContextKey<boolean>('inZenMode', false, localize('inZenMode', \"Whether Zen mode is enabled\"));\nexport const IsCenteredLayoutContext = new RawContextKey<boolean>('isCenteredLayout', false, localize('isCenteredLayout', \"Whether centered layout is enabled\"));\nexport const SplitEditorsVertically = new RawContextKey<boolean>('splitEditorsVertically', false, localize('splitEditorsVertically', \"Whether editors split vertically\"));\nexport const EditorAreaVisibleContext = new RawContextKey<boolean>('editorAreaVisible', true, localize('editorAreaVisible', \"Whether the editor area is visible\"));\n\n/**\n * Text diff editor id.\n */\nexport const TEXT_DIFF_EDITOR_ID = 'workbench.editors.textDiffEditor';\n\n/**\n * Binary diff editor id.\n */\nexport const BINARY_DIFF_EDITOR_ID = 'workbench.editors.binaryResourceDiffEditor';\n\n/**\n * The editor pane is the container for workbench editors.\n */\nexport interface IEditorPane extends IComposite {\n\n\t/**\n\t * The assigned input of this editor.\n\t */\n\treadonly input: IEditorInput | undefined;\n\n\t/**\n\t * The assigned options of the editor.\n\t */\n\treadonly options: IEditorOptions | undefined;\n\n\t/**\n\t * The assigned group this editor is showing in.\n\t */\n\treadonly group: IEditorGroup | undefined;\n\n\t/**\n\t * The minimum width of this editor.\n\t */\n\treadonly minimumWidth: number;\n\n\t/**\n\t * The maximum width of this editor.\n\t */\n\treadonly maximumWidth: number;\n\n\t/**\n\t * The minimum height of this editor.\n\t */\n\treadonly minimumHeight: number;\n\n\t/**\n\t * The maximum height of this editor.\n\t */\n\treadonly maximumHeight: number;\n\n\t/**\n\t * An event to notify whenever minimum/maximum width/height changes.\n\t */\n\treadonly onDidChangeSizeConstraints: Event<{ width: number; height: number; } | undefined>;\n\n\t/**\n\t * The context key service for this editor. Should be overridden by\n\t * editors that have their own ScopedContextKeyService\n\t */\n\treadonly scopedContextKeyService: IContextKeyService | undefined;\n\n\t/**\n\t * Returns the underlying control of this editor. Callers need to cast\n\t * the control to a specific instance as needed, e.g. by using the\n\t * `isCodeEditor` helper method to access the text code editor.\n\t */\n\tgetControl(): IEditorControl | undefined;\n\n\t/**\n\t * Finds out if this editor is visible or not.\n\t */\n\tisVisible(): boolean;\n}\n\n/**\n * Overrides `IEditorPane` where `input` and `group` are known to be set.\n */\nexport interface IVisibleEditorPane extends IEditorPane {\n\treadonly input: IEditorInput;\n\treadonly group: IEditorGroup;\n}\n\n/**\n * The text editor pane is the container for workbench text editors.\n */\nexport interface ITextEditorPane extends IEditorPane {\n\n\t/**\n\t * Returns the underlying text editor widget of this editor.\n\t */\n\tgetControl(): IEditor | undefined;\n\n\t/**\n\t * Returns the current view state of the text editor if any.\n\t */\n\tgetViewState(): IEditorViewState | undefined;\n}\n\nexport function isTextEditorPane(thing: IEditorPane | undefined): thing is ITextEditorPane {\n\tconst candidate = thing as ITextEditorPane | undefined;\n\n\treturn typeof candidate?.getViewState === 'function';\n}\n\n/**\n * The text editor pane is the container for workbench text diff editors.\n */\nexport interface ITextDiffEditorPane extends IEditorPane {\n\n\t/**\n\t * Returns the underlying text editor widget of this editor.\n\t */\n\tgetControl(): IDiffEditor | undefined;\n}\n\n/**\n * Marker interface for the control inside an editor pane. Callers\n * have to cast the control to work with it, e.g. via methods\n * such as `isCodeEditor(control)`.\n */\nexport interface IEditorControl extends ICompositeControl { }\n\nexport interface IFileEditorInputFactory {\n\n\t/**\n\t * The type identifier of the file editor input.\n\t */\n\ttypeId: string;\n\n\t/**\n\t * Creates new new editor input capable of showing files.\n\t */\n\tcreateFileEditorInput(resource: URI, preferredResource: URI | undefined, preferredName: string | undefined, preferredDescription: string | undefined, preferredEncoding: string | undefined, preferredMode: string | undefined, instantiationService: IInstantiationService): IFileEditorInput;\n\n\t/**\n\t * Check if the provided object is a file editor input.\n\t */\n\tisFileEditorInput(obj: unknown): obj is IFileEditorInput;\n}\n\n/**\n * @deprecated obsolete\n *\n * TODO@bpasero remove this API and users once the generic backup restorer has been removed\n */\nexport interface ICustomEditorInputFactory {\n\t/**\n\t * @deprecated obsolete\n\t */\n\tcreateCustomEditorInput(resource: URI, instantiationService: IInstantiationService): Promise<IEditorInput>;\n\t/**\n\t * @deprecated obsolete\n\t */\n\tcanResolveBackup(editorInput: IEditorInput, backupResource: URI): boolean;\n}\n\nexport interface IEditorInputFactoryRegistry {\n\n\t/**\n\t * Registers the file editor input factory to use for file inputs.\n\t */\n\tregisterFileEditorInputFactory(factory: IFileEditorInputFactory): void;\n\n\t/**\n\t * Returns the file editor input factory to use for file inputs.\n\t */\n\tgetFileEditorInputFactory(): IFileEditorInputFactory;\n\n\t/**\n\t * Registers the custom editor input factory to use for custom inputs.\n\t *\n\t * @deprecated obsolete\n\t */\n\tregisterCustomEditorInputFactory(scheme: string, factory: ICustomEditorInputFactory): void;\n\n\t/**\n\t * Returns the custom editor input factory to use for custom inputs.\n\t *\n\t * @deprecated obsolete\n\t */\n\tgetCustomEditorInputFactory(scheme: string): ICustomEditorInputFactory | undefined;\n\n\t/**\n\t * Registers a editor input serializer for the given editor input to the registry.\n\t * An editor input serializer is capable of serializing and deserializing editor\n\t * inputs from string data.\n\t *\n\t * @param editorInputTypeId the type identifier of the editor input\n\t * @param serializer the editor input serializer for serialization/deserialization\n\t */\n\tregisterEditorInputSerializer<Services extends BrandedService[]>(editorInputTypeId: string, ctor: { new(...Services: Services): IEditorInputSerializer }): IDisposable;\n\n\t/**\n\t * Returns the editor input serializer for the given editor input.\n\t */\n\tgetEditorInputSerializer(editorInput: IEditorInput): IEditorInputSerializer | undefined;\n\tgetEditorInputSerializer(editorInputTypeId: string): IEditorInputSerializer | undefined;\n\n\t/**\n\t * Starts the registry by providing the required services.\n\t */\n\tstart(accessor: ServicesAccessor): void;\n}\n\nexport interface IEditorInputSerializer {\n\n\t/**\n\t * Determines whether the given editor input can be serialized by the serializer.\n\t */\n\tcanSerialize(editorInput: IEditorInput): boolean;\n\n\t/**\n\t * Returns a string representation of the provided editor input that contains enough information\n\t * to deserialize back to the original editor input from the deserialize() method.\n\t */\n\tserialize(editorInput: IEditorInput): string | undefined;\n\n\t/**\n\t * Returns an editor input from the provided serialized form of the editor input. This form matches\n\t * the value returned from the serialize() method.\n\t */\n\tdeserialize(instantiationService: IInstantiationService, serializedEditorInput: string): EditorInput | undefined;\n}\n\nexport interface IUntitledTextResourceEditorInput extends IBaseResourceEditorInput {\n\n\t/**\n\t * Optional resource. If the resource is not provided a new untitled file is created (e.g. Untitled-1).\n\t * If the used scheme for the resource is not `untitled://`, `forceUntitled: true` must be configured to\n\t * force use the provided resource as associated path. As such, the resource will be used when saving\n\t * the untitled editor.\n\t */\n\treadonly resource?: URI;\n\n\t/**\n\t * Optional language of the untitled resource.\n\t */\n\treadonly mode?: string;\n\n\t/**\n\t * Optional contents of the untitled resource.\n\t */\n\treadonly contents?: string;\n\n\t/**\n\t * Optional encoding of the untitled resource.\n\t */\n\treadonly encoding?: string;\n}\n\nexport interface IResourceDiffEditorInput extends IBaseResourceEditorInput {\n\n\t/**\n\t * The left hand side URI to open inside a diff editor.\n\t */\n\treadonly leftResource: URI;\n\n\t/**\n\t * The right hand side URI to open inside a diff editor.\n\t */\n\treadonly rightResource: URI;\n}\n\nexport const enum Verbosity {\n\tSHORT,\n\tMEDIUM,\n\tLONG\n}\n\nexport const enum SaveReason {\n\n\t/**\n\t * Explicit user gesture.\n\t */\n\tEXPLICIT = 1,\n\n\t/**\n\t * Auto save after a timeout.\n\t */\n\tAUTO = 2,\n\n\t/**\n\t * Auto save after editor focus change.\n\t */\n\tFOCUS_CHANGE = 3,\n\n\t/**\n\t * Auto save after window change.\n\t */\n\tWINDOW_CHANGE = 4\n}\n\nexport interface ISaveOptions {\n\n\t/**\n\t * An indicator how the save operation was triggered.\n\t */\n\treason?: SaveReason;\n\n\t/**\n\t * Forces to save the contents of the working copy\n\t * again even if the working copy is not dirty.\n\t */\n\treadonly force?: boolean;\n\n\t/**\n\t * Instructs the save operation to skip any save participants.\n\t */\n\treadonly skipSaveParticipants?: boolean;\n\n\t/**\n\t * A hint as to which file systems should be available for saving.\n\t */\n\treadonly availableFileSystems?: string[];\n}\n\nexport interface IRevertOptions {\n\n\t/**\n\t * Forces to load the contents of the working copy\n\t * again even if the working copy is not dirty.\n\t */\n\treadonly force?: boolean;\n\n\t/**\n\t * A soft revert will clear dirty state of a working copy\n\t * but will not attempt to load it from its persisted state.\n\t *\n\t * This option may be used in scenarios where an editor is\n\t * closed and where we do not require to load the contents.\n\t */\n\treadonly soft?: boolean;\n}\n\nexport interface IMoveResult {\n\teditor: EditorInput | IResourceEditorInputType;\n\toptions?: IEditorOptions;\n}\n\nexport interface IEditorInput extends IDisposable {\n\n\t/**\n\t * Triggered when this input is about to be disposed.\n\t */\n\treadonly onWillDispose: Event<void>;\n\n\t/**\n\t * Triggered when this input changes its dirty state.\n\t */\n\treadonly onDidChangeDirty: Event<void>;\n\n\t/**\n\t * Triggered when this input changes its label\n\t */\n\treadonly onDidChangeLabel: Event<void>;\n\n\t/**\n\t * Unique type identifier for this inpput. Every editor input of the\n\t * same class should share the same type identifier. The type identifier\n\t * is used for example for serialising/deserialising editor inputs\n\t * via the serialisers of the `IEditorInputFactoryRegistry`.\n\t */\n\treadonly typeId: string;\n\n\t/**\n\t * Returns the optional associated resource of this input.\n\t *\n\t * This resource should be unique for all editors of the same\n\t * kind and input and is often used to identify the editor input among\n\t * others.\n\t *\n\t * **Note:** DO NOT use this property for anything but identity\n\t * checks. DO NOT use this property to present as label to the user.\n\t * Please refer to `EditorResourceAccessor` documentation in that case.\n\t */\n\treadonly resource: URI | undefined;\n\n\t/**\n\t * Returns the display name of this input.\n\t */\n\tgetName(): string;\n\n\t/**\n\t * Returns the display description of this input.\n\t */\n\tgetDescription(verbosity?: Verbosity): string | undefined;\n\n\t/**\n\t * Returns the display title of this input.\n\t */\n\tgetTitle(verbosity?: Verbosity): string | undefined;\n\n\t/**\n\t * Returns the aria label to be read out by a screen reader.\n\t */\n\tgetAriaLabel(): string;\n\n\t/**\n\t * Returns a type of `IEditorModel` that represents the resolved input.\n\t * Subclasses should override to provide a meaningful model or return\n\t * `null` if the editor does not require a model.\n\t */\n\tresolve(): Promise<IEditorModel | null>;\n\n\t/**\n\t * Returns if this input is readonly or not.\n\t */\n\tisReadonly(): boolean;\n\n\t/**\n\t * Returns if the input is an untitled editor or not.\n\t */\n\tisUntitled(): boolean;\n\n\t/**\n\t * Returns if this input is dirty or not.\n\t */\n\tisDirty(): boolean;\n\n\t/**\n\t * Returns if this input is currently being saved or soon to be\n\t * saved. Based on this assumption the editor may for example\n\t * decide to not signal the dirty state to the user assuming that\n\t * the save is scheduled to happen anyway.\n\t */\n\tisSaving(): boolean;\n\n\t/**\n\t * Saves the editor. The provided groupId helps implementors\n\t * to e.g. preserve view state of the editor and re-open it\n\t * in the correct group after saving.\n\t *\n\t * @returns the resulting editor input (typically the same) of\n\t * this operation or `undefined` to indicate that the operation\n\t * failed or was canceled.\n\t */\n\tsave(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined>;\n\n\t/**\n\t * Saves the editor to a different location. The provided `group`\n\t * helps implementors to e.g. preserve view state of the editor\n\t * and re-open it in the correct group after saving.\n\t *\n\t * @returns the resulting editor input (typically a different one)\n\t * of this operation or `undefined` to indicate that the operation\n\t * failed or was canceled.\n\t */\n\tsaveAs(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined>;\n\n\t/**\n\t * Reverts this input from the provided group.\n\t */\n\trevert(group: GroupIdentifier, options?: IRevertOptions): Promise<void>;\n\n\t/**\n\t * Called to determine how to handle a resource that is renamed that matches\n\t * the editors resource (or is a child of).\n\t *\n\t * Implementors are free to not implement this method to signal no intent\n\t * to participate. If an editor is returned though, it will replace the\n\t * current one with that editor and optional options.\n\t */\n\trename(group: GroupIdentifier, target: URI): IMoveResult | undefined;\n\n\t/**\n\t * Subclasses can set this to false if it does not make sense to split the editor input.\n\t */\n\tcanSplit(): boolean;\n\n\t/**\n\t * Returns if the other object matches this input.\n\t */\n\tmatches(other: unknown): boolean;\n\n\t/**\n\t * Returns if this editor is disposed.\n\t */\n\tisDisposed(): boolean;\n\n\t/**\n\t * Returns a copy of the current editor input. Used when we can't just reuse the input\n\t */\n\tcopy(): IEditorInput;\n}\n\n/**\n * Editor inputs are lightweight objects that can be passed to the workbench API to open inside the editor part.\n * Each editor input is mapped to an editor that is capable of opening it through the Platform facade.\n */\nexport abstract class EditorInput extends Disposable implements IEditorInput {\n\n\tprotected readonly _onDidChangeDirty = this._register(new Emitter<void>());\n\treadonly onDidChangeDirty = this._onDidChangeDirty.event;\n\n\tprotected readonly _onDidChangeLabel = this._register(new Emitter<void>());\n\treadonly onDidChangeLabel = this._onDidChangeLabel.event;\n\n\tprivate readonly _onWillDispose = this._register(new Emitter<void>());\n\treadonly onWillDispose = this._onWillDispose.event;\n\n\tprivate disposed: boolean = false;\n\n\tabstract get typeId(): string;\n\n\tabstract get resource(): URI | undefined;\n\n\tgetName(): string {\n\t\treturn `Editor ${this.typeId}`;\n\t}\n\n\tgetDescription(verbosity?: Verbosity): string | undefined {\n\t\treturn undefined;\n\t}\n\n\tgetTitle(verbosity?: Verbosity): string {\n\t\treturn this.getName();\n\t}\n\n\tgetAriaLabel(): string {\n\t\treturn this.getTitle(Verbosity.SHORT);\n\t}\n\n\t/**\n\t * Returns the preferred editor for this input. A list of candidate editors is passed in that whee registered\n\t * for the input. This allows subclasses to decide late which editor to use for the input on a case by case basis.\n\t */\n\tgetPreferredEditorId(candidates: string[]): string | undefined {\n\t\treturn firstOrDefault(candidates);\n\t}\n\n\t/**\n\t* Returns a descriptor suitable for telemetry events.\n\t*\n\t* Subclasses should extend if they can contribute.\n\t*/\n\tgetTelemetryDescriptor(): { [key: string]: unknown } {\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"EditorTelemetryDescriptor\" : {\n\t\t\t\t\"typeId\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\treturn { typeId: this.typeId };\n\t}\n\n\tisReadonly(): boolean {\n\t\treturn true;\n\t}\n\n\tisUntitled(): boolean {\n\t\treturn false;\n\t}\n\n\tisDirty(): boolean {\n\t\treturn false;\n\t}\n\n\tisSaving(): boolean {\n\t\treturn false;\n\t}\n\n\tasync resolve(): Promise<IEditorModel | null> {\n\t\treturn null;\n\t}\n\n\tasync save(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\treturn this;\n\t}\n\n\tasync saveAs(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\treturn this;\n\t}\n\n\tasync revert(group: GroupIdentifier, options?: IRevertOptions): Promise<void> { }\n\n\trename(group: GroupIdentifier, target: URI): IMoveResult | undefined {\n\t\treturn undefined;\n\t}\n\n\tcanSplit(): boolean {\n\t\treturn true;\n\t}\n\n\tmatches(otherInput: unknown): boolean {\n\t\treturn this === otherInput;\n\t}\n\n\tcopy(): IEditorInput {\n\t\treturn this;\n\t}\n\n\tisDisposed(): boolean {\n\t\treturn this.disposed;\n\t}\n\n\toverride dispose(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis.disposed = true;\n\t\t\tthis._onWillDispose.fire();\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface IEditorInputWithPreferredResource {\n\n\t/**\n\t * An editor may provide an additional preferred resource alongside\n\t * the `resource` property. While the `resource` property serves as\n\t * unique identifier of the editor that should be used whenever we\n\t * compare to other editors, the `preferredResource` should be used\n\t * in places where e.g. the resource is shown to the user.\n\t *\n\t * For example: on Windows and macOS, the same URI with different\n\t * casing may point to the same file. The editor may chose to\n\t * \"normalize\" the URIs so that only one editor opens for different\n\t * URIs. But when displaying the editor label to the user, the\n\t * preferred URI should be used.\n\t *\n\t * Not all editors have a `preferredResouce`. The `EditorResourceAccessor`\n\t * utility can be used to always get the right resource without having\n\t * to do instanceof checks.\n\t */\n\treadonly preferredResource: URI;\n}\n\nexport function isEditorInputWithPreferredResource(obj: unknown): obj is IEditorInputWithPreferredResource {\n\tconst editorInputWithPreferredResource = obj as IEditorInputWithPreferredResource;\n\n\treturn editorInputWithPreferredResource && !!editorInputWithPreferredResource.preferredResource;\n}\n\n/**\n * This is a tagging interface to declare an editor input being capable of dealing with files. It is only used in the editor registry\n * to register this kind of input to the platform.\n */\nexport interface IFileEditorInput extends IEditorInput, IEncodingSupport, IModeSupport, IEditorInputWithPreferredResource {\n\n\t/**\n\t * Gets the resource this file input is about. This will always be the\n\t * canonical form of the resource, so it may differ from the original\n\t * resource that was provided to create the input. Use `preferredResource`\n\t * for the form as it was created.\n\t */\n\treadonly resource: URI;\n\n\t/**\n\t * Sets the preferred resource to use for this file input.\n\t */\n\tsetPreferredResource(preferredResource: URI): void;\n\n\t/**\n\t * Sets the preferred name to use for this file input.\n\t *\n\t * Note: for certain file schemes the input may decide to ignore this\n\t * name and use our standard naming. Specifically for schemes we own,\n\t * we do not let others override the name.\n\t */\n\tsetPreferredName(name: string): void;\n\n\t/**\n\t * Sets the preferred description to use for this file input.\n\t *\n\t * Note: for certain file schemes the input may decide to ignore this\n\t * description and use our standard naming. Specifically for schemes we own,\n\t * we do not let others override the description.\n\t */\n\tsetPreferredDescription(description: string): void;\n\n\t/**\n\t * Sets the preferred encoding to use for this file input.\n\t */\n\tsetPreferredEncoding(encoding: string): void;\n\n\t/**\n\t * Sets the preferred language mode to use for this file input.\n\t */\n\tsetPreferredMode(mode: string): void;\n\n\t/**\n\t * Forces this file input to open as binary instead of text.\n\t */\n\tsetForceOpenAsBinary(): void;\n\n\t/**\n\t * Figure out if the file input has been resolved or not.\n\t */\n\tisResolved(): boolean;\n}\n\n/**\n * Side by side editor inputs that have a primary and secondary side.\n */\nexport class SideBySideEditorInput extends EditorInput {\n\n\tstatic readonly ID: string = 'workbench.editorinputs.sidebysideEditorInput';\n\n\toverride get typeId(): string {\n\t\treturn SideBySideEditorInput.ID;\n\t}\n\n\tconstructor(\n\t\tprotected readonly name: string | undefined,\n\t\tprotected readonly description: string | undefined,\n\t\tprivate readonly _secondary: EditorInput,\n\t\tprivate readonly _primary: EditorInput\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// When the primary or secondary input gets disposed, dispose this diff editor input\n\t\tconst onceSecondaryDisposed = Event.once(this.secondary.onWillDispose);\n\t\tthis._register(onceSecondaryDisposed(() => {\n\t\t\tif (!this.isDisposed()) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\n\t\tconst oncePrimaryDisposed = Event.once(this.primary.onWillDispose);\n\t\tthis._register(oncePrimaryDisposed(() => {\n\t\t\tif (!this.isDisposed()) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\n\t\t// Reemit some events from the primary side to the outside\n\t\tthis._register(this.primary.onDidChangeDirty(() => this._onDidChangeDirty.fire()));\n\t\tthis._register(this.primary.onDidChangeLabel(() => this._onDidChangeLabel.fire()));\n\t}\n\n\t/**\n\t * Use `EditorResourceAccessor` utility method to access the resources\n\t * of both sides of the diff editor.\n\t */\n\tget resource(): URI | undefined {\n\t\treturn undefined;\n\t}\n\n\tget primary(): EditorInput {\n\t\treturn this._primary;\n\t}\n\n\tget secondary(): EditorInput {\n\t\treturn this._secondary;\n\t}\n\n\toverride getName(): string {\n\t\tif (!this.name) {\n\t\t\treturn localize('sideBySideLabels', \"{0} - {1}\", this._secondary.getName(), this._primary.getName());\n\t\t}\n\n\t\treturn this.name;\n\t}\n\n\toverride getDescription(): string | undefined {\n\t\treturn this.description;\n\t}\n\n\toverride isReadonly(): boolean {\n\t\treturn this.primary.isReadonly();\n\t}\n\n\toverride isUntitled(): boolean {\n\t\treturn this.primary.isUntitled();\n\t}\n\n\toverride isDirty(): boolean {\n\t\treturn this.primary.isDirty();\n\t}\n\n\toverride isSaving(): boolean {\n\t\treturn this.primary.isSaving();\n\t}\n\n\toverride save(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\treturn this.primary.save(group, options);\n\t}\n\n\toverride saveAs(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\treturn this.primary.saveAs(group, options);\n\t}\n\n\toverride revert(group: GroupIdentifier, options?: IRevertOptions): Promise<void> {\n\t\treturn this.primary.revert(group, options);\n\t}\n\n\toverride getTelemetryDescriptor(): { [key: string]: unknown } {\n\t\tconst descriptor = this.primary.getTelemetryDescriptor();\n\n\t\treturn Object.assign(descriptor, super.getTelemetryDescriptor());\n\t}\n\n\toverride matches(otherInput: unknown): boolean {\n\t\tif (otherInput === this) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (otherInput instanceof SideBySideEditorInput) {\n\t\t\treturn this.primary.matches(otherInput.primary) && this.secondary.matches(otherInput.secondary);\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n/**\n * The editor model is the heavyweight counterpart of editor input. Depending on the editor input, it\n * resolves from a file system retrieve content and may allow for saving it back or reverting it.\n * Editor models are typically cached for some while because they are expensive to construct.\n */\nexport class EditorModel extends Disposable implements IEditorModel {\n\n\tprivate readonly _onWillDispose = this._register(new Emitter<void>());\n\treadonly onWillDispose = this._onWillDispose.event;\n\n\tprivate disposed = false;\n\tprivate resolved = false;\n\n\t/**\n\t * Causes this model to resolve returning a promise when loading is completed.\n\t */\n\tasync resolve(): Promise<void> {\n\t\tthis.resolved = true;\n\t}\n\n\t/**\n\t * Returns whether this model was loaded or not.\n\t */\n\tisResolved(): boolean {\n\t\treturn this.resolved;\n\t}\n\n\t/**\n\t * Find out if this model has been disposed.\n\t */\n\tisDisposed(): boolean {\n\t\treturn this.disposed;\n\t}\n\n\t/**\n\t * Subclasses should implement to free resources that have been claimed through loading.\n\t */\n\toverride dispose(): void {\n\t\tthis.disposed = true;\n\t\tthis._onWillDispose.fire();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface IEditorInputWithOptions {\n\teditor: IEditorInput;\n\toptions?: IEditorOptions | ITextEditorOptions;\n}\n\nexport interface IEditorInputWithOptionsAndGroup extends IEditorInputWithOptions {\n\tgroup?: IEditorGroup;\n}\n\nexport function isEditorInputWithOptions(obj: unknown): obj is IEditorInputWithOptions {\n\tconst editorInputWithOptions = obj as IEditorInputWithOptions;\n\n\treturn !!editorInputWithOptions && !!editorInputWithOptions.editor;\n}\n\n/**\n * The editor options is the base class of options that can be passed in when opening an editor.\n */\nexport class EditorOptions implements IEditorOptions {\n\n\t/**\n\t * Helper to create EditorOptions inline.\n\t */\n\tstatic create(settings: IEditorOptions): EditorOptions {\n\t\tconst options = new EditorOptions();\n\t\toptions.overwrite(settings);\n\n\t\treturn options;\n\t}\n\n\t/**\n\t * Tells the editor to not receive keyboard focus when the editor is being opened.\n\t *\n\t * Will also not activate the group the editor opens in unless the group is already\n\t * the active one. This behaviour can be overridden via the `activation` option.\n\t */\n\tpreserveFocus: boolean | undefined;\n\n\t/**\n\t * This option is only relevant if an editor is opened into a group that is not active\n\t * already and allows to control if the inactive group should become active, restored\n\t * or preserved.\n\t *\n\t * By default, the editor group will become active unless `preserveFocus` or `inactive`\n\t * is specified.\n\t */\n\tactivation: EditorActivation | undefined;\n\n\t/**\n\t * Tells the editor to reload the editor input in the editor even if it is identical to the one\n\t * already showing. By default, the editor will not reload the input if it is identical to the\n\t * one showing.\n\t */\n\tforceReload: boolean | undefined;\n\n\t/**\n\t * Will reveal the editor if it is already opened and visible in any of the opened editor groups.\n\t */\n\trevealIfVisible: boolean | undefined;\n\n\t/**\n\t * Will reveal the editor if it is already opened (even when not visible) in any of the opened editor groups.\n\t */\n\trevealIfOpened: boolean | undefined;\n\n\t/**\n\t * An editor that is pinned remains in the editor stack even when another editor is being opened.\n\t * An editor that is not pinned will always get replaced by another editor that is not pinned.\n\t */\n\tpinned: boolean | undefined;\n\n\t/**\n\t * An editor that is sticky moves to the beginning of the editors list within the group and will remain\n\t * there unless explicitly closed. Operations such as \"Close All\" will not close sticky editors.\n\t */\n\tsticky: boolean | undefined;\n\n\t/**\n\t * The index in the document stack where to insert the editor into when opening.\n\t */\n\tindex: number | undefined;\n\n\t/**\n\t * An active editor that is opened will show its contents directly. Set to true to open an editor\n\t * in the background without loading its contents.\n\t *\n\t * Will also not activate the group the editor opens in unless the group is already\n\t * the active one. This behaviour can be overridden via the `activation` option.\n\t */\n\tinactive: boolean | undefined;\n\n\t/**\n\t * Will not show an error in case opening the editor fails and thus allows to show a custom error\n\t * message as needed. By default, an error will be presented as notification if opening was not possible.\n\t */\n\tignoreError: boolean | undefined;\n\n\t/**\n\t * Allows to override the editor that should be used to display the input:\n\t * - `undefined`: let the editor decide for itself\n\t * - `string`: specific override by id\n\t * - `EditorOverride`: specific override handling\n\t */\n\toverride: string | EditorOverride | undefined;\n\n\t/**\n\t * A optional hint to signal in which context the editor opens.\n\t *\n\t * If configured to be `EditorOpenContext.USER`, this hint can be\n\t * used in various places to control the experience. For example,\n\t * if the editor to open fails with an error, a notification could\n\t * inform about this in a modal dialog. If the editor opened through\n\t * some background task, the notification would show in the background,\n\t * not as a modal dialog.\n\t */\n\tcontext: EditorOpenContext | undefined;\n\n\t/**\n\t * Overwrites option values from the provided bag.\n\t */\n\toverwrite(options: IEditorOptions): EditorOptions {\n\t\tif (typeof options.forceReload === 'boolean') {\n\t\t\tthis.forceReload = options.forceReload;\n\t\t}\n\n\t\tif (typeof options.revealIfVisible === 'boolean') {\n\t\t\tthis.revealIfVisible = options.revealIfVisible;\n\t\t}\n\n\t\tif (typeof options.revealIfOpened === 'boolean') {\n\t\t\tthis.revealIfOpened = options.revealIfOpened;\n\t\t}\n\n\t\tif (typeof options.preserveFocus === 'boolean') {\n\t\t\tthis.preserveFocus = options.preserveFocus;\n\t\t}\n\n\t\tif (typeof options.activation === 'number') {\n\t\t\tthis.activation = options.activation;\n\t\t}\n\n\t\tif (typeof options.pinned === 'boolean') {\n\t\t\tthis.pinned = options.pinned;\n\t\t}\n\n\t\tif (typeof options.sticky === 'boolean') {\n\t\t\tthis.sticky = options.sticky;\n\t\t}\n\n\t\tif (typeof options.inactive === 'boolean') {\n\t\t\tthis.inactive = options.inactive;\n\t\t}\n\n\t\tif (typeof options.ignoreError === 'boolean') {\n\t\t\tthis.ignoreError = options.ignoreError;\n\t\t}\n\n\t\tif (typeof options.index === 'number') {\n\t\t\tthis.index = options.index;\n\t\t}\n\n\t\tif (options.override !== undefined) {\n\t\t\tthis.override = options.override;\n\t\t}\n\n\t\tif (typeof options.context === 'number') {\n\t\t\tthis.context = options.context;\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n/**\n * Base Text Editor Options.\n */\nexport class TextEditorOptions extends EditorOptions implements ITextEditorOptions {\n\n\t/**\n\t * Text editor selection.\n\t */\n\tselection: ITextEditorSelection | undefined;\n\n\t/**\n\t * Text editor view state.\n\t */\n\teditorViewState: IEditorViewState | undefined;\n\n\t/**\n\t * Option to control the text editor selection reveal type.\n\t */\n\tselectionRevealType: TextEditorSelectionRevealType | undefined;\n\n\tstatic from(input?: IBaseResourceEditorInput): TextEditorOptions | undefined {\n\t\tif (!input?.options) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn TextEditorOptions.create(input.options);\n\t}\n\n\t/**\n\t * Helper to convert options bag to real class\n\t */\n\tstatic override create(options: ITextEditorOptions = Object.create(null)): TextEditorOptions {\n\t\tconst textEditorOptions = new TextEditorOptions();\n\t\ttextEditorOptions.overwrite(options);\n\n\t\treturn textEditorOptions;\n\t}\n\n\t/**\n\t * Overwrites option values from the provided bag.\n\t */\n\toverride overwrite(options: ITextEditorOptions): TextEditorOptions {\n\t\tsuper.overwrite(options);\n\n\t\tif (options.selection) {\n\t\t\tthis.selection = {\n\t\t\t\tstartLineNumber: options.selection.startLineNumber,\n\t\t\t\tstartColumn: options.selection.startColumn,\n\t\t\t\tendLineNumber: options.selection.endLineNumber ?? options.selection.startLineNumber,\n\t\t\t\tendColumn: options.selection.endColumn ?? options.selection.startColumn\n\t\t\t};\n\t\t}\n\n\t\tif (options.viewState) {\n\t\t\tthis.editorViewState = options.viewState as IEditorViewState;\n\t\t}\n\n\t\tif (typeof options.selectionRevealType !== 'undefined') {\n\t\t\tthis.selectionRevealType = options.selectionRevealType;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns if this options object has objects defined for the editor.\n\t */\n\thasOptionsDefined(): boolean {\n\t\treturn !!this.editorViewState || !!this.selectionRevealType || !!this.selection;\n\t}\n\n\t/**\n\t * Create a TextEditorOptions inline to be used when the editor is opening.\n\t */\n\tstatic fromEditor(editor: IEditor, settings?: IEditorOptions): TextEditorOptions {\n\t\tconst options = TextEditorOptions.create(settings);\n\n\t\t// View state\n\t\toptions.editorViewState = withNullAsUndefined(editor.saveViewState());\n\n\t\treturn options;\n\t}\n\n\t/**\n\t * Apply the view state or selection to the given editor.\n\t *\n\t * @return if something was applied\n\t */\n\tapply(editor: IEditor, scrollType: ScrollType): boolean {\n\t\tlet gotApplied = false;\n\n\t\t// First try viewstate\n\t\tif (this.editorViewState) {\n\t\t\teditor.restoreViewState(this.editorViewState);\n\t\t\tgotApplied = true;\n\t\t}\n\n\t\t// Otherwise check for selection\n\t\telse if (this.selection) {\n\t\t\tconst range: IRange = {\n\t\t\t\tstartLineNumber: this.selection.startLineNumber,\n\t\t\t\tstartColumn: this.selection.startColumn,\n\t\t\t\tendLineNumber: this.selection.endLineNumber ?? this.selection.startLineNumber,\n\t\t\t\tendColumn: this.selection.endColumn ?? this.selection.startColumn\n\t\t\t};\n\n\t\t\teditor.setSelection(range);\n\n\t\t\tif (this.selectionRevealType === TextEditorSelectionRevealType.NearTop) {\n\t\t\t\teditor.revealRangeNearTop(range, scrollType);\n\t\t\t} else if (this.selectionRevealType === TextEditorSelectionRevealType.NearTopIfOutsideViewport) {\n\t\t\t\teditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n\t\t\t} else if (this.selectionRevealType === TextEditorSelectionRevealType.CenterIfOutsideViewport) {\n\t\t\t\teditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n\t\t\t} else {\n\t\t\t\teditor.revealRangeInCenter(range, scrollType);\n\t\t\t}\n\n\t\t\tgotApplied = true;\n\t\t}\n\n\t\treturn gotApplied;\n\t}\n}\n\n/**\n * Context passed into `EditorPane#setInput` to give additional\n * context information around why the editor was opened.\n */\nexport interface IEditorOpenContext {\n\n\t/**\n\t * An indicator if the editor input is new for the group the editor is in.\n\t * An editor is new for a group if it was not part of the group before and\n\t * otherwise was already opened in the group and just became the active editor.\n\t *\n\t * This hint can e.g. be used to decide whether to restore view state or not.\n\t */\n\tnewInGroup?: boolean;\n}\n\nexport interface IEditorIdentifier {\n\tgroupId: GroupIdentifier;\n\teditor: IEditorInput;\n}\n\n/**\n * The editor commands context is used for editor commands (e.g. in the editor title)\n * and we must ensure that the context is serializable because it potentially travels\n * to the extension host!\n */\nexport interface IEditorCommandsContext {\n\tgroupId: GroupIdentifier;\n\teditorIndex?: number;\n}\n\nexport class EditorCommandsContextActionRunner extends ActionRunner {\n\n\tconstructor(\n\t\tprivate context: IEditorCommandsContext\n\t) {\n\t\tsuper();\n\t}\n\n\toverride run(action: IAction): Promise<void> {\n\t\treturn super.run(action, this.context);\n\t}\n}\n\nexport interface IEditorCloseEvent extends IEditorIdentifier {\n\treplaced: boolean;\n\tindex: number;\n\tsticky: boolean;\n}\n\nexport interface IEditorMoveEvent extends IEditorIdentifier {\n\ttarget: GroupIdentifier;\n}\n\nexport type GroupIdentifier = number;\n\nexport interface IWorkbenchEditorConfiguration {\n\tworkbench?: {\n\t\teditor?: IEditorPartConfiguration,\n\t\ticonTheme?: string;\n\t};\n}\n\ninterface IEditorPartConfiguration {\n\tshowTabs?: boolean;\n\twrapTabs?: boolean;\n\tscrollToSwitchTabs?: boolean;\n\thighlightModifiedTabs?: boolean;\n\ttabCloseButton?: 'left' | 'right' | 'off';\n\ttabSizing?: 'fit' | 'shrink';\n\tpinnedTabSizing?: 'normal' | 'compact' | 'shrink';\n\ttitleScrollbarSizing?: 'default' | 'large';\n\tfocusRecentEditorAfterClose?: boolean;\n\tshowIcons?: boolean;\n\tenablePreview?: boolean;\n\tenablePreviewFromQuickOpen?: boolean;\n\tenablePreviewFromCodeNavigation?: boolean;\n\tcloseOnFileDelete?: boolean;\n\topenPositioning?: 'left' | 'right' | 'first' | 'last';\n\topenSideBySideDirection?: 'right' | 'down';\n\tcloseEmptyGroups?: boolean;\n\trevealIfOpen?: boolean;\n\tmouseBackForwardToNavigate?: boolean;\n\tlabelFormat?: 'default' | 'short' | 'medium' | 'long';\n\trestoreViewState?: boolean;\n\tsplitSizing?: 'split' | 'distribute';\n\tsplitOnDragAndDrop?: boolean;\n\tlimit?: {\n\t\tenabled?: boolean;\n\t\tvalue?: number;\n\t\tperEditorGroup?: boolean;\n\t};\n\tdecorations?: {\n\t\tbadges?: boolean;\n\t\tcolors?: boolean;\n\t}\n}\n\nexport interface IEditorPartOptions extends IEditorPartConfiguration {\n\thasIcons?: boolean;\n}\n\nexport interface IEditorPartOptionsChangeEvent {\n\toldPartOptions: IEditorPartOptions;\n\tnewPartOptions: IEditorPartOptions;\n}\n\nexport enum SideBySideEditor {\n\tPRIMARY = 1,\n\tSECONDARY = 2,\n\tBOTH = 3\n}\n\nexport interface IEditorResourceAccessorOptions {\n\n\t/**\n\t * Allows to access the `resource(s)` of side by side editors. If not\n\t * specified, a `resource` for a side by side editor will always be\n\t * `undefined`.\n\t */\n\tsupportSideBySide?: SideBySideEditor;\n\n\t/**\n\t * Allows to filter the scheme to consider. A resource scheme that does\n\t * not match a filter will not be considered.\n\t */\n\tfilterByScheme?: string | string[];\n}\n\nclass EditorResourceAccessorImpl {\n\n\t/**\n\t * The original URI of an editor is the URI that was used originally to open\n\t * the editor and should be used whenever the URI is presented to the user,\n\t * e.g. as a label together with utility methods such as `ResourceLabel` or\n\t * `ILabelService` that can turn this original URI into the best form for\n\t * presenting.\n\t *\n\t * In contrast, the canonical URI (#getCanonicalUri) may be different and should\n\t * be used whenever the URI is used to e.g. compare with other editors or when\n\t * caching certain data based on the URI.\n\t *\n\t * For example: on Windows and macOS, the same file URI with different casing may\n\t * point to the same file. The editor may chose to \"normalize\" the URI into a canonical\n\t * form so that only one editor opens for same file URIs with different casing. As\n\t * such, the original URI and the canonical URI can be different.\n\t */\n\tgetOriginalUri(editor: IEditorInput | undefined | null): URI | undefined;\n\tgetOriginalUri(editor: IEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide?: SideBySideEditor.PRIMARY | SideBySideEditor.SECONDARY }): URI | undefined;\n\tgetOriginalUri(editor: IEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide: SideBySideEditor.BOTH }): URI | { primary?: URI, secondary?: URI } | undefined;\n\tgetOriginalUri(editor: IEditorInput | undefined | null, options?: IEditorResourceAccessorOptions): URI | { primary?: URI, secondary?: URI } | undefined {\n\t\tif (!editor) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Optionally support side-by-side editors\n\t\tif (options?.supportSideBySide && editor instanceof SideBySideEditorInput) {\n\t\t\tif (options?.supportSideBySide === SideBySideEditor.BOTH) {\n\t\t\t\treturn {\n\t\t\t\t\tprimary: this.getOriginalUri(editor.primary, { filterByScheme: options.filterByScheme }),\n\t\t\t\t\tsecondary: this.getOriginalUri(editor.secondary, { filterByScheme: options.filterByScheme })\n\t\t\t\t};\n\t\t\t}\n\n\t\t\teditor = options.supportSideBySide === SideBySideEditor.PRIMARY ? editor.primary : editor.secondary;\n\t\t}\n\n\t\t// Original URI is the `preferredResource` of an editor if any\n\t\tconst originalResource = isEditorInputWithPreferredResource(editor) ? editor.preferredResource : editor.resource;\n\t\tif (!originalResource || !options || !options.filterByScheme) {\n\t\t\treturn originalResource;\n\t\t}\n\n\t\treturn this.filterUri(originalResource, options.filterByScheme);\n\t}\n\n\t/**\n\t * The canonical URI of an editor is the true unique identifier of the editor\n\t * and should be used whenever the URI is used e.g. to compare with other\n\t * editors or when caching certain data based on the URI.\n\t *\n\t * In contrast, the original URI (#getOriginalUri) may be different and should\n\t * be used whenever the URI is presented to the user, e.g. as a label.\n\t *\n\t * For example: on Windows and macOS, the same file URI with different casing may\n\t * point to the same file. The editor may chose to \"normalize\" the URI into a canonical\n\t * form so that only one editor opens for same file URIs with different casing. As\n\t * such, the original URI and the canonical URI can be different.\n\t */\n\tgetCanonicalUri(editor: IEditorInput | undefined | null): URI | undefined;\n\tgetCanonicalUri(editor: IEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide?: SideBySideEditor.PRIMARY | SideBySideEditor.SECONDARY }): URI | undefined;\n\tgetCanonicalUri(editor: IEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide: SideBySideEditor.BOTH }): URI | { primary?: URI, secondary?: URI } | undefined;\n\tgetCanonicalUri(editor: IEditorInput | undefined | null, options?: IEditorResourceAccessorOptions): URI | { primary?: URI, secondary?: URI } | undefined {\n\t\tif (!editor) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Optionally support side-by-side editors\n\t\tif (options?.supportSideBySide && editor instanceof SideBySideEditorInput) {\n\t\t\tif (options?.supportSideBySide === SideBySideEditor.BOTH) {\n\t\t\t\treturn {\n\t\t\t\t\tprimary: this.getCanonicalUri(editor.primary, { filterByScheme: options.filterByScheme }),\n\t\t\t\t\tsecondary: this.getCanonicalUri(editor.secondary, { filterByScheme: options.filterByScheme })\n\t\t\t\t};\n\t\t\t}\n\n\t\t\teditor = options.supportSideBySide === SideBySideEditor.PRIMARY ? editor.primary : editor.secondary;\n\t\t}\n\n\t\t// Canonical URI is the `resource` of an editor\n\t\tconst canonicalResource = editor.resource;\n\t\tif (!canonicalResource || !options || !options.filterByScheme) {\n\t\t\treturn canonicalResource;\n\t\t}\n\n\t\treturn this.filterUri(canonicalResource, options.filterByScheme);\n\t}\n\n\tprivate filterUri(resource: URI, filter: string | string[]): URI | undefined {\n\n\t\t// Multiple scheme filter\n\t\tif (Array.isArray(filter)) {\n\t\t\tif (filter.some(scheme => resource.scheme === scheme)) {\n\t\t\t\treturn resource;\n\t\t\t}\n\t\t}\n\n\t\t// Single scheme filter\n\t\telse {\n\t\t\tif (filter === resource.scheme) {\n\t\t\t\treturn resource;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport const EditorResourceAccessor = new EditorResourceAccessorImpl();\n\nexport const enum CloseDirection {\n\tLEFT,\n\tRIGHT\n}\n\nexport interface IEditorMemento<T> {\n\n\tsaveEditorState(group: IEditorGroup, resource: URI, state: T): void;\n\tsaveEditorState(group: IEditorGroup, editor: IEditorInput, state: T): void;\n\n\tloadEditorState(group: IEditorGroup, resource: URI): T | undefined;\n\tloadEditorState(group: IEditorGroup, editor: IEditorInput): T | undefined;\n\n\tclearEditorState(resource: URI, group?: IEditorGroup): void;\n\tclearEditorState(editor: IEditorInput, group?: IEditorGroup): void;\n\n\tclearEditorStateOnDispose(resource: URI, editor: IEditorInput): void;\n\n\tmoveEditorState(source: URI, target: URI, comparer: IExtUri): void;\n}\n\nclass EditorInputFactoryRegistry implements IEditorInputFactoryRegistry {\n\tprivate instantiationService: IInstantiationService | undefined;\n\n\tprivate fileEditorInputFactory: IFileEditorInputFactory | undefined;\n\tprivate readonly customEditorInputFactoryInstances: Map<string, ICustomEditorInputFactory> = new Map();\n\n\tprivate readonly editorInputSerializerConstructors: Map<string /* Type ID */, IConstructorSignature0<IEditorInputSerializer>> = new Map();\n\tprivate readonly editorInputSerializerInstances: Map<string /* Type ID */, IEditorInputSerializer> = new Map();\n\n\tstart(accessor: ServicesAccessor): void {\n\t\tconst instantiationService = this.instantiationService = accessor.get(IInstantiationService);\n\n\t\tfor (const [key, ctor] of this.editorInputSerializerConstructors) {\n\t\t\tthis.createEditorInputSerializer(key, ctor, instantiationService);\n\t\t}\n\n\t\tthis.editorInputSerializerConstructors.clear();\n\t}\n\n\tprivate createEditorInputSerializer(editorInputTypeId: string, ctor: IConstructorSignature0<IEditorInputSerializer>, instantiationService: IInstantiationService): void {\n\t\tconst instance = instantiationService.createInstance(ctor);\n\t\tthis.editorInputSerializerInstances.set(editorInputTypeId, instance);\n\t}\n\n\tregisterFileEditorInputFactory(factory: IFileEditorInputFactory): void {\n\t\tif (this.fileEditorInputFactory) {\n\t\t\tthrow new Error('Can only register one file editor input factory.');\n\t\t}\n\n\t\tthis.fileEditorInputFactory = factory;\n\t}\n\n\tgetFileEditorInputFactory(): IFileEditorInputFactory {\n\t\treturn assertIsDefined(this.fileEditorInputFactory);\n\t}\n\n\tregisterEditorInputSerializer(editorInputTypeId: string, ctor: IConstructorSignature0<IEditorInputSerializer>): IDisposable {\n\t\tif (this.editorInputSerializerConstructors.has(editorInputTypeId) || this.editorInputSerializerInstances.has(editorInputTypeId)) {\n\t\t\tthrow new Error(`A editor input serializer with type ID '${editorInputTypeId}' was already registered.`);\n\t\t}\n\n\t\tif (!this.instantiationService) {\n\t\t\tthis.editorInputSerializerConstructors.set(editorInputTypeId, ctor);\n\t\t} else {\n\t\t\tthis.createEditorInputSerializer(editorInputTypeId, ctor, this.instantiationService);\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis.editorInputSerializerConstructors.delete(editorInputTypeId);\n\t\t\tthis.editorInputSerializerInstances.delete(editorInputTypeId);\n\t\t});\n\t}\n\n\tgetEditorInputSerializer(editorInput: IEditorInput): IEditorInputSerializer | undefined;\n\tgetEditorInputSerializer(editorInputTypeId: string): IEditorInputSerializer | undefined;\n\tgetEditorInputSerializer(arg1: string | IEditorInput): IEditorInputSerializer | undefined {\n\t\treturn this.editorInputSerializerInstances.get(typeof arg1 === 'string' ? arg1 : arg1.typeId);\n\t}\n\n\tregisterCustomEditorInputFactory(scheme: string, factory: ICustomEditorInputFactory): void {\n\t\tthis.customEditorInputFactoryInstances.set(scheme, factory);\n\t}\n\n\tgetCustomEditorInputFactory(scheme: string): ICustomEditorInputFactory | undefined {\n\t\treturn this.customEditorInputFactoryInstances.get(scheme);\n\t}\n}\n\nRegistry.add(EditorExtensions.EditorInputFactories, new EditorInputFactoryRegistry());\n\nexport async function pathsToEditors(paths: IPathData[] | undefined, fileService: IFileService): Promise<(IResourceEditorInput | IUntitledTextResourceEditorInput)[]> {\n\tif (!paths || !paths.length) {\n\t\treturn [];\n\t}\n\n\tconst editors = await Promise.all(paths.map(async path => {\n\t\tconst resource = URI.revive(path.fileUri);\n\t\tif (!resource || !fileService.canHandleResource(resource)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst exists = (typeof path.exists === 'boolean') ? path.exists : await fileService.exists(resource);\n\t\tif (!exists && path.openOnlyIfExists) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst options: ITextEditorOptions = (exists && typeof path.lineNumber === 'number') ? {\n\t\t\tselection: {\n\t\t\t\tstartLineNumber: path.lineNumber,\n\t\t\t\tstartColumn: path.columnNumber || 1\n\t\t\t},\n\t\t\tpinned: true,\n\t\t\toverride: path.editorOverrideId\n\t\t} : {\n\t\t\tpinned: true,\n\t\t\toverride: path.editorOverrideId\n\t\t};\n\n\t\tlet input: IResourceEditorInput | IUntitledTextResourceEditorInput;\n\t\tif (!exists) {\n\t\t\tinput = { resource, options, forceUntitled: true };\n\t\t} else {\n\t\t\tinput = { resource, options, forceFile: true };\n\t\t}\n\n\t\treturn input;\n\t}));\n\n\treturn coalesce(editors);\n}\n\nexport const enum EditorsOrder {\n\n\t/**\n\t * Editors sorted by most recent activity (most recent active first)\n\t */\n\tMOST_RECENTLY_ACTIVE,\n\n\t/**\n\t * Editors sorted by sequential order\n\t */\n\tSEQUENTIAL\n}\n\n/**\n * A way to address editor groups through a column based system\n * where `0` is the first column. Will fallback to `SIDE_GROUP`\n * in case the column does not exist yet.\n */\nexport type EditorGroupColumn = number;\n\nexport function viewColumnToEditorGroup(editorGroupService: IEditorGroupsService, viewColumn?: EditorGroupColumn): GroupIdentifier {\n\tif (typeof viewColumn !== 'number' || viewColumn === ACTIVE_GROUP) {\n\t\treturn ACTIVE_GROUP; // prefer active group when position is undefined or passed in as such\n\t}\n\n\tconst groups = editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE);\n\n\tlet candidateGroup = groups[viewColumn];\n\tif (candidateGroup) {\n\t\treturn candidateGroup.id; // found direct match\n\t}\n\n\tlet firstGroup = groups[0];\n\tif (groups.length === 1 && firstGroup.count === 0) {\n\t\treturn firstGroup.id; // first editor should always open in first group independent from position provided\n\t}\n\n\treturn SIDE_GROUP; // open to the side if group not found or we are instructed to\n}\n\nexport function editorGroupToViewColumn(editorGroupService: IEditorGroupsService, editorGroup: IEditorGroup | GroupIdentifier): EditorGroupColumn {\n\tlet group = (typeof editorGroup === 'number') ? editorGroupService.getGroup(editorGroup) : editorGroup;\n\tgroup = group ?? editorGroupService.activeGroup;\n\n\treturn editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE).indexOf(group);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWorkbenchConfigurationService } from 'vs/workbench/services/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { serializeEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableShared';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { SideBySideEditor, EditorResourceAccessor } from 'vs/workbench/common/editor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { Schemas } from 'vs/base/common/network';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IEnvironmentVariableService, ISerializableEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { IProcessDataEvent, IShellLaunchConfig, IShellLaunchConfigDto, ITerminalDimensionsOverride, ITerminalEnvironment, ITerminalLaunchError, ITerminalsLayoutInfo, ITerminalsLayoutInfoById, TerminalShellType } from 'vs/platform/terminal/common/terminal';\nimport { IGetTerminalLayoutInfoArgs, IProcessDetails, IPtyHostProcessReplayEvent, ISetTerminalLayoutInfoArgs } from 'vs/platform/terminal/common/terminalProcess';\nimport { IProcessEnvironment, OperatingSystem } from 'vs/base/common/platform';\n\nexport const REMOTE_TERMINAL_CHANNEL_NAME = 'remoteterminal';\n\nexport interface ICompleteTerminalConfiguration {\n\t'terminal.integrated.automationShell.windows': string;\n\t'terminal.integrated.automationShell.osx': string;\n\t'terminal.integrated.automationShell.linux': string;\n\t'terminal.integrated.shell.windows': string;\n\t'terminal.integrated.shell.osx': string;\n\t'terminal.integrated.shell.linux': string;\n\t'terminal.integrated.shellArgs.windows': string | string[];\n\t'terminal.integrated.shellArgs.osx': string | string[];\n\t'terminal.integrated.shellArgs.linux': string | string[];\n\t'terminal.integrated.env.windows': ITerminalEnvironment;\n\t'terminal.integrated.env.osx': ITerminalEnvironment;\n\t'terminal.integrated.env.linux': ITerminalEnvironment;\n\t'terminal.integrated.inheritEnv': boolean;\n\t'terminal.integrated.cwd': string;\n\t'terminal.integrated.detectLocale': 'auto' | 'off' | 'on';\n}\n\nexport type ITerminalEnvironmentVariableCollections = [string, ISerializableEnvironmentVariableCollection][];\n\nexport interface IWorkspaceFolderData {\n\turi: UriComponents;\n\tname: string;\n\tindex: number;\n}\n\nexport interface ICreateTerminalProcessArguments {\n\tconfiguration: ICompleteTerminalConfiguration;\n\tresolvedVariables: { [name: string]: string; };\n\tenvVariableCollections: ITerminalEnvironmentVariableCollections;\n\tshellLaunchConfig: IShellLaunchConfigDto;\n\tworkspaceId: string;\n\tworkspaceName: string;\n\tworkspaceFolders: IWorkspaceFolderData[];\n\tactiveWorkspaceFolder: IWorkspaceFolderData | null;\n\tactiveFileResource: UriComponents | undefined;\n\tshouldPersistTerminal: boolean;\n\tcols: number;\n\trows: number;\n\tresolverEnv: { [key: string]: string | null; } | undefined\n}\n\nexport interface ICreateTerminalProcessResult {\n\tpersistentTerminalId: number;\n\tresolvedShellLaunchConfig: IShellLaunchConfigDto;\n}\n\nexport class RemoteTerminalChannelClient {\n\n\tpublic get onPtyHostExit(): Event<void> {\n\t\treturn this._channel.listen<void>('$onPtyHostExitEvent');\n\t}\n\tpublic get onPtyHostStart(): Event<void> {\n\t\treturn this._channel.listen<void>('$onPtyHostStartEvent');\n\t}\n\tpublic get onPtyHostUnresponsive(): Event<void> {\n\t\treturn this._channel.listen<void>('$onPtyHostUnresponsiveEvent');\n\t}\n\tpublic get onPtyHostResponsive(): Event<void> {\n\t\treturn this._channel.listen<void>('$onPtyHostResponsiveEvent');\n\t}\n\tpublic get onProcessData(): Event<{ id: number, event: IProcessDataEvent | string }> {\n\t\treturn this._channel.listen<{ id: number, event: IProcessDataEvent | string }>('$onProcessDataEvent');\n\t}\n\tpublic get onProcessExit(): Event<{ id: number, event: number | undefined }> {\n\t\treturn this._channel.listen<{ id: number, event: number | undefined }>('$onProcessExitEvent');\n\t}\n\tpublic get onProcessReady(): Event<{ id: number, event: { pid: number, cwd: string } }> {\n\t\treturn this._channel.listen<{ id: number, event: { pid: number, cwd: string } }>('$onProcessReadyEvent');\n\t}\n\tpublic get onProcessReplay(): Event<{ id: number, event: IPtyHostProcessReplayEvent }> {\n\t\treturn this._channel.listen<{ id: number, event: IPtyHostProcessReplayEvent }>('$onProcessReplayEvent');\n\t}\n\tpublic get onProcessTitleChanged(): Event<{ id: number, event: string }> {\n\t\treturn this._channel.listen<{ id: number, event: string }>('$onProcessTitleChangedEvent');\n\t}\n\tpublic get onProcessShellTypeChanged(): Event<{ id: number, event: TerminalShellType | undefined }> {\n\t\treturn this._channel.listen<{ id: number, event: TerminalShellType | undefined }>('$onProcessShellTypeChangedEvent');\n\t}\n\tpublic get onProcessOverrideDimensions(): Event<{ id: number, event: ITerminalDimensionsOverride | undefined }> {\n\t\treturn this._channel.listen<{ id: number, event: ITerminalDimensionsOverride | undefined }>('$onProcessOverrideDimensionsEvent');\n\t}\n\tpublic get onProcessResolvedShellLaunchConfig(): Event<{ id: number, event: IShellLaunchConfig }> {\n\t\treturn this._channel.listen<{ id: number, event: IShellLaunchConfig }>('$onProcessResolvedShellLaunchConfigEvent');\n\t}\n\tpublic get onProcessOrphanQuestion(): Event<{ id: number }> {\n\t\treturn this._channel.listen<{ id: number }>('$onProcessOrphanQuestion');\n\t}\n\tpublic get onExecuteCommand(): Event<{ reqId: number, commandId: string, commandArgs: any[] }> {\n\t\treturn this._channel.listen<{ reqId: number, commandId: string, commandArgs: any[] }>('$onExecuteCommand');\n\t}\n\n\tconstructor(\n\t\tprivate readonly _remoteAuthority: string,\n\t\tprivate readonly _channel: IChannel,\n\t\t@IWorkbenchConfigurationService private readonly _configurationService: IWorkbenchConfigurationService,\n\t\t@IWorkspaceContextService private readonly _workspaceContextService: IWorkspaceContextService,\n\t\t@IConfigurationResolverService private readonly _resolverService: IConfigurationResolverService,\n\t\t@IEnvironmentVariableService private readonly _environmentVariableService: IEnvironmentVariableService,\n\t\t@IRemoteAuthorityResolverService private readonly _remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t) { }\n\n\trestartPtyHost(): Promise<void> {\n\t\treturn this._channel.call('$restartPtyHost', []);\n\t}\n\n\tpublic async createProcess(shellLaunchConfig: IShellLaunchConfigDto, configuration: ICompleteTerminalConfiguration, activeWorkspaceRootUri: URI | undefined, shouldPersistTerminal: boolean, cols: number, rows: number): Promise<ICreateTerminalProcessResult> {\n\t\t// Be sure to first wait for the remote configuration\n\t\tawait this._configurationService.whenRemoteConfigurationLoaded();\n\n\t\t// We will use the resolver service to resolve all the variables in the config / launch config\n\t\t// But then we will keep only some variables, since the rest need to be resolved on the remote side\n\t\tconst resolvedVariables = Object.create(null);\n\t\tconst lastActiveWorkspace = activeWorkspaceRootUri ? withNullAsUndefined(this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri)) : undefined;\n\t\tlet allResolvedVariables: Map<string, string> | undefined = undefined;\n\t\ttry {\n\t\t\tallResolvedVariables = await this._resolverService.resolveWithInteraction(lastActiveWorkspace, {\n\t\t\t\tshellLaunchConfig,\n\t\t\t\tconfiguration\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tthis._logService.error(err);\n\t\t}\n\t\tif (allResolvedVariables) {\n\t\t\tfor (const [name, value] of allResolvedVariables.entries()) {\n\t\t\t\tif (/^config:/.test(name) || name === 'selectedText' || name === 'lineNumber') {\n\t\t\t\t\tresolvedVariables[name] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst envVariableCollections: ITerminalEnvironmentVariableCollections = [];\n\t\tfor (const [k, v] of this._environmentVariableService.collections.entries()) {\n\t\t\tenvVariableCollections.push([k, serializeEnvironmentVariableCollection(v.map)]);\n\t\t}\n\n\t\tconst resolverResult = await this._remoteAuthorityResolverService.resolveAuthority(this._remoteAuthority);\n\t\tconst resolverEnv = resolverResult.options && resolverResult.options.extensionHostEnv;\n\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst workspaceFolders = workspace.folders;\n\t\tconst activeWorkspaceFolder = activeWorkspaceRootUri ? this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri) : null;\n\n\t\tconst activeFileResource = EditorResourceAccessor.getOriginalUri(this._editorService.activeEditor, {\n\t\t\tsupportSideBySide: SideBySideEditor.PRIMARY,\n\t\t\tfilterByScheme: [Schemas.file, Schemas.userData, Schemas.vscodeRemote]\n\t\t});\n\n\t\tconst args: ICreateTerminalProcessArguments = {\n\t\t\tconfiguration,\n\t\t\tresolvedVariables,\n\t\t\tenvVariableCollections,\n\t\t\tshellLaunchConfig,\n\t\t\tworkspaceId: workspace.id,\n\t\t\tworkspaceName: this._labelService.getWorkspaceLabel(workspace),\n\t\t\tworkspaceFolders,\n\t\t\tactiveWorkspaceFolder,\n\t\t\tactiveFileResource,\n\t\t\tshouldPersistTerminal,\n\t\t\tcols,\n\t\t\trows,\n\t\t\tresolverEnv\n\t\t};\n\t\treturn await this._channel.call<ICreateTerminalProcessResult>('$createProcess', args);\n\t}\n\n\tpublic attachToProcess(id: number): Promise<void> {\n\t\treturn this._channel.call('$attachToProcess', [id]);\n\t}\n\tpublic listProcesses(): Promise<IProcessDetails[]> {\n\t\treturn this._channel.call('$listProcesses');\n\t}\n\tpublic reduceConnectionGraceTime(): Promise<void> {\n\t\treturn this._channel.call('$reduceConnectionGraceTime');\n\t}\n\tpublic processBinary(id: number, data: string): Promise<void> {\n\t\treturn this._channel.call('$processBinary', [id, data]);\n\t}\n\tpublic start(id: number): Promise<ITerminalLaunchError | void> {\n\t\treturn this._channel.call('$start', [id]);\n\t}\n\tpublic input(id: number, data: string): Promise<void> {\n\t\treturn this._channel.call('$input', [id, data]);\n\t}\n\tpublic acknowledgeDataEvent(id: number, charCount: number): Promise<void> {\n\t\treturn this._channel.call('$acknowledgeDataEvent', [id, charCount]);\n\t}\n\tpublic shutdown(id: number, immediate: boolean): Promise<void> {\n\t\treturn this._channel.call('$shutdown', [id, immediate]);\n\t}\n\tpublic resize(id: number, cols: number, rows: number): Promise<void> {\n\t\treturn this._channel.call('$resize', [id, cols, rows]);\n\t}\n\tpublic getInitialCwd(id: number): Promise<string> {\n\t\treturn this._channel.call('$getInitialCwd', [id]);\n\t}\n\tpublic getCwd(id: number): Promise<string> {\n\t\treturn this._channel.call('$getCwd', [id]);\n\t}\n\tpublic orphanQuestionReply(id: number): Promise<void> {\n\t\treturn this._channel.call('$orphanQuestionReply', [id]);\n\t}\n\tpublic sendCommandResult(reqId: number, isError: boolean, payload: any): Promise<void> {\n\t\treturn this._channel.call('$sendCommandResult', [reqId, isError, payload]);\n\t}\n\n\tpublic getDefaultSystemShell(osOverride?: OperatingSystem): Promise<string> {\n\t\treturn this._channel.call('$getDefaultSystemShell', [osOverride]);\n\t}\n\n\tpublic getShellEnvironment(): Promise<IProcessEnvironment> {\n\t\treturn this._channel.call('$getShellEnvironment');\n\t}\n\n\tpublic setTerminalLayoutInfo(layout: ITerminalsLayoutInfoById): Promise<void> {\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst args: ISetTerminalLayoutInfoArgs = {\n\t\t\tworkspaceId: workspace.id,\n\t\t\ttabs: layout.tabs\n\t\t};\n\t\treturn this._channel.call<void>('$setTerminalLayoutInfo', args);\n\t}\n\n\tpublic getTerminalLayoutInfo(): Promise<ITerminalsLayoutInfo | undefined> {\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst args: IGetTerminalLayoutInfoArgs = {\n\t\t\tworkspaceId: workspace.id,\n\t\t};\n\t\treturn this._channel.call<ITerminalsLayoutInfo>('$getTerminalLayoutInfo', args);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Severity } from 'vs/platform/notification/common/notification';\n\nexport interface Translations {\n\t[id: string]: string;\n}\n\nexport namespace Translations {\n\texport function equals(a: Translations, b: Translations): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tlet aKeys = Object.keys(a);\n\t\tlet bKeys: Set<string> = new Set<string>();\n\t\tfor (let key of Object.keys(b)) {\n\t\t\tbKeys.add(key);\n\t\t}\n\t\tif (aKeys.length !== bKeys.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let key of aKeys) {\n\t\t\tif (a[key] !== b[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbKeys.delete(key);\n\t\t}\n\t\treturn bKeys.size === 0;\n\t}\n}\n\nexport interface ILog {\n\terror(source: string, message: string): void;\n\twarn(source: string, message: string): void;\n\tinfo(source: string, message: string): void;\n}\n\nexport class Logger implements ILog {\n\n\tprivate readonly _messageHandler: (severity: Severity, source: string, message: string) => void;\n\n\tconstructor(\n\t\tmessageHandler: (severity: Severity, source: string, message: string) => void\n\t) {\n\t\tthis._messageHandler = messageHandler;\n\t}\n\n\tpublic error(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Error, source, message);\n\t}\n\n\tpublic warn(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Warning, source, message);\n\t}\n\n\tpublic info(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Info, source, message);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as semver from 'vs/base/common/semver/semver';\nimport * as json from 'vs/base/common/json';\nimport * as arrays from 'vs/base/common/arrays';\nimport { getParseErrorMessage } from 'vs/base/common/jsonErrorMessages';\nimport * as types from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport * as pfs from 'vs/base/node/pfs';\nimport { getGalleryExtensionId, groupByExtension, ExtensionIdentifierWithVersion, getExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { isValidExtensionVersion } from 'vs/platform/extensions/common/extensionValidator';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { Translations, ILog } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst MANIFEST_FILE = 'package.json';\n\nexport interface NlsConfiguration {\n\treadonly devMode: boolean;\n\treadonly locale: string | undefined;\n\treadonly pseudo: boolean;\n\treadonly translations: Translations;\n}\n\nabstract class ExtensionManifestHandler {\n\n\tprotected readonly _ourVersion: string;\n\tprotected readonly _log: ILog;\n\tprotected readonly _absoluteFolderPath: string;\n\tprotected readonly _isBuiltin: boolean;\n\tprotected readonly _isUnderDevelopment: boolean;\n\tprotected readonly _absoluteManifestPath: string;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean) {\n\t\tthis._ourVersion = ourVersion;\n\t\tthis._log = log;\n\t\tthis._absoluteFolderPath = absoluteFolderPath;\n\t\tthis._isBuiltin = isBuiltin;\n\t\tthis._isUnderDevelopment = isUnderDevelopment;\n\t\tthis._absoluteManifestPath = path.join(absoluteFolderPath, MANIFEST_FILE);\n\t}\n}\n\nclass ExtensionManifestParser extends ExtensionManifestHandler {\n\n\tprivate static _fastParseJSON(text: string, errors: json.ParseError[]): any {\n\t\ttry {\n\t\t\treturn JSON.parse(text);\n\t\t} catch (err) {\n\t\t\t// invalid JSON, let's get good errors\n\t\t\treturn json.parse(text, errors);\n\t\t}\n\t}\n\n\tpublic parse(): Promise<IExtensionDescription> {\n\t\treturn fs.promises.readFile(this._absoluteManifestPath).then((manifestContents) => {\n\t\t\tconst errors: json.ParseError[] = [];\n\t\t\tconst manifest = ExtensionManifestParser._fastParseJSON(manifestContents.toString(), errors);\n\t\t\tif (json.getNodeType(manifest) !== 'object') {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonParseInvalidType', \"Invalid manifest file {0}: Not an JSON object.\", this._absoluteManifestPath));\n\t\t\t} else if (errors.length === 0) {\n\t\t\t\tif (manifest.__metadata) {\n\t\t\t\t\tmanifest.uuid = manifest.__metadata.id;\n\t\t\t\t}\n\t\t\t\tmanifest.isUserBuiltin = !!manifest.__metadata?.isBuiltin;\n\t\t\t\tdelete manifest.__metadata;\n\t\t\t\treturn manifest;\n\t\t\t} else {\n\t\t\t\terrors.forEach(e => {\n\t\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonParseFail', \"Failed to parse {0}: [{1}, {2}] {3}.\", this._absoluteManifestPath, e.offset, e.length, getParseErrorMessage(e.error)));\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}, (err) => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('fileReadFail', \"Cannot read file {0}: {1}.\", this._absoluteManifestPath, err.message));\n\t\t\treturn null;\n\t\t});\n\t}\n}\n\nclass ExtensionManifestNLSReplacer extends ExtensionManifestHandler {\n\n\tprivate readonly _nlsConfig: NlsConfiguration;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration) {\n\t\tsuper(ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\tthis._nlsConfig = nlsConfig;\n\t}\n\n\tpublic replaceNLS(extensionDescription: IExtensionDescription): Promise<IExtensionDescription> {\n\t\tinterface MessageBag {\n\t\t\t[key: string]: string;\n\t\t}\n\n\t\tinterface TranslationBundle {\n\t\t\tcontents: {\n\t\t\t\tpackage: MessageBag;\n\t\t\t};\n\t\t}\n\n\t\tinterface LocalizedMessages {\n\t\t\tvalues: MessageBag | undefined;\n\t\t\tdefault: string | null;\n\t\t}\n\n\t\tconst reportErrors = (localized: string | null, errors: json.ParseError[]): void => {\n\t\t\terrors.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonsParseReportErrors', \"Failed to parse {0}: {1}.\", localized, getParseErrorMessage(error.error)));\n\t\t\t});\n\t\t};\n\t\tconst reportInvalidFormat = (localized: string | null): void => {\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonInvalidFormat', \"Invalid format {0}: JSON object expected.\", localized));\n\t\t};\n\n\t\tlet extension = path.extname(this._absoluteManifestPath);\n\t\tlet basename = this._absoluteManifestPath.substr(0, this._absoluteManifestPath.length - extension.length);\n\n\t\tconst translationId = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\tlet translationPath = this._nlsConfig.translations[translationId];\n\t\tlet localizedMessages: Promise<LocalizedMessages | undefined>;\n\t\tif (translationPath) {\n\t\t\tlocalizedMessages = fs.promises.readFile(translationPath, 'utf8').then<LocalizedMessages, LocalizedMessages>((content) => {\n\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\tlet translationBundle: TranslationBundle = json.parse(content, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(translationPath, errors);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else if (json.getNodeType(translationBundle) !== 'object') {\n\t\t\t\t\treportInvalidFormat(translationPath);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else {\n\t\t\t\t\tlet values = translationBundle.contents ? translationBundle.contents.package : undefined;\n\t\t\t\t\treturn { values: values, default: `${basename}.nls.json` };\n\t\t\t\t}\n\t\t\t}, (error) => {\n\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t});\n\t\t} else {\n\t\t\tlocalizedMessages = pfs.SymlinkSupport.existsFile(basename + '.nls' + extension).then<LocalizedMessages | undefined, LocalizedMessages | undefined>(exists => {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn ExtensionManifestNLSReplacer.findMessageBundles(this._nlsConfig, basename).then((messageBundle) => {\n\t\t\t\t\tif (!messageBundle.localized) {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t}\n\t\t\t\t\treturn fs.promises.readFile(messageBundle.localized, 'utf8').then(messageBundleContent => {\n\t\t\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\t\t\tlet messages: MessageBag = json.parse(messageBundleContent, errors);\n\t\t\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\t\t\treportErrors(messageBundle.localized, errors);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t} else if (json.getNodeType(messages) !== 'object') {\n\t\t\t\t\t\t\treportInvalidFormat(messageBundle.localized);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { values: messages, default: messageBundle.original };\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t});\n\t\t\t\t}, (err) => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn localizedMessages.then((localizedMessages) => {\n\t\t\tif (localizedMessages === undefined) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t// resolveOriginalMessageBundle returns null if localizedMessages.default === undefined;\n\t\t\treturn ExtensionManifestNLSReplacer.resolveOriginalMessageBundle(localizedMessages.default, errors).then((defaults) => {\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(localizedMessages.default, errors);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t} else if (json.getNodeType(localizedMessages) !== 'object') {\n\t\t\t\t\treportInvalidFormat(localizedMessages.default);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t}\n\t\t\t\tconst localized = localizedMessages.values || Object.create(null);\n\t\t\t\tExtensionManifestNLSReplacer._replaceNLStrings(this._nlsConfig, extensionDescription, localized, defaults, this._log, this._absoluteFolderPath);\n\t\t\t\treturn extensionDescription;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn extensionDescription;\n\t\t});\n\t}\n\n\t/**\n\t * Parses original message bundle, returns null if the original message bundle is null.\n\t */\n\tprivate static resolveOriginalMessageBundle(originalMessageBundle: string | null, errors: json.ParseError[]) {\n\t\treturn new Promise<{ [key: string]: string; } | null>((c, e) => {\n\t\t\tif (originalMessageBundle) {\n\t\t\t\tfs.promises.readFile(originalMessageBundle).then(originalBundleContent => {\n\t\t\t\t\tc(json.parse(originalBundleContent.toString(), errors));\n\t\t\t\t}, (err) => {\n\t\t\t\t\tc(null);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tc(null);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Finds localized message bundle and the original (unlocalized) one.\n\t * If the localized file is not present, returns null for the original and marks original as localized.\n\t */\n\tprivate static findMessageBundles(nlsConfig: NlsConfiguration, basename: string): Promise<{ localized: string; original: string | null; }> {\n\t\treturn new Promise<{ localized: string; original: string | null; }>((c, e) => {\n\t\t\tfunction loop(basename: string, locale: string): void {\n\t\t\t\tlet toCheck = `${basename}.nls.${locale}.json`;\n\t\t\t\tpfs.SymlinkSupport.existsFile(toCheck).then(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tc({ localized: toCheck, original: `${basename}.nls.json` });\n\t\t\t\t\t}\n\t\t\t\t\tlet index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\tc({ localized: `${basename}.nls.json`, original: null });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t\tloop(basename, locale);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (nlsConfig.devMode || nlsConfig.pseudo || !nlsConfig.locale) {\n\t\t\t\treturn c({ localized: basename + '.nls.json', original: null });\n\t\t\t}\n\t\t\tloop(basename, nlsConfig.locale);\n\t\t});\n\t}\n\n\t/**\n\t * This routine makes the following assumptions:\n\t * The root element is an object literal\n\t */\n\tprivate static _replaceNLStrings<T extends object>(nlsConfig: NlsConfiguration, literal: T, messages: { [key: string]: string; }, originalMessages: { [key: string]: string } | null, log: ILog, messageScope: string): void {\n\t\tfunction processEntry(obj: any, key: string | number, command?: boolean) {\n\t\t\tlet value = obj[key];\n\t\t\tif (types.isString(value)) {\n\t\t\t\tlet str = <string>value;\n\t\t\t\tlet length = str.length;\n\t\t\t\tif (length > 1 && str[0] === '%' && str[length - 1] === '%') {\n\t\t\t\t\tlet messageKey = str.substr(1, length - 2);\n\t\t\t\t\tlet message = messages[messageKey];\n\t\t\t\t\t// If the messages come from a language pack they might miss some keys\n\t\t\t\t\t// Fill them from the original messages.\n\t\t\t\t\tif (message === undefined && originalMessages) {\n\t\t\t\t\t\tmessage = originalMessages[messageKey];\n\t\t\t\t\t}\n\t\t\t\t\tif (message) {\n\t\t\t\t\t\tif (nlsConfig.pseudo) {\n\t\t\t\t\t\t\t// FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n\t\t\t\t\t\t\tmessage = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tobj[key] = command && (key === 'title' || key === 'category') && originalMessages ? { value: message, original: originalMessages[messageKey] } : message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.warn(messageScope, nls.localize('missingNLSKey', \"Couldn't find message for key {0}.\", messageKey));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isObject(value)) {\n\t\t\t\tfor (let k in value) {\n\t\t\t\t\tif (value.hasOwnProperty(k)) {\n\t\t\t\t\t\tk === 'commands' ? processEntry(value, k, true) : processEntry(value, k, command);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isArray(value)) {\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\t\tprocessEntry(value, i, command);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let key in literal) {\n\t\t\tif (literal.hasOwnProperty(key)) {\n\t\t\t\tprocessEntry(literal, key);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Relax the readonly properties here, it is the one place where we check and normalize values\nexport interface IRelaxedExtensionDescription {\n\tid: string;\n\tuuid?: string;\n\tidentifier: ExtensionIdentifier;\n\tname: string;\n\tversion: string;\n\tpublisher: string;\n\tisBuiltin: boolean;\n\tisUserBuiltin: boolean;\n\tisUnderDevelopment: boolean;\n\textensionLocation: URI;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n\tenableProposedApi?: boolean;\n}\n\nclass ExtensionManifestValidator extends ExtensionManifestHandler {\n\tvalidate(_extensionDescription: IExtensionDescription): IExtensionDescription | null {\n\t\tlet extensionDescription = <IRelaxedExtensionDescription>_extensionDescription;\n\t\textensionDescription.isBuiltin = this._isBuiltin;\n\t\textensionDescription.isUserBuiltin = !this._isBuiltin && !!extensionDescription.isUserBuiltin;\n\t\textensionDescription.isUnderDevelopment = this._isUnderDevelopment;\n\n\t\tlet notices: string[] = [];\n\t\tif (!ExtensionManifestValidator.isValidExtensionDescription(this._ourVersion, this._absoluteFolderPath, extensionDescription, notices)) {\n\t\t\tnotices.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, error);\n\t\t\t});\n\t\t\treturn null;\n\t\t}\n\n\t\t// in this case the notices are warnings\n\t\tnotices.forEach((error) => {\n\t\t\tthis._log.warn(this._absoluteFolderPath, error);\n\t\t});\n\n\t\t// allow publisher to be undefined to make the initial extension authoring experience smoother\n\t\tif (!extensionDescription.publisher) {\n\t\t\textensionDescription.publisher = 'undefined_publisher';\n\t\t}\n\n\t\t// id := `publisher.name`\n\t\textensionDescription.id = getExtensionId(extensionDescription.publisher, extensionDescription.name);\n\t\textensionDescription.identifier = new ExtensionIdentifier(extensionDescription.id);\n\n\t\textensionDescription.extensionLocation = URI.file(this._absoluteFolderPath);\n\n\t\treturn extensionDescription;\n\t}\n\n\tprivate static isValidExtensionDescription(version: string, extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\n\t\tif (!ExtensionManifestValidator.baseIsValidExtensionDescription(extensionFolderPath, extensionDescription, notices)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!semver.valid(extensionDescription.version)) {\n\t\t\tnotices.push(nls.localize('notSemver', \"Extension version is not semver compatible.\"));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isValidExtensionVersion(version, extensionDescription, notices);\n\t}\n\n\tprivate static baseIsValidExtensionDescription(extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\t\tif (!extensionDescription) {\n\t\t\tnotices.push(nls.localize('extensionDescription.empty', \"Got empty extension description\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.publisher !== 'undefined' && typeof extensionDescription.publisher !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.publisher', \"property publisher must be of type `string`.\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.name !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.name', \"property `{0}` is mandatory and must be of type `string`\", 'name'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.version !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.version', \"property `{0}` is mandatory and must be of type `string`\", 'version'));\n\t\t\treturn false;\n\t\t}\n\t\tif (!extensionDescription.engines) {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines', \"property `{0}` is mandatory and must be of type `object`\", 'engines'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.engines.vscode !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines.vscode', \"property `{0}` is mandatory and must be of type `string`\", 'engines.vscode'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.extensionDependencies !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.extensionDependencies)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.extensionDependencies', \"property `{0}` can be omitted or must be of type `string[]`\", 'extensionDependencies'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.activationEvents !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.activationEvents)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents1', \"property `{0}` can be omitted or must be of type `string[]`\", 'activationEvents'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (typeof extensionDescription.main === 'undefined' && typeof extensionDescription.browser === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents2', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.main !== 'undefined') {\n\t\t\tif (typeof extensionDescription.main !== 'string') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main1', \"property `{0}` can be omitted or must be of type `string`\", 'main'));\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tconst normalizedAbsolutePath = path.join(extensionFolderPath, extensionDescription.main);\n\t\t\t\tif (!normalizedAbsolutePath.startsWith(extensionFolderPath)) {\n\t\t\t\t\tnotices.push(nls.localize('extensionDescription.main2', \"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t\t// not a failure case\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof extensionDescription.activationEvents === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.browser !== 'undefined') {\n\t\t\tif (typeof extensionDescription.browser !== 'string') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.browser1', \"property `{0}` can be omitted or must be of type `string`\", 'browser'));\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tconst normalizedAbsolutePath = path.join(extensionFolderPath, extensionDescription.browser);\n\t\t\t\tif (!normalizedAbsolutePath.startsWith(extensionFolderPath)) {\n\t\t\t\t\tnotices.push(nls.localize('extensionDescription.browser2', \"Expected `browser` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t\t// not a failure case\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof extensionDescription.activationEvents === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.browser3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'browser'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _isStringArray(arr: string[]): boolean {\n\t\tif (!Array.isArray(arr)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tif (typeof arr[i] !== 'string') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class ExtensionScannerInput {\n\n\tpublic mtime: number | undefined;\n\n\tconstructor(\n\t\tpublic readonly ourVersion: string,\n\t\tpublic readonly commit: string | undefined,\n\t\tpublic readonly locale: string | undefined,\n\t\tpublic readonly devMode: boolean,\n\t\tpublic readonly absoluteFolderPath: string,\n\t\tpublic readonly isBuiltin: boolean,\n\t\tpublic readonly isUnderDevelopment: boolean,\n\t\tpublic readonly translations: Translations\n\t) {\n\t\t// Keep empty!! (JSON.parse)\n\t}\n\n\tpublic static createNLSConfig(input: ExtensionScannerInput): NlsConfiguration {\n\t\treturn {\n\t\t\tdevMode: input.devMode,\n\t\t\tlocale: input.locale,\n\t\t\tpseudo: input.locale === 'pseudo',\n\t\t\ttranslations: input.translations\n\t\t};\n\t}\n\n\tpublic static equals(a: ExtensionScannerInput, b: ExtensionScannerInput): boolean {\n\t\treturn (\n\t\t\ta.ourVersion === b.ourVersion\n\t\t\t&& a.commit === b.commit\n\t\t\t&& a.locale === b.locale\n\t\t\t&& a.devMode === b.devMode\n\t\t\t&& a.absoluteFolderPath === b.absoluteFolderPath\n\t\t\t&& a.isBuiltin === b.isBuiltin\n\t\t\t&& a.isUnderDevelopment === b.isUnderDevelopment\n\t\t\t&& a.mtime === b.mtime\n\t\t\t&& Translations.equals(a.translations, b.translations)\n\t\t);\n\t}\n}\n\nexport interface IExtensionReference {\n\tname: string;\n\tpath: string;\n}\n\nexport interface IExtensionResolver {\n\tresolveExtensions(): Promise<IExtensionReference[]>;\n}\n\nclass DefaultExtensionResolver implements IExtensionResolver {\n\n\tconstructor(private root: string) { }\n\n\tresolveExtensions(): Promise<IExtensionReference[]> {\n\t\treturn pfs.readDirsInDir(this.root)\n\t\t\t.then(folders => folders.map(name => ({ name, path: path.join(this.root, name) })));\n\t}\n}\n\nexport class ExtensionScanner {\n\n\t/**\n\t * Read the extension defined in `absoluteFolderPath`\n\t */\n\tprivate static scanExtension(version: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration): Promise<IExtensionDescription | null> {\n\t\tabsoluteFolderPath = path.normalize(absoluteFolderPath);\n\n\t\tlet parser = new ExtensionManifestParser(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\treturn parser.parse().then<IExtensionDescription | null>((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet nlsReplacer = new ExtensionManifestNLSReplacer(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t\t\treturn nlsReplacer.replaceNLS(extensionDescription);\n\t\t}).then((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet validator = new ExtensionManifestValidator(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\t\treturn validator.validate(extensionDescription);\n\t\t});\n\t}\n\n\t/**\n\t * Scan a list of extensions defined in `absoluteFolderPath`\n\t */\n\tpublic static async scanExtensions(input: ExtensionScannerInput, log: ILog, resolver: IExtensionResolver | null = null): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\tif (!resolver) {\n\t\t\tresolver = new DefaultExtensionResolver(absoluteFolderPath);\n\t\t}\n\n\t\ttry {\n\t\t\tlet obsolete: { [folderName: string]: boolean; } = {};\n\t\t\tif (!isBuiltin) {\n\t\t\t\ttry {\n\t\t\t\t\tconst obsoleteFileContents = await fs.promises.readFile(path.join(absoluteFolderPath, '.obsolete'), 'utf8');\n\t\t\t\t\tobsolete = JSON.parse(obsoleteFileContents);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Don't care\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet refs = await resolver.resolveExtensions();\n\n\t\t\t// Ensure the same extension order\n\t\t\trefs.sort((a, b) => a.name < b.name ? -1 : 1);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\trefs = refs.filter(ref => ref.name.indexOf('.') !== 0); // Do not consider user extension folder starting with `.`\n\t\t\t}\n\n\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\tlet _extensionDescriptions = await Promise.all(refs.map(r => this.scanExtension(input.ourVersion, log, r.path, isBuiltin, isUnderDevelopment, nlsConfig)));\n\t\t\tlet extensionDescriptions = arrays.coalesce(_extensionDescriptions);\n\t\t\textensionDescriptions = extensionDescriptions.filter(item => item !== null && !obsolete[new ExtensionIdentifierWithVersion({ id: getGalleryExtensionId(item.publisher, item.name) }, item.version).key()]);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\t// Filter out outdated extensions\n\t\t\t\tconst byExtension: IExtensionDescription[][] = groupByExtension(extensionDescriptions, e => ({ id: e.identifier.value, uuid: e.uuid }));\n\t\t\t\textensionDescriptions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.version, b.version))[0]);\n\t\t\t}\n\n\t\t\textensionDescriptions.sort((a, b) => {\n\t\t\t\tif (a.extensionLocation.fsPath < b.extensionLocation.fsPath) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t});\n\t\t\treturn extensionDescriptions;\n\t\t} catch (err) {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Combination of scanExtension and scanExtensions: If an extension manifest is found at root, we load just this extension,\n\t * otherwise we assume the folder contains multiple extensions.\n\t */\n\tpublic static scanOneOrMultipleExtensions(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\treturn pfs.SymlinkSupport.existsFile(path.join(absoluteFolderPath, MANIFEST_FILE)).then((exists) => {\n\t\t\tif (exists) {\n\t\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig).then((extensionDescription) => {\n\t\t\t\t\tif (extensionDescription === null) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\treturn [extensionDescription];\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.scanExtensions(input, log);\n\t\t}, (err) => {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tpublic static scanSingleExtension(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription | null> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t}\n\n\tpublic static mergeBuiltinExtensions(builtinExtensions: Promise<IExtensionDescription[]>, extraBuiltinExtensions: Promise<IExtensionDescription[]>): Promise<IExtensionDescription[]> {\n\t\treturn Promise.all([builtinExtensions, extraBuiltinExtensions]).then(([builtinExtensions, extraBuiltinExtensions]) => {\n\t\t\tlet resultMap: { [id: string]: IExtensionDescription; } = Object.create(null);\n\t\t\tfor (let i = 0, len = builtinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(builtinExtensions[i].identifier)] = builtinExtensions[i];\n\t\t\t}\n\t\t\t// Overwrite with extensions found in extra\n\t\t\tfor (let i = 0, len = extraBuiltinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(extraBuiltinExtensions[i].identifier)] = extraBuiltinExtensions[i];\n\t\t\t}\n\n\t\t\tlet resultArr = Object.keys(resultMap).map((id) => resultMap[id]);\n\t\t\tresultArr.sort((a, b) => {\n\t\t\t\tconst aLastSegment = path.basename(a.extensionLocation.fsPath);\n\t\t\t\tconst bLastSegment = path.basename(b.extensionLocation.fsPath);\n\t\t\t\tif (aLastSegment < bLastSegment) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (aLastSegment > bLastSegment) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\treturn resultArr;\n\t\t});\n\t}\n}\n","import { field, logger } from '@coder/logger';\nimport * as os from 'os';\nimport * as path from 'path';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport * as platform from 'vs/base/common/platform';\nimport * as resources from 'vs/base/common/resources';\nimport { ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { transformOutgoingURIs } from 'vs/base/common/uriIpc';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { FileDeleteOptions, FileOpenOptions, FileOverwriteOptions, FileReadStreamOptions, FileType, FileWriteOptions, IStat, IWatchOptions } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport product from 'vs/platform/product/common/product';\nimport { IRemoteAgentEnvironment, RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { ITelemetryData, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IPtyService, IShellLaunchConfig, ITerminalEnvironment } from 'vs/platform/terminal/common/terminal';\nimport { getTranslations } from 'vs/server/node/nls';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { IFileChangeDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { IEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { MergedEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableCollection';\nimport { deserializeEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableShared';\nimport * as terminal from 'vs/workbench/contrib/terminal/common/remoteTerminalChannel';\nimport * as terminalEnvironment from 'vs/workbench/contrib/terminal/common/terminalEnvironment';\nimport { getMainProcessParentEnv } from 'vs/workbench/contrib/terminal/node/terminalEnvironment';\nimport { AbstractVariableResolverService } from 'vs/workbench/services/configurationResolver/common/variableResolver';\nimport { ExtensionScanner, ExtensionScannerInput } from 'vs/workbench/services/extensions/node/extensionPoints';\n\n/**\n * Extend the file provider to allow unwatching.\n */\nclass Watcher extends DiskFileSystemProvider {\n\tpublic readonly watches = new Map<number, IDisposable>();\n\n\tpublic override dispose(): void {\n\t\tthis.watches.forEach((w) => w.dispose());\n\t\tthis.watches.clear();\n\t\tsuper.dispose();\n\t}\n\n\tpublic _watch(req: number, resource: URI, opts: IWatchOptions): void {\n\t\tthis.watches.set(req, this.watch(resource, opts));\n\t}\n\n\tpublic unwatch(req: number): void {\n\t\tthis.watches.get(req)!.dispose();\n\t\tthis.watches.delete(req);\n\t}\n}\n\nexport class FileProviderChannel implements IServerChannel<RemoteAgentConnectionContext>, IDisposable {\n\tprivate readonly provider: DiskFileSystemProvider;\n\tprivate readonly watchers = new Map<string, Watcher>();\n\n\tpublic constructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tthis.provider = new DiskFileSystemProvider(this.logService);\n\t}\n\n\tpublic listen(context: RemoteAgentConnectionContext, event: string, args?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'filechange': return this.filechange(context, args[0]);\n\t\t\tcase 'readFileStream': return this.readFileStream(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tprivate filechange(context: RemoteAgentConnectionContext, session: string): Event<IFileChangeDto[]> {\n\t\tconst emitter = new Emitter<IFileChangeDto[]>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst provider = new Watcher(this.logService);\n\t\t\t\tthis.watchers.set(session, provider);\n\t\t\t\tconst transformer = getUriTransformer(context.remoteAuthority);\n\t\t\t\tprovider.onDidChangeFile((events) => {\n\t\t\t\t\temitter.fire(events.map((event) => ({\n\t\t\t\t\t\t...event,\n\t\t\t\t\t\tresource: transformer.transformOutgoing(event.resource),\n\t\t\t\t\t})));\n\t\t\t\t});\n\t\t\t\tprovider.onDidErrorOccur((event) => this.logService.error(event));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.watchers.get(session)!.dispose();\n\t\t\t\tthis.watchers.delete(session);\n\t\t\t},\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate readFileStream(resource: UriComponents, opts: FileReadStreamOptions): Event<ReadableStreamEventPayload<VSBuffer>> {\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst fileStream = this.provider.readFileStream(this.transform(resource), opts, cts.token);\n\t\tconst emitter = new Emitter<ReadableStreamEventPayload<VSBuffer>>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tfileStream.on('data', (data) => emitter.fire(VSBuffer.wrap(data)));\n\t\t\t\tfileStream.on('error', (error) => emitter.fire(error));\n\t\t\t\tfileStream.on('end', () => emitter.fire('end'));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => cts.cancel(),\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tpublic call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'stat': return this.stat(args[0]);\n\t\t\tcase 'open': return this.open(args[0], args[1]);\n\t\t\tcase 'close': return this.close(args[0]);\n\t\t\tcase 'read': return this.read(args[0], args[1], args[2]);\n\t\t\tcase 'readFile': return this.readFile(args[0]);\n\t\t\tcase 'write': return this.write(args[0], args[1], args[2], args[3], args[4]);\n\t\t\tcase 'writeFile': return this.writeFile(args[0], args[1], args[2]);\n\t\t\tcase 'delete': return this.delete(args[0], args[1]);\n\t\t\tcase 'mkdir': return this.mkdir(args[0]);\n\t\t\tcase 'readdir': return this.readdir(args[0]);\n\t\t\tcase 'rename': return this.rename(args[0], args[1], args[2]);\n\t\t\tcase 'copy': return this.copy(args[0], args[1], args[2]);\n\t\t\tcase 'watch': return this.watch(args[0], args[1], args[2], args[3]);\n\t\t\tcase 'unwatch': return this.unwatch(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.watchers.forEach((w) => w.dispose());\n\t\tthis.watchers.clear();\n\t}\n\n\tprivate async stat(resource: UriComponents): Promise<IStat> {\n\t\treturn this.provider.stat(this.transform(resource));\n\t}\n\n\tprivate async open(resource: UriComponents, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.provider.open(this.transform(resource), opts);\n\t}\n\n\tprivate async close(fd: number): Promise<void> {\n\t\treturn this.provider.close(fd);\n\t}\n\n\tprivate async read(fd: number, pos: number, length: number): Promise<[VSBuffer, number]> {\n\t\tconst buffer = VSBuffer.alloc(length);\n\t\tconst bytesRead = await this.provider.read(fd, pos, buffer.buffer, 0, length);\n\t\treturn [buffer, bytesRead];\n\t}\n\n\tprivate async readFile(resource: UriComponents): Promise<VSBuffer> {\n\t\treturn VSBuffer.wrap(await this.provider.readFile(this.transform(resource)));\n\t}\n\n\tprivate write(fd: number, pos: number, buffer: VSBuffer, offset: number, length: number): Promise<number> {\n\t\treturn this.provider.write(fd, pos, buffer.buffer, offset, length);\n\t}\n\n\tprivate writeFile(resource: UriComponents, buffer: VSBuffer, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.provider.writeFile(this.transform(resource), buffer.buffer, opts);\n\t}\n\n\tprivate async delete(resource: UriComponents, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.provider.delete(this.transform(resource), opts);\n\t}\n\n\tprivate async mkdir(resource: UriComponents): Promise<void> {\n\t\treturn this.provider.mkdir(this.transform(resource));\n\t}\n\n\tprivate async readdir(resource: UriComponents): Promise<[string, FileType][]> {\n\t\treturn this.provider.readdir(this.transform(resource));\n\t}\n\n\tprivate async rename(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.rename(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate copy(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.copy(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate async watch(session: string, req: number, resource: UriComponents, opts: IWatchOptions): Promise<void> {\n\t\tthis.watchers.get(session)!._watch(req, this.transform(resource), opts);\n\t}\n\n\tprivate async unwatch(session: string, req: number): Promise<void> {\n\t\tthis.watchers.get(session)!.unwatch(req);\n\t}\n\n\tprivate transform(resource: UriComponents): URI {\n\t\t// Used for walkthrough content.\n\t\tif (/^\\/static[^/]*\\//.test(resource.path)) {\n\t\t\treturn URI.file(this.environmentService.appRoot + resource.path.replace(/^\\/static[^/]*\\//, '/'));\n\t\t// Used by the webview service worker to load resources.\n\t\t} else if (resource.path === '/vscode-resource' && resource.query) {\n\t\t\ttry {\n\t\t\t\tconst query = JSON.parse(resource.query);\n\t\t\t\tif (query.requestResourcePath) {\n\t\t\t\t\treturn URI.file(query.requestResourcePath);\n\t\t\t\t}\n\t\t\t} catch (error) { /* Carry on. */ }\n\t\t}\n\t\treturn URI.from(resource);\n\t}\n}\n\n// See ../../workbench/services/remote/common/remoteAgentEnvironmentChannel.ts\nexport class ExtensionEnvironmentChannel implements IServerChannel {\n\tpublic constructor(\n\t\tprivate readonly environment: INativeEnvironmentService,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly telemetry: ITelemetryService,\n\t\tprivate readonly connectionToken: string,\n\t) {}\n\n\tpublic listen(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tpublic async call(context: any, command: string, args: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getEnvironmentData':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.getEnvironmentData(),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'scanExtensions':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.scanExtensions(args.language),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'getDiagnosticInfo': return this.getDiagnosticInfo();\n\t\t\tcase 'disableTelemetry': return this.disableTelemetry();\n\t\t\tcase 'logTelemetry': return this.logTelemetry(args[0], args[1]);\n\t\t\tcase 'flushTelemetry': return this.flushTelemetry();\n\t\t}\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tprivate async getEnvironmentData(): Promise<IRemoteAgentEnvironment> {\n\t\treturn {\n\t\t\tpid: process.pid,\n\t\t\tconnectionToken: this.connectionToken,\n\t\t\tappRoot: URI.file(this.environment.appRoot),\n\t\t\tsettingsPath: this.environment.settingsResource,\n\t\t\tlogsPath: URI.file(this.environment.logsPath),\n\t\t\textensionsPath: URI.file(this.environment.extensionsPath!),\n\t\t\textensionHostLogsPath: URI.file(path.join(this.environment.logsPath, 'extension-host')),\n\t\t\tglobalStorageHome: this.environment.globalStorageHome,\n\t\t\tworkspaceStorageHome: this.environment.workspaceStorageHome,\n\t\t\tuserHome: this.environment.userHome,\n\t\t\tuseHostProxy: false,\n\t\t\tos: platform.OS,\n\t\t\tmarks: []\n\t\t};\n\t}\n\n\tprivate async scanExtensions(language: string): Promise<IExtensionDescription[]> {\n\t\tconst translations = await getTranslations(language, this.environment.userDataPath);\n\n\t\tconst scanMultiple = (isBuiltin: boolean, isUnderDevelopment: boolean, paths: string[]): Promise<IExtensionDescription[][]> => {\n\t\t\treturn Promise.all(paths.map((path) => {\n\t\t\t\treturn ExtensionScanner.scanExtensions(new ExtensionScannerInput(\n\t\t\t\t\tproduct.version,\n\t\t\t\t\tproduct.commit,\n\t\t\t\t\tlanguage,\n\t\t\t\t\t!!process.env.VSCODE_DEV,\n\t\t\t\t\tpath,\n\t\t\t\t\tisBuiltin,\n\t\t\t\t\tisUnderDevelopment,\n\t\t\t\t\ttranslations,\n\t\t\t\t), this.log);\n\t\t\t}));\n\t\t};\n\n\t\tconst scanBuiltin = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(true, false, [this.environment.builtinExtensionsPath, ...this.environment.extraBuiltinExtensionPaths]);\n\t\t};\n\n\t\tconst scanInstalled = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(false, true, [this.environment.extensionsPath!, ...this.environment.extraExtensionPaths]);\n\t\t};\n\n\t\treturn Promise.all([scanBuiltin(), scanInstalled()]).then((allExtensions) => {\n\t\t\tconst uniqueExtensions = new Map<string, IExtensionDescription>();\n\t\t\tallExtensions.forEach((multipleExtensions) => {\n\t\t\t\tmultipleExtensions.forEach((extensions) => {\n\t\t\t\t\textensions.forEach((extension) => {\n\t\t\t\t\t\tconst id = ExtensionIdentifier.toKey(extension.identifier);\n\t\t\t\t\t\tif (uniqueExtensions.has(id)) {\n\t\t\t\t\t\t\tconst oldPath = uniqueExtensions.get(id)!.extensionLocation.fsPath;\n\t\t\t\t\t\t\tconst newPath = extension.extensionLocation.fsPath;\n\t\t\t\t\t\t\tthis.log.warn(`${oldPath} has been overridden ${newPath}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuniqueExtensions.set(id, extension);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn Array.from(uniqueExtensions.values());\n\t\t});\n\t}\n\n\tprivate getDiagnosticInfo(): Promise<IDiagnosticInfo> {\n\t\tthrow new Error('not implemented');\n\t}\n\n\tprivate async disableTelemetry(): Promise<void> {\n\t\tthis.telemetry.setEnabled(false);\n\t}\n\n\tprivate async logTelemetry(eventName: string, data: ITelemetryData): Promise<void> {\n\t\tthis.telemetry.publicLog(eventName, data);\n\t}\n\n\tprivate async flushTelemetry(): Promise<void> {\n\t\t// We always send immediately at the moment.\n\t}\n}\n\n// Reference: - ../../workbench/api/common/extHostDebugService.ts\nclass VariableResolverService extends AbstractVariableResolverService {\n\tconstructor(\n\t\tremoteAuthority: string,\n\t\targs: terminal.ICreateTerminalProcessArguments,\n\t\tenv: platform.IProcessEnvironment,\n\t) {\n\t\tsuper({\n\t\t\tgetFolderUri: (name: string): URI | undefined => {\n\t\t\t\tconst folder = args.workspaceFolders.find((f) => f.name === name);\n\t\t\t\treturn folder && URI.revive(folder.uri);\n\t\t\t},\n\t\t\tgetWorkspaceFolderCount: (): number => {\n\t\t\t\treturn args.workspaceFolders.length;\n\t\t\t},\n\t\t\t// In ../../workbench/contrib/terminal/common/remoteTerminalChannel.ts it\n\t\t\t// looks like there are `config:` entries which must be for this? Not sure\n\t\t\t// how/if the URI comes into play though.\n\t\t\tgetConfigurationValue: (_: URI, section: string): string | undefined => {\n\t\t\t\treturn args.resolvedVariables[`config:${section}`];\n\t\t\t},\n\t\t\tgetAppRoot: (): string | undefined => {\n\t\t\t\treturn (args.resolverEnv && args.resolverEnv['VSCODE_CWD']) || env['VSCODE_CWD'] || process.cwd();\n\t\t\t},\n\t\t\tgetExecPath: (): string | undefined => {\n\t\t\t\t// Assuming that resolverEnv is just for use in the resolver and not for\n\t\t\t\t// the terminal itself.\n\t\t\t\treturn (args.resolverEnv && args.resolverEnv['VSCODE_EXEC_PATH']) || env['VSCODE_EXEC_PATH'];\n\t\t\t},\n\t\t\t// This is just a guess; this is the only file-related thing we're sent\n\t\t\t// and none of these resolver methods seem to get called so I don't know\n\t\t\t// how to test.\n\t\t\tgetFilePath: (): string | undefined => {\n\t\t\t\tconst resource = transformIncoming(remoteAuthority, args.activeFileResource);\n\t\t\t\tif (!resource) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// See ../../editor/standalone/browser/simpleServices.ts;\n\t\t\t\t// `BaseConfigurationResolverService` calls `getUriLabel` from there.\n\t\t\t\tif (resource.scheme === 'file') {\n\t\t\t\t\treturn resource.fsPath;\n\t\t\t\t}\n\t\t\t\treturn resource.path;\n\t\t\t},\n\t\t\t// It looks like these are set here although they aren't on the types:\n\t\t\t// ../../workbench/contrib/terminal/common/remoteTerminalChannel.ts\n\t\t\tgetSelectedText: (): string | undefined => {\n\t\t\t\treturn args.resolvedVariables.selectedText;\n\t\t\t},\n\t\t\tgetLineNumber: (): string | undefined => {\n\t\t\t\treturn args.resolvedVariables.selectedText;\n\t\t\t},\n\t\t}, undefined, Promise.resolve(env));\n\t}\n}\n\nexport class TerminalProviderChannel implements IServerChannel<RemoteAgentConnectionContext>, IDisposable {\n\tpublic constructor (\n\t\tprivate readonly logService: ILogService,\n\t\tprivate readonly ptyService: IPtyService,\n\t) {}\n\n\tpublic listen(_: RemoteAgentConnectionContext, event: string, args: any): Event<any> {\n\t\tlogger.trace('TerminalProviderChannel:listen', field('event', event), field('args', args));\n\n\t\tswitch (event) {\n\t\t\tcase '$onPtyHostExitEvent': return this.ptyService.onPtyHostExit || Event.None;\n\t\t\tcase '$onPtyHostStartEvent': return this.ptyService.onPtyHostStart || Event.None;\n\t\t\tcase '$onPtyHostUnresponsiveEvent': return this.ptyService.onPtyHostUnresponsive || Event.None;\n\t\t\tcase '$onPtyHostResponsiveEvent': return this.ptyService.onPtyHostResponsive || Event.None;\n\n\t\t\tcase '$onProcessDataEvent': return this.ptyService.onProcessData;\n\t\t\tcase '$onProcessExitEvent': return this.ptyService.onProcessExit;\n\t\t\tcase '$onProcessReadyEvent': return this.ptyService.onProcessReady;\n\t\t\tcase '$onProcessReplayEvent': return this.ptyService.onProcessReplay;\n\t\t\tcase '$onProcessTitleChangedEvent':  return this.ptyService.onProcessTitleChanged;\n\t\t\tcase '$onProcessShellTypeChangedEvent': return this.ptyService.onProcessShellTypeChanged;\n\t\t\tcase '$onProcessOverrideDimensionsEvent': return this.ptyService.onProcessOverrideDimensions;\n\t\t\tcase '$onProcessResolvedShellLaunchConfigEvent': return this.ptyService.onProcessResolvedShellLaunchConfig;\n\t\t\tcase '$onProcessOrphanQuestion': return this.ptyService.onProcessOrphanQuestion;\n\t\t\t\t// NOTE@asher: I think this must have something to do with running\n\t\t\t\t// commands on the terminal that will do things in VS Code but we\n\t\t\t\t// already have that functionality via a socket so I'm not sure what\n\t\t\t\t// this is for.\n\t\t\tcase '$onExecuteCommand': return Event.None;\n\t\t}\n\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tpublic call(context: RemoteAgentConnectionContext, command: string, args: any): Promise<any> {\n\t\tlogger.trace('TerminalProviderChannel:call', field('command', command), field('args', args));\n\n\t\tswitch (command) {\n\t\t\tcase '$restartPtyHost': return this.restartPtyHost();\n\t\t\tcase '$createProcess': return this.createProcess(context.remoteAuthority, args);\n\t\t\tcase '$attachToProcess': return this.ptyService.attachToProcess(args[0]);\n\t\t\tcase '$start': return this.ptyService.start(args[0]);\n\t\t\tcase '$input': return this.ptyService.input(args[0], args[1]);\n\t\t\tcase '$acknowledgeDataEvent': return this.ptyService.acknowledgeDataEvent(args[0], args[1]);\n\t\t\tcase '$shutdown': return this.ptyService.shutdown(args[0], args[1]);\n\t\t\tcase '$resize': return this.ptyService.resize(args[0], args[1], args[2]);\n\t\t\tcase '$getInitialCwd': return this.ptyService.getInitialCwd(args[0]);\n\t\t\tcase '$getCwd': return this.ptyService.getCwd(args[0]);\n\t\t\tcase '$sendCommandResult': return this.sendCommandResult(args[0], args[1], args[2], args[3]);\n\t\t\tcase '$orphanQuestionReply': return this.ptyService.orphanQuestionReply(args[0]);\n\t\t\tcase '$listProcesses': return this.ptyService.listProcesses();\n\t\t\tcase '$setTerminalLayoutInfo': return this.ptyService.setTerminalLayoutInfo(args);\n\t\t\tcase '$getTerminalLayoutInfo': return this.ptyService.getTerminalLayoutInfo(args);\n\t\t\tcase '$getShellEnvironment': return this.ptyService.getShellEnvironment();\n\t\t\tcase '$getDefaultSystemShell': return this.ptyService.getDefaultSystemShell(args[0]);\n\t\t\tcase '$reduceConnectionGraceTime': return this.ptyService.reduceConnectionGraceTime();\n\t\t}\n\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tpublic async dispose(): Promise<void> {\n\t\t// Nothing at the moment.\n\t}\n\n\tprivate async restartPtyHost(): Promise<void> {\n\t\tif (this.ptyService.restartPtyHost) {\n\t\t\treturn this.ptyService.restartPtyHost();\n\t\t}\n\t}\n\n\n\t// References: - ../../workbench/api/node/extHostTerminalService.ts\n\t//             - ../../workbench/contrib/terminal/browser/terminalProcessManager.ts\n\tprivate async createProcess(remoteAuthority: string, args: terminal.ICreateTerminalProcessArguments): Promise<terminal.ICreateTerminalProcessResult> {\n\t\tconst shellLaunchConfig: IShellLaunchConfig = {\n\t\t\tname: args.shellLaunchConfig.name,\n\t\t\texecutable: args.shellLaunchConfig.executable,\n\t\t\targs: args.shellLaunchConfig.args,\n\t\t\t// TODO: Should we transform if it's a string as well? The incoming\n\t\t\t// transform only takes `UriComponents` so I suspect it's not necessary.\n\t\t\tcwd: typeof args.shellLaunchConfig.cwd !== 'string'\n\t\t\t\t? transformIncoming(remoteAuthority, args.shellLaunchConfig.cwd)\n\t\t\t\t: args.shellLaunchConfig.cwd,\n\t\t\tenv: args.shellLaunchConfig.env,\n\t\t};\n\n\t\tconst activeWorkspaceUri = transformIncoming(remoteAuthority, args.activeWorkspaceFolder?.uri);\n\t\tconst activeWorkspace = activeWorkspaceUri && args.activeWorkspaceFolder ? {\n\t\t\t...args.activeWorkspaceFolder,\n\t\t\turi: activeWorkspaceUri,\n\t\t\ttoResource: (relativePath: string) => resources.joinPath(activeWorkspaceUri, relativePath),\n\t\t} : undefined;\n\n\t\tconst resolverService = new VariableResolverService(remoteAuthority, args, process.env);\n\t\tconst resolver = terminalEnvironment.createVariableResolver(activeWorkspace, process.env, resolverService);\n\n\t\tshellLaunchConfig.cwd = terminalEnvironment.getCwd(\n\t\t\tshellLaunchConfig,\n\t\t\tos.homedir(),\n\t\t\tresolver,\n\t\t\tactiveWorkspaceUri,\n\t\t\targs.configuration['terminal.integrated.cwd'],\n\t\t\tthis.logService,\n\t\t);\n\n\t\t// Use instead of `terminal.integrated.env.${platform}` to make types work.\n\t\tconst getEnvFromConfig = (): ITerminalEnvironment => {\n\t\t\tif (platform.isWindows) {\n\t\t\t\treturn args.configuration['terminal.integrated.env.windows'];\n\t\t\t} else if (platform.isMacintosh) {\n\t\t\t\treturn args.configuration['terminal.integrated.env.osx'];\n\t\t\t}\n\t\t\treturn args.configuration['terminal.integrated.env.linux'];\n\t\t};\n\n\t\tconst getNonInheritedEnv = async (): Promise<platform.IProcessEnvironment> => {\n\t\t\tconst env = await getMainProcessParentEnv(process.env);\n\t\t\tenv.VSCODE_IPC_HOOK_CLI = process.env['VSCODE_IPC_HOOK_CLI']!;\n\t\t\treturn env;\n\t\t};\n\n\t\tconst env = terminalEnvironment.createTerminalEnvironment(\n\t\t\tshellLaunchConfig,\n\t\t\tgetEnvFromConfig(),\n\t\t\tresolver,\n\t\t\tproduct.version,\n\t\t\targs.configuration['terminal.integrated.detectLocale'],\n\t\t\targs.configuration['terminal.integrated.inheritEnv'] !== false\n\t\t\t\t? process.env as platform.IProcessEnvironment\n\t\t\t\t: await getNonInheritedEnv()\n\t\t);\n\n\t\t// Apply extension environment variable collections to the environment.\n\t\tif (!shellLaunchConfig.strictEnv) {\n\t\t\t// They come in an array and in serialized format.\n\t\t\tconst envVariableCollections = new Map<string, IEnvironmentVariableCollection>();\n\t\t\tfor (const [k, v] of args.envVariableCollections) {\n\t\t\t\tenvVariableCollections.set(k, { map: deserializeEnvironmentVariableCollection(v) });\n\t\t\t}\n\t\t\tconst mergedCollection = new MergedEnvironmentVariableCollection(envVariableCollections);\n\t\t\tmergedCollection.applyToProcessEnvironment(env);\n\t\t}\n\n\t\tconst persistentTerminalId = await this.ptyService.createProcess(\n\t\t\tshellLaunchConfig,\n\t\t\tshellLaunchConfig.cwd,\n\t\t\targs.cols,\n\t\t\targs.rows,\n\t\t\tenv,\n\t\t\tprocess.env as platform.IProcessEnvironment, // Environment used for findExecutable\n\t\t\tfalse, // windowsEnableConpty\n\t\t\targs.shouldPersistTerminal,\n\t\t\targs.workspaceId,\n\t\t\targs.workspaceName,\n\t\t);\n\n\t\treturn {\n\t\t\tpersistentTerminalId,\n\t\t\tresolvedShellLaunchConfig: shellLaunchConfig,\n\t\t};\n\t}\n\n\tprivate async sendCommandResult(_id: number, _reqId: number, _isError: boolean, _payload: any): Promise<void> {\n\t\t// NOTE: Not required unless we implement the matching event, see above.\n\t\tthrow new Error('not implemented');\n\t}\n}\n\nfunction transformIncoming(remoteAuthority: string, uri: UriComponents | undefined): URI | undefined {\n\tconst transformer = getUriTransformer(remoteAuthority);\n\treturn uri ? URI.revive(transformer.transformIncoming(uri)) : uri;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { IPCFileSystemProvider } from 'vs/platform/files/common/ipcFileSystemProvider';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\n\nexport const REMOTE_FILE_SYSTEM_CHANNEL_NAME = 'remotefilesystem';\n\nexport class RemoteFileSystemProvider extends IPCFileSystemProvider {\n\n\tconstructor(remoteAgentService: IRemoteAgentService) {\n\t\tsuper(remoteAgentService.getConnection()!.getChannel(REMOTE_FILE_SYSTEM_CHANNEL_NAME));\n\n\t\t// Initially assume case sensitivity until remote environment is resolved\n\t\tthis.setCaseSensitive(true);\n\t\t(async () => {\n\t\t\tconst remoteAgentEnvironment = await remoteAgentService.getEnvironment();\n\t\t\tthis.setCaseSensitive(remoteAgentEnvironment?.os === OperatingSystem.Linux);\n\t\t})();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { RemoteAgentConnectionContext, IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfoOptions, IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { Event } from 'vs/base/common/event';\nimport { PersistentConnectionEvent, ISocketFactory } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { URI } from 'vs/base/common/uri';\n\nexport const RemoteExtensionLogFileName = 'remoteagent';\n\nexport const IRemoteAgentService = createDecorator<IRemoteAgentService>('remoteAgentService');\n\nexport interface IRemoteAgentService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly socketFactory: ISocketFactory;\n\n\tgetConnection(): IRemoteAgentConnection | null;\n\t/**\n\t * Get the remote environment. In case of an error, returns `null`.\n\t */\n\tgetEnvironment(): Promise<IRemoteAgentEnvironment | null>;\n\t/**\n\t * Get the remote environment. Can return an error.\n\t */\n\tgetRawEnvironment(): Promise<IRemoteAgentEnvironment | null>;\n\n\twhenExtensionsReady(): Promise<void>;\n\t/**\n\t * Scan remote extensions.\n\t */\n\tscanExtensions(skipExtensions?: ExtensionIdentifier[]): Promise<IExtensionDescription[]>;\n\t/**\n\t * Scan a single remote extension.\n\t */\n\tscanSingleExtension(extensionLocation: URI, isBuiltin: boolean): Promise<IExtensionDescription | null>;\n\tgetDiagnosticInfo(options: IDiagnosticInfoOptions): Promise<IDiagnosticInfo | undefined>;\n\tdisableTelemetry(): Promise<void>;\n\tlogTelemetry(eventName: string, data?: ITelemetryData): Promise<void>;\n\tflushTelemetry(): Promise<void>;\n}\n\nexport interface IRemoteAgentConnection {\n\treadonly remoteAuthority: string;\n\n\treadonly onReconnecting: Event<void>;\n\treadonly onDidStateChange: Event<PersistentConnectionEvent>;\n\n\tgetChannel<T extends IChannel>(channelName: string): T;\n\twithChannel<T extends IChannel, R>(channelName: string, callback: (channel: T) => Promise<R>): Promise<R>;\n\tregisterChannel<T extends IServerChannel<RemoteAgentConnectionContext>>(channelName: string, channel: T): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport { promises, createWriteStream, WriteStream } from 'fs';\nimport { Readable } from 'stream';\nimport { Sequencer, createCancelablePromise } from 'vs/base/common/async';\nimport { rimraf } from 'vs/base/node/pfs';\nimport { open as _openZip, Entry, ZipFile } from 'yauzl';\nimport * as yazl from 'yazl';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { assertIsDefined } from 'vs/base/common/types';\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\n\t/**\n\t * Source path within the ZIP archive. Only the files contained in this\n\t * path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\ninterface IOptions {\n\tsourcePathRegex: RegExp;\n}\n\nexport type ExtractErrorType = 'CorruptZip' | 'Incomplete';\n\nexport class ExtractError extends Error {\n\n\treadonly type?: ExtractErrorType;\n\treadonly cause: Error;\n\n\tconstructor(type: ExtractErrorType | undefined, cause: Error) {\n\t\tlet message = cause.message;\n\n\t\tswitch (type) {\n\t\t\tcase 'CorruptZip': message = `Corrupt ZIP: ${message}`; break;\n\t\t}\n\n\t\tsuper(message);\n\t\tthis.type = type;\n\t\tthis.cause = cause;\n\t}\n}\n\nfunction modeFromEntry(entry: Entry) {\n\tconst attr = entry.externalFileAttributes >> 16 || 33188;\n\n\treturn [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\n\t\t.map(mask => attr & mask)\n\t\t.reduce((a, b) => a + b, attr & 61440 /* S_IFMT */);\n}\n\nfunction toExtractError(err: Error): ExtractError {\n\tif (err instanceof ExtractError) {\n\t\treturn err;\n\t}\n\n\tlet type: ExtractErrorType | undefined = undefined;\n\n\tif (/end of central directory record signature not found/.test(err.message)) {\n\t\ttype = 'CorruptZip';\n\t}\n\n\treturn new ExtractError(type, err);\n}\n\nfunction extractEntry(stream: Readable, fileName: string, mode: number, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tconst dirName = path.dirname(fileName);\n\tconst targetDirName = path.join(targetPath, dirName);\n\tif (!targetDirName.startsWith(targetPath)) {\n\t\treturn Promise.reject(new Error(nls.localize('invalid file', \"Error extracting {0}. Invalid file.\", fileName)));\n\t}\n\tconst targetFileName = path.join(targetPath, fileName);\n\n\tlet istream: WriteStream;\n\n\ttoken.onCancellationRequested(() => {\n\t\tif (istream) {\n\t\t\tistream.destroy();\n\t\t}\n\t});\n\n\treturn Promise.resolve(promises.mkdir(targetDirName, { recursive: true })).then(() => new Promise<void>((c, e) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tistream = createWriteStream(targetFileName, { mode });\n\t\t\tistream.once('close', () => c());\n\t\t\tistream.once('error', e);\n\t\t\tstream.once('error', e);\n\t\t\tstream.pipe(istream);\n\t\t} catch (error) {\n\t\t\te(error);\n\t\t}\n\t}));\n}\n\nfunction extractZip(zipfile: ZipFile, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tlet last = createCancelablePromise<void>(() => Promise.resolve());\n\tlet extractedEntriesCount = 0;\n\n\ttoken.onCancellationRequested(() => {\n\t\tlast.cancel();\n\t\tzipfile.close();\n\t});\n\n\treturn new Promise((c, e) => {\n\t\tconst throttler = new Sequencer();\n\n\t\tconst readNextEntry = (token: CancellationToken) => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\textractedEntriesCount++;\n\t\t\tzipfile.readEntry();\n\t\t};\n\n\t\tzipfile.once('error', e);\n\t\tzipfile.once('close', () => last.then(() => {\n\t\t\tif (token.isCancellationRequested || zipfile.entryCount === extractedEntriesCount) {\n\t\t\t\tc();\n\t\t\t} else {\n\t\t\t\te(new ExtractError('Incomplete', new Error(nls.localize('incompleteExtract', \"Incomplete. Found {0} of {1} entries\", extractedEntriesCount, zipfile.entryCount))));\n\t\t\t}\n\t\t}, e));\n\t\tzipfile.readEntry();\n\t\tzipfile.on('entry', (entry: Entry) => {\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!options.sourcePathRegex.test(entry.fileName)) {\n\t\t\t\treadNextEntry(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileName = entry.fileName.replace(options.sourcePathRegex, '');\n\n\t\t\t// directory file names end with '/'\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\t\tlast = createCancelablePromise(token => promises.mkdir(targetFileName, { recursive: true }).then(() => readNextEntry(token)).then(undefined, e));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stream = openZipStream(zipfile, entry);\n\t\t\tconst mode = modeFromEntry(entry);\n\n\t\t\tlast = createCancelablePromise(token => throttler.queue(() => stream.then(stream => extractEntry(stream, fileName, mode, targetPath, options, token).then(() => readNextEntry(token)))).then(null, e));\n\t\t});\n\t});\n}\n\nfunction openZip(zipFile: string, lazy: boolean = false): Promise<ZipFile> {\n\treturn new Promise<ZipFile>((resolve, reject) => {\n\t\t_openZip(zipFile, lazy ? { lazyEntries: true } : undefined!, (error?: Error, zipfile?: ZipFile) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(assertIsDefined(zipfile));\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction openZipStream(zipFile: ZipFile, entry: Entry): Promise<Readable> {\n\treturn new Promise<Readable>((resolve, reject) => {\n\t\tzipFile.openReadStream(entry, (error?: Error, stream?: Readable) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(assertIsDefined(stream));\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport function zip(zipPath: string, files: IFile[]): Promise<string> {\n\treturn new Promise<string>((c, e) => {\n\t\tconst zip = new yazl.ZipFile();\n\t\tfiles.forEach(f => {\n\t\t\tif (f.contents) {\n\t\t\t\tzip.addBuffer(typeof f.contents === 'string' ? Buffer.from(f.contents, 'utf8') : f.contents, f.path);\n\t\t\t} else if (f.localPath) {\n\t\t\t\tzip.addFile(f.localPath, f.path);\n\t\t\t}\n\t\t});\n\t\tzip.end();\n\n\t\tconst zipStream = createWriteStream(zipPath);\n\t\tzip.outputStream.pipe(zipStream);\n\n\t\tzip.outputStream.once('error', e);\n\t\tzipStream.once('error', e);\n\t\tzipStream.once('finish', () => c(zipPath));\n\t});\n}\n\nexport function extract(zipPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> {\n\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\n\tlet promise = openZip(zipPath, true);\n\n\tif (options.overwrite) {\n\t\tpromise = promise.then(zipfile => rimraf(targetPath).then(() => zipfile));\n\t}\n\n\treturn promise.then(zipfile => extractZip(zipfile, targetPath, { sourcePathRegex }, token));\n}\n\nfunction read(zipPath: string, filePath: string): Promise<Readable> {\n\treturn openZip(zipPath).then(zipfile => {\n\t\treturn new Promise<Readable>((c, e) => {\n\t\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\t\tif (entry.fileName === filePath) {\n\t\t\t\t\topenZipStream(zipfile, entry).then(stream => c(stream), err => e(err));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tzipfile.once('close', () => e(new Error(nls.localize('notFound', \"{0} not found inside zip.\", filePath))));\n\t\t});\n\t});\n}\n\nexport function buffer(zipPath: string, filePath: string): Promise<Buffer> {\n\treturn read(zipPath, filePath).then(stream => {\n\t\treturn new Promise<Buffer>((c, e) => {\n\t\t\tconst buffers: Buffer[] = [];\n\t\t\tstream.once('error', e);\n\t\t\tstream.on('data', (b: Buffer) => buffers.push(b));\n\t\t\tstream.on('end', () => c(Buffer.concat(buffers)));\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buffer } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport function getManifest(vsix: string): Promise<IExtensionManifest> {\n\treturn buffer(vsix, 'extension/package.json')\n\t\t.then(buffer => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString('utf8'));\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(localize('invalidManifest', \"VSIX invalid: package.json is not a JSON file.\"));\n\t\t\t}\n\t\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as pfs from 'vs/base/node/pfs';\nimport * as path from 'vs/base/common/path';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ILocalExtension, IGalleryMetadata, ExtensionManagementError } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionType, IExtensionManifest, IExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { areSameExtensions, ExtensionIdentifierWithVersion, groupByExtension, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { Limiter, Promises, Queue } from 'vs/base/common/async';\nimport { URI } from 'vs/base/common/uri';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { localizeManifest } from 'vs/platform/extensionManagement/common/extensionNls';\nimport { localize } from 'vs/nls';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { CancellationToken } from 'vscode';\nimport { extract, ExtractError } from 'vs/base/node/zip';\nimport { isWindows } from 'vs/base/common/platform';\nimport { flatten } from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { FileAccess } from 'vs/base/common/network';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { basename } from 'vs/base/common/resources';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { getErrorMessage } from 'vs/base/common/errors';\n\nconst ERROR_SCANNING_SYS_EXTENSIONS = 'scanningSystem';\nconst ERROR_SCANNING_USER_EXTENSIONS = 'scanningUser';\nconst INSTALL_ERROR_EXTRACTING = 'extracting';\nconst INSTALL_ERROR_DELETING = 'deleting';\nconst INSTALL_ERROR_RENAMING = 'renaming';\n\nexport type IMetadata = Partial<IGalleryMetadata & { isMachineScoped: boolean; isBuiltin: boolean; }>;\ntype IStoredMetadata = IMetadata & { installedTimestamp: number | undefined };\nexport type ILocalExtensionManifest = IExtensionManifest & { __metadata?: IMetadata };\ntype IRelaxedLocalExtension = Omit<ILocalExtension, 'isBuiltin'> & { isBuiltin: boolean };\n\nexport class ExtensionsScanner extends Disposable {\n\n\tprivate readonly systemExtensionsPath: string;\n\tprivate readonly extensionsPath: string;\n\tprivate readonly uninstalledPath: string;\n\tprivate readonly uninstalledFileLimiter: Queue<any>;\n\n\tconstructor(\n\t\tprivate readonly beforeRemovingExtension: (e: ILocalExtension) => Promise<void>,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t\tthis.systemExtensionsPath = environmentService.builtinExtensionsPath;\n\t\tthis.extensionsPath = environmentService.extensionsPath;\n\t\tthis.uninstalledPath = path.join(this.extensionsPath, '.obsolete');\n\t\tthis.uninstalledFileLimiter = new Queue();\n\t}\n\n\tasync cleanUp(): Promise<void> {\n\t\tawait this.removeUninstalledExtensions();\n\t\tawait this.removeOutdatedExtensions();\n\t}\n\n\tasync scanExtensions(type: ExtensionType | null): Promise<ILocalExtension[]> {\n\t\tconst promises: Promise<ILocalExtension[]>[] = [];\n\n\t\tif (type === null || type === ExtensionType.System) {\n\t\t\tpromises.push(this.scanSystemExtensions().then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_SYS_EXTENSIONS))));\n\t\t}\n\n\t\tif (type === null || type === ExtensionType.User) {\n\t\t\tpromises.push(this.scanUserExtensions(true).then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_USER_EXTENSIONS))));\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = await Promise.all(promises);\n\t\t\treturn flatten(result);\n\t\t} catch (error) {\n\t\t\tthrow this.joinErrors(error);\n\t\t}\n\t}\n\n\tasync scanUserExtensions(excludeOutdated: boolean): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning user extensions');\n\t\tlet [uninstalled, extensions] = await Promise.all([this.getUninstalledExtensions(), this.scanAllUserExtensions()]);\n\t\textensions = extensions.filter(e => !uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tif (excludeOutdated) {\n\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\textensions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0]);\n\t\t}\n\t\tthis.logService.trace('Scanned user extensions:', extensions.length);\n\t\treturn extensions;\n\t}\n\n\tasync scanAllUserExtensions(): Promise<ILocalExtension[]> {\n\t\treturn this.scanExtensionsInDirs(this.extensionsPath, this.environmentService.extraExtensionPaths, ExtensionType.User);\n\t}\n\n\tasync extractUserExtension(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst folderName = identifierWithVersion.key();\n\t\tconst tempPath = path.join(this.extensionsPath, `.${generateUuid()}`);\n\t\tconst extensionPath = path.join(this.extensionsPath, folderName);\n\n\t\ttry {\n\t\t\tawait pfs.rimraf(extensionPath);\n\t\t} catch (error) {\n\t\t\ttry {\n\t\t\t\tawait pfs.rimraf(extensionPath);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t\tthrow new ExtensionManagementError(localize('errorDeleting', \"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again\", extensionPath, identifierWithVersion.id), INSTALL_ERROR_DELETING);\n\t\t}\n\n\t\tawait this.extractAtLocation(identifierWithVersion, zipPath, tempPath, token);\n\t\tlet local = await this.scanExtension(URI.file(tempPath), ExtensionType.User);\n\t\tif (!local) {\n\t\t\tthrow new Error(localize('cannot read', \"Cannot read the extension from {0}\", tempPath));\n\t\t}\n\t\tawait this.storeMetadata(local, { installedTimestamp: Date.now() });\n\n\t\ttry {\n\t\t\tawait this.rename(identifierWithVersion, tempPath, extensionPath, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */);\n\t\t\tthis.logService.info('Renamed to', extensionPath);\n\t\t} catch (error) {\n\t\t\ttry {\n\t\t\t\tawait pfs.rimraf(tempPath);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t\tif (error.code === 'ENOTEMPTY') {\n\t\t\t\tthis.logService.info(`Rename failed because extension was installed by another source. So ignoring renaming.`, identifierWithVersion.id);\n\t\t\t} else {\n\t\t\t\tthis.logService.info(`Rename failed because of ${getErrorMessage(error)}. Deleted from extracted location`, tempPath);\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tlocal = await this.scanExtension(URI.file(extensionPath), ExtensionType.User);\n\t\t} catch (e) { /*ignore */ }\n\n\t\tif (local) {\n\t\t\treturn local;\n\t\t}\n\t\tthrow new Error(localize('cannot read', \"Cannot read the extension from {0}\", this.extensionsPath));\n\t}\n\n\tasync saveMetadataForLocalExtension(local: ILocalExtension, metadata: IMetadata): Promise<ILocalExtension> {\n\t\tthis.setMetadata(local, metadata);\n\t\tawait this.storeMetadata(local, { ...metadata, installedTimestamp: local.installedTimestamp });\n\t\treturn local;\n\t}\n\n\tprivate async storeMetadata(local: ILocalExtension, storedMetadata: IStoredMetadata): Promise<ILocalExtension> {\n\t\t// unset if false\n\t\tstoredMetadata.isMachineScoped = storedMetadata.isMachineScoped || undefined;\n\t\tstoredMetadata.isBuiltin = storedMetadata.isBuiltin || undefined;\n\t\tstoredMetadata.installedTimestamp = storedMetadata.installedTimestamp || undefined;\n\t\tconst manifestPath = path.join(local.location.fsPath, 'package.json');\n\t\tconst raw = await fs.promises.readFile(manifestPath, 'utf8');\n\t\tconst { manifest } = await this.parseManifest(raw);\n\t\t(manifest as ILocalExtensionManifest).__metadata = storedMetadata;\n\t\tawait pfs.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t'));\n\t\treturn local;\n\t}\n\n\tgetUninstalledExtensions(): Promise<IStringDictionary<boolean>> {\n\t\treturn this.withUninstalledExtensions();\n\t}\n\n\tasync setUninstalled(...extensions: ILocalExtension[]): Promise<void> {\n\t\tconst ids: ExtensionIdentifierWithVersion[] = extensions.map(e => new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version));\n\t\tawait this.withUninstalledExtensions(uninstalled => {\n\t\t\tids.forEach(id => uninstalled[id.key()] = true);\n\t\t});\n\t}\n\n\tasync setInstalled(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\tawait this.withUninstalledExtensions(uninstalled => delete uninstalled[identifierWithVersion.key()]);\n\t\tconst installed = await this.scanExtensions(ExtensionType.User);\n\t\tconst localExtension = installed.find(i => new ExtensionIdentifierWithVersion(i.identifier, i.manifest.version).equals(identifierWithVersion)) || null;\n\t\tif (!localExtension) {\n\t\t\treturn null;\n\t\t}\n\t\tawait this.storeMetadata(localExtension, { installedTimestamp: Date.now() });\n\t\treturn this.scanExtension(localExtension.location, ExtensionType.User);\n\t}\n\n\tprivate async withUninstalledExtensions(updateFn?: (uninstalled: IStringDictionary<boolean>) => void): Promise<IStringDictionary<boolean>> {\n\t\treturn this.uninstalledFileLimiter.queue(async () => {\n\t\t\tlet raw: string | undefined;\n\t\t\ttry {\n\t\t\t\traw = await fs.promises.readFile(this.uninstalledPath, 'utf8');\n\t\t\t} catch (err) {\n\t\t\t\tif (err.code !== 'ENOENT') {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet uninstalled = {};\n\t\t\tif (raw) {\n\t\t\t\ttry {\n\t\t\t\t\tuninstalled = JSON.parse(raw);\n\t\t\t\t} catch (e) { /* ignore */ }\n\t\t\t}\n\n\t\t\tif (updateFn) {\n\t\t\t\tupdateFn(uninstalled);\n\t\t\t\tif (Object.keys(uninstalled).length) {\n\t\t\t\t\tawait pfs.writeFile(this.uninstalledPath, JSON.stringify(uninstalled));\n\t\t\t\t} else {\n\t\t\t\t\tawait pfs.rimraf(this.uninstalledPath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tasync removeExtension(extension: ILocalExtension, type: string): Promise<void> {\n\t\tthis.logService.trace(`Deleting ${type} extension from disk`, extension.identifier.id, extension.location.fsPath);\n\t\tawait pfs.rimraf(extension.location.fsPath);\n\t\tthis.logService.info('Deleted from disk', extension.identifier.id, extension.location.fsPath);\n\t}\n\n\tasync removeUninstalledExtension(extension: ILocalExtension): Promise<void> {\n\t\tawait this.removeExtension(extension, 'uninstalled');\n\t\tawait this.withUninstalledExtensions(uninstalled => delete uninstalled[new ExtensionIdentifierWithVersion(extension.identifier, extension.manifest.version).key()]);\n\t}\n\n\tprivate async extractAtLocation(identifier: IExtensionIdentifier, zipPath: string, location: string, token: CancellationToken): Promise<void> {\n\t\tthis.logService.trace(`Started extracting the extension from ${zipPath} to ${location}`);\n\n\t\t// Clean the location\n\t\ttry {\n\t\t\tawait pfs.rimraf(location);\n\t\t} catch (e) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(e).message, INSTALL_ERROR_DELETING);\n\t\t}\n\n\t\ttry {\n\t\t\tawait extract(zipPath, location, { sourcePath: 'extension', overwrite: true }, token);\n\t\t\tthis.logService.info(`Extracted extension to ${location}:`, identifier.id);\n\t\t} catch (e) {\n\t\t\ttry { await pfs.rimraf(location); } catch (e) { /* Ignore */ }\n\t\t\tthrow new ExtensionManagementError(e.message, e instanceof ExtractError && e.type ? e.type : INSTALL_ERROR_EXTRACTING);\n\t\t}\n\t}\n\n\tprivate async rename(identifier: IExtensionIdentifier, extractPath: string, renamePath: string, retryUntil: number): Promise<void> {\n\t\ttry {\n\t\t\tawait fs.promises.rename(extractPath, renamePath);\n\t\t} catch (error) {\n\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\tthis.logService.info(`Failed renaming ${extractPath} to ${renamePath} with 'EPERM' error. Trying again...`, identifier.id);\n\t\t\t\treturn this.rename(identifier, extractPath, renamePath, retryUntil);\n\t\t\t}\n\t\t\tthrow new ExtensionManagementError(error.message || localize('renameError', \"Unknown error while renaming {0} to {1}\", extractPath, renamePath), error.code || INSTALL_ERROR_RENAMING);\n\t\t}\n\t}\n\n\tprivate async scanSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning system extensions');\n\t\tconst systemExtensionsPromise = this.scanDefaultSystemExtensions();\n\t\tif (this.environmentService.isBuilt) {\n\t\t\treturn systemExtensionsPromise;\n\t\t}\n\n\t\t// Scan other system extensions during development\n\t\tconst devSystemExtensionsPromise = this.scanDevSystemExtensions();\n\t\tconst [systemExtensions, devSystemExtensions] = await Promise.all([systemExtensionsPromise, devSystemExtensionsPromise]);\n\t\treturn [...systemExtensions, ...devSystemExtensions];\n\t}\n\n\n\tprivate async scanExtensionsInDir(dir: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\tconst limiter = new Limiter<any>(10);\n\t\tconst stat = await this.fileService.resolve(URI.file(dir));\n\t\tif (stat.children) {\n\t\t\tconst extensions = await Promise.all<ILocalExtension>(stat.children.filter(c => c.isDirectory)\n\t\t\t\t.map(c => limiter.queue(async () => {\n\t\t\t\t\tif (type === ExtensionType.User && basename(c.resource).indexOf('.') === 0) { // Do not consider user extension folder starting with `.`\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.scanExtension(c.resource, type);\n\t\t\t\t})));\n\t\t\treturn extensions.filter(e => e && e.identifier);\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async scanExtension(extensionLocation: URI, type: ExtensionType): Promise<ILocalExtension | null> {\n\t\ttry {\n\t\t\tconst stat = await this.fileService.resolve(extensionLocation);\n\t\t\tif (stat.children) {\n\t\t\t\tconst { manifest, metadata } = await this.readManifest(extensionLocation.fsPath);\n\t\t\t\tconst readmeUrl = stat.children.find(({ name }) => /^readme(\\.txt|\\.md|)$/i.test(name))?.resource;\n\t\t\t\tconst changelogUrl = stat.children.find(({ name }) => /^changelog(\\.txt|\\.md|)$/i.test(name))?.resource;\n\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\t\tconst local = <ILocalExtension>{ type, identifier, manifest, location: extensionLocation, readmeUrl, changelogUrl, publisherDisplayName: null, publisherId: null, isMachineScoped: false, isBuiltin: type === ExtensionType.System };\n\t\t\t\tif (metadata) {\n\t\t\t\t\tthis.setMetadata(local, metadata);\n\t\t\t\t\tlocal.installedTimestamp = metadata.installedTimestamp;\n\t\t\t\t}\n\t\t\t\treturn local;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (type !== ExtensionType.System) {\n\t\t\t\tthis.logService.trace(e);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async scanDefaultSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tconst result = await this.scanExtensionsInDirs(this.systemExtensionsPath, this.environmentService.extraBuiltinExtensionPaths, ExtensionType.System);\n\t\tthis.logService.trace('Scanned system extensions:', result.length);\n\t\treturn result;\n\t}\n\n\tprivate async scanDevSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tconst devSystemExtensionsList = this.getDevSystemExtensionsList();\n\t\tif (devSystemExtensionsList.length) {\n\t\t\tconst result = await this.scanExtensionsInDir(this.devSystemExtensionsPath, ExtensionType.System);\n\t\t\tthis.logService.trace('Scanned dev system extensions:', result.length);\n\t\t\treturn result.filter(r => devSystemExtensionsList.some(id => areSameExtensions(r.identifier, { id })));\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate setMetadata(local: IRelaxedLocalExtension, metadata: IMetadata): void {\n\t\tlocal.publisherDisplayName = metadata.publisherDisplayName || null;\n\t\tlocal.publisherId = metadata.publisherId || null;\n\t\tlocal.identifier.uuid = metadata.id;\n\t\tlocal.isMachineScoped = !!metadata.isMachineScoped;\n\t\tlocal.isBuiltin = local.type === ExtensionType.System || !!metadata.isBuiltin;\n\t}\n\n\tprivate async removeUninstalledExtensions(): Promise<void> {\n\t\tconst uninstalled = await this.getUninstalledExtensions();\n\t\tconst extensions = await this.scanAllUserExtensions(); // All user extensions\n\t\tconst installed: Set<string> = new Set<string>();\n\t\tfor (const e of extensions) {\n\t\t\tif (!uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]) {\n\t\t\t\tinstalled.add(e.identifier.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\tawait Promises.settled(byExtension.map(async e => {\n\t\t\tconst latest = e.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0];\n\t\t\tif (!installed.has(latest.identifier.id.toLowerCase())) {\n\t\t\t\tawait this.beforeRemovingExtension(latest);\n\t\t\t}\n\t\t}));\n\t\tconst toRemove: ILocalExtension[] = extensions.filter(e => uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tawait Promises.settled(toRemove.map(e => this.removeUninstalledExtension(e)));\n\t}\n\n\tprivate async removeOutdatedExtensions(): Promise<void> {\n\t\tconst extensions = await this.scanAllUserExtensions();\n\t\tconst toRemove: ILocalExtension[] = [];\n\n\t\t// Outdated extensions\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\ttoRemove.push(...flatten(byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version)).slice(1))));\n\n\t\tawait Promises.settled(toRemove.map(extension => this.removeExtension(extension, 'outdated')));\n\t}\n\n\tprivate getDevSystemExtensionsList(): string[] {\n\t\treturn (this.productService.builtInExtensions || []).map(e => e.name);\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate _devSystemExtensionsPath: string | null = null;\n\tprivate get devSystemExtensionsPath(): string {\n\t\tif (!this._devSystemExtensionsPath) {\n\t\t\tthis._devSystemExtensionsPath = path.normalize(path.join(FileAccess.asFileUri('', require).fsPath, '..', '.build', 'builtInExtensions'));\n\t\t}\n\t\treturn this._devSystemExtensionsPath;\n\t}\n\n\tprivate async readManifest(extensionPath: string): Promise<{ manifest: IExtensionManifest; metadata: IStoredMetadata | null; }> {\n\t\tconst promises = [\n\t\t\tfs.promises.readFile(path.join(extensionPath, 'package.json'), 'utf8')\n\t\t\t\t.then(raw => this.parseManifest(raw)),\n\t\t\tfs.promises.readFile(path.join(extensionPath, 'package.nls.json'), 'utf8')\n\t\t\t\t.then(undefined, err => err.code !== 'ENOENT' ? Promise.reject<string>(err) : '{}')\n\t\t\t\t.then(raw => JSON.parse(raw))\n\t\t];\n\n\t\tconst [{ manifest, metadata }, translations] = await Promise.all(promises);\n\t\treturn {\n\t\t\tmanifest: localizeManifest(manifest, translations),\n\t\t\tmetadata\n\t\t};\n\t}\n\n\tprivate parseManifest(raw: string): Promise<{ manifest: IExtensionManifest; metadata: IMetadata | null; }> {\n\t\treturn new Promise((c, e) => {\n\t\t\ttry {\n\t\t\t\tconst manifest = JSON.parse(raw);\n\t\t\t\tconst metadata = manifest.__metadata || null;\n\t\t\t\tc({ manifest, metadata });\n\t\t\t} catch (err) {\n\t\t\t\te(new Error(localize('invalidManifest', \"Extension invalid: package.json is not a JSON file.\")));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async scanExtensionsInDirs(dir: string, dirs: string[], type: ExtensionType): Promise<ILocalExtension[]>{\n\t\tconst results = await Promise.all([dir, ...dirs].map((path) => this.scanExtensionsInDir(path, type)));\n\t\treturn results.reduce((flat, current) => flat.concat(current), []);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { toDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { zip, IFile } from 'vs/base/node/zip';\nimport {\n\tIExtensionManagementService, IExtensionGalleryService, ILocalExtension,\n\tIGalleryExtension, IGalleryMetadata,\n\tInstallExtensionEvent, DidInstallExtensionEvent, DidUninstallExtensionEvent,\n\tStatisticType,\n\tIExtensionIdentifier,\n\tIReportedExtension,\n\tInstallOperation,\n\tINSTALL_ERROR_MALICIOUS,\n\tINSTALL_ERROR_INCOMPATIBLE,\n\tExtensionManagementError,\n\tInstallOptions,\n\tUninstallOptions\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, getGalleryExtensionId, getMaliciousExtensionsSet, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData, ExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createCancelablePromise, CancelablePromise, Promises } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { URI } from 'vs/base/common/uri';\nimport product from 'vs/platform/product/common/product';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtensionsManifestCache } from 'vs/platform/extensionManagement/node/extensionsManifestCache';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { joinPath } from 'vs/base/common/resources';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { optional, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Schemas } from 'vs/base/common/network';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionsDownloader } from 'vs/platform/extensionManagement/node/extensionDownloader';\nimport { ExtensionsScanner, ILocalExtensionManifest, IMetadata } from 'vs/platform/extensionManagement/node/extensionsScanner';\nimport { ExtensionsLifecycle } from 'vs/platform/extensionManagement/node/extensionLifecycle';\nimport { ExtensionsWatcher } from 'vs/platform/extensionManagement/node/extensionsWatcher';\nimport { IFileService } from 'vs/platform/files/common/files';\n\nconst INSTALL_ERROR_UNSET_UNINSTALLED = 'unsetUninstalled';\nconst INSTALL_ERROR_DOWNLOADING = 'downloading';\nconst INSTALL_ERROR_VALIDATING = 'validating';\nconst INSTALL_ERROR_LOCAL = 'local';\nconst ERROR_UNKNOWN = 'unknown';\n\ninterface InstallableExtension {\n\tzipPath: string;\n\tidentifierWithVersion: ExtensionIdentifierWithVersion;\n\tmetadata?: IMetadata;\n}\n\nexport class ExtensionManagementService extends Disposable implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly extensionsScanner: ExtensionsScanner;\n\tprivate reportedExtensions: Promise<IReportedExtension[]> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions = new Map<string, CancelablePromise<ILocalExtension>>();\n\tprivate readonly uninstallingExtensions: Map<string, CancelablePromise<void>> = new Map<string, CancelablePromise<void>>();\n\tprivate readonly manifestCache: ExtensionsManifestCache;\n\tprivate readonly extensionsDownloader: ExtensionsDownloader;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\treadonly onInstallExtension: Event<InstallExtensionEvent> = this._onInstallExtension.event;\n\n\tprivate readonly _onDidInstallExtension = this._register(new Emitter<DidInstallExtensionEvent>());\n\treadonly onDidInstallExtension: Event<DidInstallExtensionEvent> = this._onDidInstallExtension.event;\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<IExtensionIdentifier>());\n\treadonly onUninstallExtension: Event<IExtensionIdentifier> = this._onUninstallExtension.event;\n\n\tprivate _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent> = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@optional(IDownloadService) private downloadService: IDownloadService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IFileService fileService: IFileService,\n\t) {\n\t\tsuper();\n\t\tconst extensionLifecycle = this._register(instantiationService.createInstance(ExtensionsLifecycle));\n\t\tthis.extensionsScanner = this._register(instantiationService.createInstance(ExtensionsScanner, extension => extensionLifecycle.postUninstall(extension)));\n\t\tthis.manifestCache = this._register(new ExtensionsManifestCache(environmentService, this));\n\t\tthis.extensionsDownloader = this._register(instantiationService.createInstance(ExtensionsDownloader));\n\t\tconst extensionsWatcher = this._register(new ExtensionsWatcher(this, fileService, environmentService, logService));\n\n\t\tthis._register(extensionsWatcher.onDidChangeExtensionsByAnotherSource(({ added, removed }) => {\n\t\t\tadded.forEach(extension => this._onDidInstallExtension.fire({ identifier: extension.identifier, operation: InstallOperation.None, local: extension }));\n\t\t\tremoved.forEach(extension => this._onDidUninstallExtension.fire({ identifier: extension }));\n\t\t}));\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tasync zip(extension: ILocalExtension): Promise<URI> {\n\t\tthis.logService.trace('ExtensionManagementService#zip', extension.identifier.id);\n\t\tconst files = await this.collectFiles(extension);\n\t\tconst location = await zip(joinPath(this.environmentService.tmpDir, generateUuid()).fsPath, files);\n\t\treturn URI.file(location);\n\t}\n\n\tasync unzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#unzip', zipLocation.toString());\n\t\tconst local = await this.install(zipLocation);\n\t\treturn local.identifier;\n\t}\n\n\tasync getManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\t\treturn getManifest(zipPath);\n\t}\n\n\tprivate async collectFiles(extension: ILocalExtension): Promise<IFile[]> {\n\n\t\tconst collectFilesFromDirectory = async (dir: string): Promise<string[]> => {\n\t\t\tlet entries = await pfs.readdir(dir);\n\t\t\tentries = entries.map(e => path.join(dir, e));\n\t\t\tconst stats = await Promise.all(entries.map(e => fs.promises.stat(e)));\n\t\t\tlet promise: Promise<string[]> = Promise.resolve([]);\n\t\t\tstats.forEach((stat, index) => {\n\t\t\t\tconst entry = entries[index];\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tpromise = promise.then(result => ([...result, entry]));\n\t\t\t\t}\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tpromise = promise\n\t\t\t\t\t\t.then(result => collectFilesFromDirectory(entry)\n\t\t\t\t\t\t\t.then(files => ([...result, ...files])));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tconst files = await collectFilesFromDirectory(extension.location.fsPath);\n\t\treturn files.map(f => (<IFile>{ path: `extension/${path.relative(extension.location.fsPath, f)}`, localPath: f }));\n\t}\n\n\tasync install(vsix: URI, options: InstallOptions = {}): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#install', vsix.toString());\n\t\treturn createCancelablePromise(async token => {\n\n\t\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\tif (manifest.engines && manifest.engines.vscode && !isEngineValid(manifest.engines.vscode, product.version)) {\n\t\t\t\tthrow new Error(nls.localize('incompatible', \"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.\", identifier.id, product.version));\n\t\t\t}\n\n\t\t\tconst identifierWithVersion = new ExtensionIdentifierWithVersion(identifier, manifest.version);\n\t\t\tconst installedExtensions = await this.getInstalled(ExtensionType.User);\n\t\t\tconst existing = installedExtensions.find(i => areSameExtensions(identifier, i.identifier));\n\t\t\tif (existing) {\n\t\t\t\toptions.isMachineScoped = options.isMachineScoped || existing.isMachineScoped;\n\t\t\t\toptions.isBuiltin = options.isBuiltin || existing.isBuiltin;\n\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\tif (identifierWithVersion.equals(new ExtensionIdentifierWithVersion(existing.identifier, existing.manifest.version))) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name));\n\t\t\t\t\t}\n\t\t\t\t} else if (semver.gt(existing.manifest.version, manifest.version)) {\n\t\t\t\t\tawait this.uninstallExtension(existing);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Remove the extension with same version if it is already uninstalled.\n\t\t\t\t// Installing a VSIX extension shall replace the existing extension always.\n\t\t\t\tconst existing = await this.unsetUninstalledAndGetLocal(identifierWithVersion);\n\t\t\t\tif (existing) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.logService.info('Installing the extension:', identifier.id);\n\t\t\tthis._onInstallExtension.fire({ identifier, zipPath });\n\n\t\t\tlet metadata: IGalleryMetadata | undefined;\n\t\t\ttry {\n\t\t\t\tmetadata = await this.getGalleryMetadata(getGalleryExtensionId(manifest.publisher, manifest.name));\n\t\t\t} catch (e) { /* Ignore */ }\n\n\t\t\ttry {\n\t\t\t\tconst local = await this.installFromZipPath(identifierWithVersion, zipPath, { ...(metadata || {}), ...options }, options, operation, token);\n\t\t\t\tthis.logService.info('Successfully installed the extension:', identifier.id);\n\t\t\t\treturn local;\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error('Failed to install the extension:', identifier.id, e.message);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async downloadVsix(vsix: URI): Promise<URI> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn vsix;\n\t\t}\n\t\tif (!this.downloadService) {\n\t\t\tthrow new Error('Download service is not available');\n\t\t}\n\n\t\tconst downloadedLocation = joinPath(this.environmentService.tmpDir, generateUuid());\n\t\tawait this.downloadService.download(vsix, downloadedLocation);\n\t\treturn downloadedLocation;\n\t}\n\n\tprivate async installFromZipPath(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, metadata: IMetadata | undefined, options: InstallOptions, operation: InstallOperation, token: CancellationToken): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tconst local = await this.installExtension({ zipPath, identifierWithVersion, metadata }, token);\n\t\t\ttry {\n\t\t\t\tawait this.installDependenciesAndPackExtensions(local, undefined, options);\n\t\t\t} catch (error) {\n\t\t\t\tif (isNonEmptyArray(local.manifest.extensionDependencies)) {\n\t\t\t\t\tthis.logService.warn(`Cannot install dependencies of extension:`, local.identifier.id, error.message);\n\t\t\t\t}\n\t\t\t\tif (isNonEmptyArray(local.manifest.extensionPack)) {\n\t\t\t\t\tthis.logService.warn(`Cannot install packed extensions of extension:`, local.identifier.id, error.message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onDidInstallExtension.fire({ identifier: identifierWithVersion, zipPath, local, operation });\n\t\t\treturn local;\n\t\t} catch (error) {\n\t\t\tthis._onDidInstallExtension.fire({ identifier: identifierWithVersion, zipPath, operation, error });\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn true;\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension, options: InstallOptions = {}): Promise<ILocalExtension> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\tthrow new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"));\n\t\t}\n\n\t\ttry {\n\t\t\textension = await this.checkAndGetCompatibleVersion(extension);\n\t\t} catch (error) {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(InstallOperation.Install), getGalleryExtensionTelemetryData(extension), undefined, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst key = new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key();\n\t\tlet cancellablePromise = this.installingExtensions.get(key);\n\t\tif (!cancellablePromise) {\n\t\t\tcancellablePromise = createCancelablePromise(token => this.doInstallFromGallery(extension, options, token));\n\t\t\tthis.installingExtensions.set(key, cancellablePromise);\n\t\t\tcancellablePromise.finally(() => this.installingExtensions.delete(key));\n\t\t}\n\n\t\treturn cancellablePromise;\n\t}\n\n\tprivate async doInstallFromGallery(extension: IGalleryExtension, options: InstallOptions, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst startTime = new Date().getTime();\n\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\tthis.logService.info('Installing extension:', extension.identifier.id);\n\t\tthis._onInstallExtension.fire({ identifier: extension.identifier, gallery: extension });\n\n\t\ttry {\n\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\t\tconst existingExtension = installed.find(i => areSameExtensions(i.identifier, extension.identifier));\n\t\t\tif (existingExtension) {\n\t\t\t\toperation = InstallOperation.Update;\n\t\t\t}\n\n\t\t\tconst installableExtension = await this.downloadInstallableExtension(extension, operation);\n\t\t\tinstallableExtension.metadata.isMachineScoped = options.isMachineScoped || existingExtension?.isMachineScoped;\n\t\t\tinstallableExtension.metadata.isBuiltin = options.isBuiltin || existingExtension?.isBuiltin;\n\t\t\tconst local = await this.installExtension(installableExtension, token);\n\n\t\t\ttry { await this.extensionsDownloader.delete(URI.file(installableExtension.zipPath)); } catch (error) { /* Ignore */ }\n\n\t\t\tif (!options.donotIncludePackAndDependencies) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.installDependenciesAndPackExtensions(local, existingExtension, options);\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttry { await this.uninstall(local); } catch (error) { /* Ignore */ }\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingExtension && semver.neq(existingExtension.manifest.version, extension.version)) {\n\t\t\t\tawait this.extensionsScanner.setUninstalled(existingExtension);\n\t\t\t}\n\n\t\t\tthis.logService.info(`Extensions installed successfully:`, extension.identifier.id);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, local, operation });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, undefined);\n\t\t\treturn local;\n\n\t\t} catch (error) {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, operation, error: errorCode });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension): Promise<IGalleryExtension> {\n\t\tif (await this.isMalicious(extension)) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('malicious extension', \"Can't install extension since it was reported to be problematic.\"), INSTALL_ERROR_MALICIOUS);\n\t\t}\n\n\t\tconst compatibleExtension = await this.galleryService.getCompatibleExtension(extension);\n\t\tif (!compatibleExtension) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Unable to install '{0}' extension because it is not compatible with the current version of VS Code (version {1}).\", extension.identifier.id, product.version), INSTALL_ERROR_INCOMPATIBLE);\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\tasync reinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#reinstallFromGallery', extension.identifier.id);\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\tthrow new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"));\n\t\t}\n\n\t\tconst galleryExtension = await this.findGalleryExtension(extension);\n\t\tif (!galleryExtension) {\n\t\t\tthrow new Error(nls.localize('Not a Marketplace extension', \"Only Marketplace Extensions can be reinstalled\"));\n\t\t}\n\n\t\tawait this.extensionsScanner.setUninstalled(extension);\n\t\ttry {\n\t\t\tawait this.extensionsScanner.removeUninstalledExtension(extension);\n\t\t} catch (e) {\n\t\t\tthrow new Error(nls.localize('removeError', \"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.\", toErrorMessage(e)));\n\t\t}\n\n\t\tawait this.installFromGallery(galleryExtension);\n\t}\n\n\tprivate getTelemetryEvent(operation: InstallOperation): string {\n\t\treturn operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install';\n\t}\n\n\tprivate async isMalicious(extension: IGalleryExtension): Promise<boolean> {\n\t\tconst report = await this.getExtensionsReport();\n\t\treturn getMaliciousExtensionsSet(report).has(extension.identifier.id);\n\t}\n\n\tprivate async downloadInstallableExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<Required<InstallableExtension>> {\n\t\tconst metadata = <IGalleryMetadata>{\n\t\t\tid: extension.identifier.uuid,\n\t\t\tpublisherId: extension.publisherId,\n\t\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\t};\n\n\t\tlet zipPath: string | undefined;\n\t\ttry {\n\t\t\tthis.logService.trace('Started downloading extension:', extension.identifier.id);\n\t\t\tzipPath = (await this.extensionsDownloader.downloadExtension(extension, operation)).fsPath;\n\t\t\tthis.logService.info('Downloaded extension:', extension.identifier.id, zipPath);\n\t\t} catch (error) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_DOWNLOADING);\n\t\t}\n\n\t\ttry {\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn (<Required<InstallableExtension>>{ zipPath, identifierWithVersion: new ExtensionIdentifierWithVersion(extension.identifier, manifest.version), metadata });\n\t\t} catch (error) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_VALIDATING);\n\t\t}\n\t}\n\n\tprivate async installExtension(installableExtension: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tconst local = await this.unsetUninstalledAndGetLocal(installableExtension.identifierWithVersion);\n\t\t\tif (local) {\n\t\t\t\treturn installableExtension.metadata ? this.extensionsScanner.saveMetadataForLocalExtension(local, installableExtension.metadata) : local;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (isMacintosh) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('quitCode', \"Unable to install the extension. Please Quit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED);\n\t\t\t} else {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('exitCode', \"Unable to install the extension. Please Exit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED);\n\t\t\t}\n\t\t}\n\t\treturn this.extractAndInstall(installableExtension, token);\n\t}\n\n\tprivate async unsetUninstalledAndGetLocal(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\tconst isUninstalled = await this.isUninstalled(identifierWithVersion);\n\t\tif (!isUninstalled) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.logService.trace('Removing the extension from uninstalled list:', identifierWithVersion.id);\n\t\t// If the same version of extension is marked as uninstalled, remove it from there and return the local.\n\t\tconst local = await this.extensionsScanner.setInstalled(identifierWithVersion);\n\t\tthis.logService.info('Removed the extension from uninstalled list:', identifierWithVersion.id);\n\n\t\treturn local;\n\t}\n\n\tprivate async extractAndInstall({ zipPath, identifierWithVersion, metadata }: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\tlet local = await this.extensionsScanner.extractUserExtension(identifierWithVersion, zipPath, token);\n\t\tthis.logService.info('Installation completed.', identifierWithVersion.id);\n\t\tif (metadata) {\n\t\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, metadata);\n\t\t}\n\t\treturn local;\n\t}\n\n\tprivate async installDependenciesAndPackExtensions(installed: ILocalExtension, existing: ILocalExtension | undefined, options: InstallOptions): Promise<void> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tconst dependenciesAndPackExtensions: string[] = installed.manifest.extensionDependencies || [];\n\t\tif (installed.manifest.extensionPack) {\n\t\t\tfor (const extension of installed.manifest.extensionPack) {\n\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\tconst installed = await this.getInstalled();\n\t\t\t// filter out installed extensions\n\t\t\tconst names = dependenciesAndPackExtensions.filter(id => installed.every(({ identifier: galleryIdentifier }) => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\tif (names.length) {\n\t\t\t\tconst galleryResult = await this.galleryService.query({ names, pageSize: dependenciesAndPackExtensions.length }, CancellationToken.None);\n\t\t\t\tconst extensionsToInstall = galleryResult.firstPage;\n\t\t\t\ttry {\n\t\t\t\t\tawait Promises.settled(extensionsToInstall.map(e => this.installFromGallery(e, options)));\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttry { await this.rollback(extensionsToInstall); } catch (e) { /* ignore */ }\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async rollback(extensions: IGalleryExtension[]): Promise<void> {\n\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\tconst extensionsToUninstall = installed.filter(local => extensions.some(galleryExtension => new ExtensionIdentifierWithVersion(local.identifier, local.manifest.version).equals(new ExtensionIdentifierWithVersion(galleryExtension.identifier, galleryExtension.version)))); // Check with version because we want to rollback the exact version\n\t\tawait Promises.settled(extensionsToUninstall.map(local => this.uninstall(local)));\n\t}\n\n\tasync uninstall(extension: ILocalExtension, options: UninstallOptions = {}): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\tconst extensionToUninstall = installed.find(e => areSameExtensions(e.identifier, extension.identifier));\n\t\tif (!extensionToUninstall) {\n\t\t\tthrow new Error(nls.localize('notInstalled', \"Extension '{0}' is not installed.\", extension.manifest.displayName || extension.manifest.name));\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.checkForDependenciesAndUninstall(extensionToUninstall, installed, options);\n\t\t} catch (error) {\n\t\t\tthrow this.joinErrors(error);\n\t\t}\n\t}\n\n\tasync updateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateMetadata', local.identifier.id);\n\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, { ...((<ILocalExtensionManifest>local.manifest).__metadata || {}), ...metadata });\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tasync updateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateExtensionScope', local.identifier.id);\n\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, { ...((<ILocalExtensionManifest>local.manifest).__metadata || {}), isMachineScoped });\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tprivate async getGalleryMetadata(extensionName: string): Promise<IGalleryMetadata | undefined> {\n\t\tconst galleryExtension = await this.findGalleryExtensionByName(extensionName);\n\t\treturn galleryExtension ? <IGalleryMetadata>{ id: galleryExtension.identifier.uuid, publisherDisplayName: galleryExtension.publisherDisplayName, publisherId: galleryExtension.publisherId } : undefined;\n\t}\n\n\tprivate async findGalleryExtension(local: ILocalExtension): Promise<IGalleryExtension> {\n\t\tif (local.identifier.uuid) {\n\t\t\tconst galleryExtension = await this.findGalleryExtensionById(local.identifier.uuid);\n\t\t\treturn galleryExtension ? galleryExtension : this.findGalleryExtensionByName(local.identifier.id);\n\t\t}\n\t\treturn this.findGalleryExtensionByName(local.identifier.id);\n\t}\n\n\tprivate async findGalleryExtensionById(uuid: string): Promise<IGalleryExtension> {\n\t\tconst galleryResult = await this.galleryService.query({ ids: [uuid], pageSize: 1 }, CancellationToken.None);\n\t\treturn galleryResult.firstPage[0];\n\t}\n\n\tprivate async findGalleryExtensionByName(name: string): Promise<IGalleryExtension> {\n\t\tconst galleryResult = await this.galleryService.query({ names: [name], pageSize: 1 }, CancellationToken.None);\n\t\treturn galleryResult.firstPage[0];\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate async checkForDependenciesAndUninstall(extension: ILocalExtension, installed: ILocalExtension[], options: UninstallOptions): Promise<void> {\n\t\ttry {\n\t\t\tawait this.preUninstallExtension(extension);\n\t\t\tconst packedExtensions = options.donotIncludePack ? [] : this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\tawait this.uninstallExtensions(extension, packedExtensions, installed, options);\n\t\t} catch (error) {\n\t\t\tawait this.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\tthrow error;\n\t\t}\n\t\tawait this.postUninstallExtension(extension);\n\t}\n\n\tprivate async uninstallExtensions(extension: ILocalExtension, otherExtensionsToUninstall: ILocalExtension[], installed: ILocalExtension[], options: UninstallOptions): Promise<void> {\n\t\tconst extensionsToUninstall = [extension, ...otherExtensionsToUninstall];\n\t\tif (!options.donotCheckDependents) {\n\t\t\tfor (const e of extensionsToUninstall) {\n\t\t\t\tthis.checkForDependents(e, extensionsToUninstall, installed, extension);\n\t\t\t}\n\t\t}\n\t\tawait Promises.settled([this.uninstallExtension(extension), ...otherExtensionsToUninstall.map(d => this.doUninstall(d))]);\n\t}\n\n\tprivate checkForDependents(extension: ILocalExtension, extensionsToUninstall: ILocalExtension[], installed: ILocalExtension[], extensionToUninstall: ILocalExtension): void {\n\t\tconst dependents = this.getDependents(extension, installed);\n\t\tif (dependents.length) {\n\t\t\tconst remainingDependents = dependents.filter(dependent => extensionsToUninstall.indexOf(dependent) === -1);\n\t\t\tif (remainingDependents.length) {\n\t\t\t\tthrow new Error(this.getDependentsErrorMessage(extension, remainingDependents, extensionToUninstall));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getDependentsErrorMessage(dependingExtension: ILocalExtension, dependents: ILocalExtension[], extensionToUninstall: ILocalExtension): string {\n\t\tif (extensionToUninstall === dependingExtension) {\n\t\t\tif (dependents.length === 1) {\n\t\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall '{0}' extension. '{1}' extension depends on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t\t}\n\t\t\tif (dependents.length === 2) {\n\t\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall '{0}' extension. '{1}' and '{2}' extensions depend on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t\t}\n\t\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall '{0}' extension. '{1}', '{2}' and other extension depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleIndirectDependentError', \"Cannot uninstall '{0}' extension . It includes uninstalling '{1}' extension and '{2}' extension depends on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}' and '{3}' extensions depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}', '{3}' and other extensions depend on this.\",\n\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => !i.isBuiltin && extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate async doUninstall(extension: ILocalExtension): Promise<void> {\n\t\ttry {\n\t\t\tawait this.preUninstallExtension(extension);\n\t\t\tawait this.uninstallExtension(extension);\n\t\t} catch (error) {\n\t\t\tawait this.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\tthrow error;\n\t\t}\n\t\tawait this.postUninstallExtension(extension);\n\t}\n\n\tprivate async preUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\tconst exists = await pfs.exists(extension.location.fsPath);\n\t\tif (!exists) {\n\t\t\tthrow new Error(nls.localize('notExists', \"Could not find extension\"));\n\t\t}\n\t\tthis.logService.info('Uninstalling extension:', extension.identifier.id);\n\t\tthis._onUninstallExtension.fire(extension.identifier);\n\t}\n\n\tprivate async uninstallExtension(local: ILocalExtension): Promise<void> {\n\t\tlet promise = this.uninstallingExtensions.get(local.identifier.id);\n\t\tif (!promise) {\n\t\t\t// Set all versions of the extension as uninstalled\n\t\t\tpromise = createCancelablePromise(async () => {\n\t\t\t\tconst userExtensions = await this.extensionsScanner.scanUserExtensions(false);\n\t\t\t\tawait this.extensionsScanner.setUninstalled(...userExtensions.filter(u => areSameExtensions(u.identifier, local.identifier)));\n\t\t\t});\n\t\t\tthis.uninstallingExtensions.set(local.identifier.id, promise);\n\t\t\tpromise.finally(() => this.uninstallingExtensions.delete(local.identifier.id));\n\t\t}\n\t\treturn promise;\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension, error?: Error): Promise<void> {\n\t\tif (error) {\n\t\t\tthis.logService.error('Failed to uninstall extension:', extension.identifier.id, error.message);\n\t\t} else {\n\t\t\tthis.logService.info('Successfully uninstalled extension:', extension.identifier.id);\n\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\tif (extension.identifier.uuid) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.galleryService.reportStatistic(extension.manifest.publisher, extension.manifest.name, extension.manifest.version, StatisticType.Uninstall);\n\t\t\t\t} catch (error) { /* ignore */ }\n\t\t\t}\n\t\t}\n\t\tthis.reportTelemetry('extensionGallery:uninstall', getLocalExtensionTelemetryData(extension), undefined, error);\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, error: errorcode });\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn this.extensionsScanner.scanExtensions(type);\n\t}\n\n\tremoveDeprecatedExtensions(): Promise<void> {\n\t\treturn this.extensionsScanner.cleanUp();\n\t}\n\n\tprivate async isUninstalled(identifier: ExtensionIdentifierWithVersion): Promise<boolean> {\n\t\tconst uninstalled = await this.filterUninstalled(identifier);\n\t\treturn uninstalled.length === 1;\n\t}\n\n\tprivate async filterUninstalled(...identifiers: ExtensionIdentifierWithVersion[]): Promise<string[]> {\n\t\tconst uninstalled: string[] = [];\n\t\tconst allUninstalled = await this.extensionsScanner.getUninstalledExtensions();\n\t\tfor (const identifier of identifiers) {\n\t\t\tif (!!allUninstalled[identifier.key()]) {\n\t\t\t\tuninstalled.push(identifier.key());\n\t\t\t}\n\t\t}\n\t\treturn uninstalled;\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.reportedExtensions || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.reportedExtensions = this.updateReportCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.reportedExtensions;\n\t}\n\n\tprivate async updateReportCache(): Promise<IReportedExtension[]> {\n\t\ttry {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\t\t\tconst result = await this.galleryService.getExtensionsReport();\n\t\t\tthis.logService.trace(`ExtensionManagementService.refreshReportedCache - got ${result.length} reported extensions from service`);\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache - failed to get extension report');\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate reportTelemetry(eventName: string, extensionData: any, duration?: number, error?: Error): void {\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:install\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:update\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLogError(eventName, { ...extensionData, success: !error, duration, errorcode });\n\t}\n}\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as tarStream from 'tar-stream';\nimport * as util from 'util';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as vszip from 'vs/base/node/zip';\nimport * as nls from 'vs/nls';\nimport product from 'vs/platform/product/common/product';\n\n// We will be overriding these, so keep a reference to the original.\nconst vszipExtract = vszip.extract;\nconst vszipBuffer = vszip.buffer;\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\t/**\n\t * Source path within the TAR/ZIP archive. Only the files\n\t * contained in this path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport const tar = async (tarPath: string, files: IFile[]): Promise<string> => {\n\tconst pack = tarStream.pack();\n\tconst chunks: Buffer[] = [];\n\tconst ended = new Promise<Buffer>((resolve) => {\n\t\tpack.on('end', () => resolve(Buffer.concat(chunks)));\n\t});\n\tpack.on('data', (chunk: Buffer) => chunks.push(chunk));\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tpack.entry({ name: file.path }, file.contents);\n\t}\n\tpack.finalize();\n\tawait util.promisify(fs.writeFile)(tarPath, await ended);\n\treturn tarPath;\n};\n\nexport const extract = async (archivePath: string, extractPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\ttry {\n\t\tawait extractTar(archivePath, extractPath, options, token);\n\t} catch (error) {\n\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\tawait vszipExtract(archivePath, extractPath, options, token);\n\t\t}\n\t}\n};\n\nexport const buffer = (targetPath: string, filePath: string): Promise<Buffer> => {\n\treturn new Promise<Buffer>(async (resolve, reject) => {\n\t\ttry {\n\t\t\tlet done: boolean = false;\n\t\t\tawait extractAssets(targetPath, new RegExp(filePath), (assetPath: string, data: Buffer) => {\n\t\t\t\tif (path.normalize(assetPath) === path.normalize(filePath)) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!done) {\n\t\t\t\tthrow new Error('couldn\\'t find asset ' + filePath);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\t\tvszipBuffer(targetPath, filePath).then(resolve).catch(reject);\n\t\t\t} else {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t}\n\t});\n};\n\nconst extractAssets = async (tarPath: string, match: RegExp, callback: (path: string, data: Buffer) => void): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst name = header.name;\n\t\t\tif (match.test(name)) {\n\t\t\t\textractData(stream).then((data) => {\n\t\t\t\t\tcallback(name, data);\n\t\t\t\t\tnext();\n\t\t\t\t}).catch(fail);\n\t\t\t} else {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume(); // Just drain it.\n\t\t\t}\n\t\t});\n\t\textractor.on('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\nconst extractData = (stream: NodeJS.ReadableStream): Promise<Buffer> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tconst fileData: Buffer[] = [];\n\t\tstream.on('error', reject);\n\t\tstream.on('end', () => resolve(Buffer.concat(fileData)));\n\t\tstream.on('data', (data) => fileData.push(data));\n\t});\n};\n\nconst extractTar = async (tarPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst nextEntry = (): void => {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume();\n\t\t\t};\n\n\t\t\tconst rawName = path.normalize(header.name);\n\t\t\tif (token.isCancellationRequested || !sourcePathRegex.test(rawName)) {\n\t\t\t\treturn nextEntry();\n\t\t\t}\n\n\t\t\tconst fileName = rawName.replace(sourcePathRegex, '');\n\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\t/*\n\t\t\t\t\tNOTE:@coder: they removed mkdirp in favor of fs.promises\n\t\t\t\t\tSee commit: https://github.com/microsoft/vscode/commit/a0d76bb9834b63a02fba8017a6306511fe1ab4fe#diff-2bf233effbb62ea789bb7c4739d222a43ccd97ed9f1219f75bb07e9dee91c1a7\n\t\t\t\t\t3/11/21 @jsjoeio\n\t\t\t\t*/\n\t\t\t\treturn fs.promises.mkdir(targetFileName, { recursive: true }).then(nextEntry);\n\t\t\t}\n\n\t\t\tconst dirName = path.dirname(fileName);\n\t\t\tconst targetDirName = path.join(targetPath, dirName);\n\t\t\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\t\t\treturn fail(new Error(nls.localize('invalid file', 'Error extracting {0}. Invalid file.', fileName)));\n\t\t\t}\n\n\t\t\t/*\n\t\t\t\tNOTE:@coder: they removed mkdirp in favor of fs.promises\n\t\t\t\tSee commit: https://github.com/microsoft/vscode/commit/a0d76bb9834b63a02fba8017a6306511fe1ab4fe#diff-2bf233effbb62ea789bb7c4739d222a43ccd97ed9f1219f75bb07e9dee91c1a7\n\t\t\t\t3/11/21 @jsjoeio\n\t\t\t*/\n\t\t\tawait fs.promises.mkdir(targetDirName, { recursive: true });\n\n\t\t\tconst fstream = fs.createWriteStream(targetFileName, { mode: header.mode });\n\t\t\tfstream.once('close', () => next());\n\t\t\tfstream.once('error', fail);\n\t\t\tstream.pipe(fstream);\n\t\t});\n\t\textractor.once('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\n/**\n * Override original functionality so we can use a custom marketplace with\n * either tars or zips.\n */\nexport const enableCustomMarketplace = (): void => {\n\t(<any>product).extensionsGallery = { // Use `any` to override readonly.\n\t\tserviceUrl: process.env.SERVICE_URL || 'https://extensions.coder.com/api',\n\t\titemUrl: process.env.ITEM_URL || '',\n\t\tcontrolUrl: '',\n\t\trecommendationsUrl: '',\n\t\t...(product.extensionsGallery || {}),\n\t};\n\n\tconst target = vszip as typeof vszip;\n\ttarget.zip = tar;\n\ttarget.extract = extract;\n\ttarget.buffer = buffer;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from 'crypto';\nimport { Socket, Server as NetServer, createConnection, createServer } from 'net';\nimport * as zlib from 'zlib';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { join } from 'vs/base/common/path';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ISocket, Protocol, Client, ChunkStream } from 'vs/base/parts/ipc/common/ipc.net';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Platform, platform } from 'vs/base/common/platform';\n\nexport class NodeSocket implements ISocket {\n\n\tpublic readonly socket: Socket;\n\tprivate readonly _errorListener: (err: any) => void;\n\n\tconstructor(socket: Socket) {\n\t\tthis.socket = socket;\n\t\tthis._errorListener = (err: any) => {\n\t\t\tif (err) {\n\t\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t};\n\t\tthis.socket.on('error', this._errorListener);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.off('error', this._errorListener);\n\t\tthis.socket.destroy();\n\t}\n\n\tpublic onData(_listener: (e: VSBuffer) => void): IDisposable {\n\t\tconst listener = (buff: Buffer) => _listener(VSBuffer.wrap(buff));\n\t\tthis.socket.on('data', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('data', listener)\n\t\t};\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\tthis.socket.on('close', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('close', listener)\n\t\t};\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\tthis.socket.on('end', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('end', listener)\n\t\t};\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\t// return early if socket has been destroyed in the meantime\n\t\tif (this.socket.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t// anyways and nodejs is already doing that for us:\n\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t// > accept and buffer chunk even if it has not been allowed to drain.\n\t\ttry {\n\t\t\tthis.socket.write(<Buffer>buffer.buffer, (err: any) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tonUnexpectedError(err);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonUnexpectedError(err);\n\t\t}\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tif (this.socket.bufferSize === 0) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst finished = () => {\n\t\t\t\tthis.socket.off('close', finished);\n\t\t\t\tthis.socket.off('end', finished);\n\t\t\t\tthis.socket.off('error', finished);\n\t\t\t\tthis.socket.off('timeout', finished);\n\t\t\t\tthis.socket.off('drain', finished);\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tthis.socket.on('close', finished);\n\t\t\tthis.socket.on('end', finished);\n\t\t\tthis.socket.on('error', finished);\n\t\t\tthis.socket.on('timeout', finished);\n\t\t\tthis.socket.on('drain', finished);\n\t\t});\n\t}\n}\n\nconst enum Constants {\n\tMinHeaderByteSize = 2\n}\n\nconst enum ReadState {\n\tPeekHeader = 1,\n\tReadHeader = 2,\n\tReadBody = 3,\n\tFin = 4\n}\n\n/**\n * See https://tools.ietf.org/html/rfc6455#section-5.2\n */\nexport class WebSocketNodeSocket extends Disposable implements ISocket {\n\n\tpublic readonly socket: NodeSocket;\n\tpublic readonly permessageDeflate: boolean;\n\tprivate _totalIncomingWireBytes: number;\n\tprivate _totalIncomingDataBytes: number;\n\tprivate _totalOutgoingWireBytes: number;\n\tprivate _totalOutgoingDataBytes: number;\n\tprivate readonly _zlibInflate: zlib.InflateRaw | null;\n\tprivate readonly _zlibDeflate: zlib.DeflateRaw | null;\n\tprivate _zlibDeflateFlushWaitingCount: number;\n\tprivate readonly _onDidZlibFlush = this._register(new Emitter<void>());\n\tprivate readonly _recordInflateBytes: boolean;\n\tprivate readonly _recordedInflateBytes: Buffer[] = [];\n\tprivate readonly _pendingInflateData: Buffer[] = [];\n\tprivate readonly _pendingDeflateData: Buffer[] = [];\n\tprivate readonly _incomingData: ChunkStream;\n\tprivate readonly _onData = this._register(new Emitter<VSBuffer>());\n\tprivate readonly _onClose = this._register(new Emitter<void>());\n\tprivate _isEnded: boolean = false;\n\n\tprivate readonly _state = {\n\t\tstate: ReadState.PeekHeader,\n\t\treadLen: Constants.MinHeaderByteSize,\n\t\tfin: 0,\n\t\tmask: 0\n\t};\n\n\tpublic get totalIncomingWireBytes(): number {\n\t\treturn this._totalIncomingWireBytes;\n\t}\n\n\tpublic get totalIncomingDataBytes(): number {\n\t\treturn this._totalIncomingDataBytes;\n\t}\n\n\tpublic get totalOutgoingWireBytes(): number {\n\t\treturn this._totalOutgoingWireBytes;\n\t}\n\n\tpublic get totalOutgoingDataBytes(): number {\n\t\treturn this._totalOutgoingDataBytes;\n\t}\n\n\tpublic get recordedInflateBytes(): VSBuffer {\n\t\tif (this._recordInflateBytes) {\n\t\t\treturn VSBuffer.wrap(Buffer.concat(this._recordedInflateBytes));\n\t\t}\n\t\treturn VSBuffer.alloc(0);\n\t}\n\n\t/**\n\t * Create a socket which can communicate using WebSocket frames.\n\t *\n\t * **NOTE**: When using the permessage-deflate WebSocket extension, if parts of inflating was done\n\t *  in a different zlib instance, we need to pass all those bytes into zlib, otherwise the inflate\n\t *  might hit an inflated portion referencing a distance too far back.\n\t *\n\t * @param socket The underlying socket\n\t * @param permessageDeflate Use the permessage-deflate WebSocket extension\n\t * @param inflateBytes \"Seed\" zlib inflate with these bytes.\n\t * @param recordInflateBytes Record all bytes sent to inflate\n\t */\n\tconstructor(socket: NodeSocket, permessageDeflate: boolean, inflateBytes: VSBuffer | null, recordInflateBytes: boolean) {\n\t\tsuper();\n\t\tthis.socket = socket;\n\t\tthis._totalIncomingWireBytes = 0;\n\t\tthis._totalIncomingDataBytes = 0;\n\t\tthis._totalOutgoingWireBytes = 0;\n\t\tthis._totalOutgoingDataBytes = 0;\n\t\tthis.permessageDeflate = permessageDeflate;\n\t\tthis._recordInflateBytes = recordInflateBytes;\n\t\tif (permessageDeflate) {\n\t\t\t// See https://tools.ietf.org/html/rfc7692#page-16\n\t\t\t// To simplify our logic, we don't negociate the window size\n\t\t\t// and simply dedicate (2^15) / 32kb per web socket\n\t\t\tthis._zlibInflate = zlib.createInflateRaw({\n\t\t\t\twindowBits: 15\n\t\t\t});\n\t\t\tthis._zlibInflate.on('error', (err) => {\n\t\t\t\t// zlib errors are fatal, since we have no idea how to recover\n\t\t\t\tconsole.error(err);\n\t\t\t\tonUnexpectedError(err);\n\t\t\t\tthis._onClose.fire();\n\t\t\t});\n\t\t\tthis._zlibInflate.on('data', (data: Buffer) => {\n\t\t\t\tthis._pendingInflateData.push(data);\n\t\t\t});\n\t\t\tif (inflateBytes) {\n\t\t\t\tthis._zlibInflate.write(inflateBytes.buffer);\n\t\t\t\tthis._zlibInflate.flush(() => {\n\t\t\t\t\tthis._pendingInflateData.length = 0;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._zlibDeflate = zlib.createDeflateRaw({\n\t\t\t\twindowBits: 15\n\t\t\t});\n\t\t\tthis._zlibDeflate.on('error', (err) => {\n\t\t\t\t// zlib errors are fatal, since we have no idea how to recover\n\t\t\t\tconsole.error(err);\n\t\t\t\tonUnexpectedError(err);\n\t\t\t\tthis._onClose.fire();\n\t\t\t});\n\t\t\tthis._zlibDeflate.on('data', (data: Buffer) => {\n\t\t\t\tthis._pendingDeflateData.push(data);\n\t\t\t});\n\t\t} else {\n\t\t\tthis._zlibInflate = null;\n\t\t\tthis._zlibDeflate = null;\n\t\t}\n\t\tthis._zlibDeflateFlushWaitingCount = 0;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this.socket.onData(data => this._acceptChunk(data)));\n\t\tthis._register(this.socket.onClose(() => this._onClose.fire()));\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._zlibDeflateFlushWaitingCount > 0) {\n\t\t\t// Wait for any outstanding writes to finish before disposing\n\t\t\tthis._register(this._onDidZlibFlush.event(() => {\n\t\t\t\tthis.dispose();\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.socket.dispose();\n\t\t\tsuper.dispose();\n\t\t}\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this._onData.event(listener);\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\treturn this._onClose.event(listener);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn this.socket.onEnd(listener);\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tthis._totalOutgoingDataBytes += buffer.byteLength;\n\n\t\tif (this._zlibDeflate) {\n\t\t\tthis._zlibDeflate.write(<Buffer>buffer.buffer);\n\n\t\t\tthis._zlibDeflateFlushWaitingCount++;\n\t\t\t// See https://zlib.net/manual.html#Constants\n\t\t\tthis._zlibDeflate.flush(/*Z_SYNC_FLUSH*/2, () => {\n\t\t\t\tthis._zlibDeflateFlushWaitingCount--;\n\t\t\t\tlet data = Buffer.concat(this._pendingDeflateData);\n\t\t\t\tthis._pendingDeflateData.length = 0;\n\n\t\t\t\t// See https://tools.ietf.org/html/rfc7692#section-7.2.1\n\t\t\t\tdata = data.slice(0, data.length - 4);\n\n\t\t\t\tif (!this._isEnded) {\n\t\t\t\t\t// Avoid ERR_STREAM_WRITE_AFTER_END\n\t\t\t\t\tthis._write(VSBuffer.wrap(data), true);\n\t\t\t\t}\n\n\t\t\t\tif (this._zlibDeflateFlushWaitingCount === 0) {\n\t\t\t\t\tthis._onDidZlibFlush.fire();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis._write(buffer, false);\n\t\t}\n\t}\n\n\tprivate _write(buffer: VSBuffer, compressed: boolean): void {\n\t\tlet headerLen = Constants.MinHeaderByteSize;\n\t\tif (buffer.byteLength < 126) {\n\t\t\theaderLen += 0;\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theaderLen += 2;\n\t\t} else {\n\t\t\theaderLen += 8;\n\t\t}\n\t\tconst header = VSBuffer.alloc(headerLen);\n\n\t\tif (compressed) {\n\t\t\t// The RSV1 bit indicates a compressed frame\n\t\t\theader.writeUInt8(0b11000010, 0);\n\t\t} else {\n\t\t\theader.writeUInt8(0b10000010, 0);\n\t\t}\n\t\tif (buffer.byteLength < 126) {\n\t\t\theader.writeUInt8(buffer.byteLength, 1);\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theader.writeUInt8(126, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t} else {\n\t\t\theader.writeUInt8(127, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 24) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 16) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t}\n\n\t\tthis._totalOutgoingWireBytes += header.byteLength + buffer.byteLength;\n\t\tthis.socket.write(VSBuffer.concat([header, buffer]));\n\t}\n\n\tpublic end(): void {\n\t\tthis._isEnded = true;\n\t\tthis.socket.end();\n\t}\n\n\tprivate _acceptChunk(data: VSBuffer): void {\n\t\tif (data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._totalIncomingWireBytes += data.byteLength;\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tif (this._state.state === ReadState.PeekHeader) {\n\t\t\t\t// peek to see if we can read the entire header\n\t\t\t\tconst peekHeader = this._incomingData.peek(this._state.readLen);\n\t\t\t\tconst firstByte = peekHeader.readUInt8(0);\n\t\t\t\tconst finBit = (firstByte & 0b10000000) >>> 7;\n\t\t\t\tconst secondByte = peekHeader.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tconst len = (secondByte & 0b01111111);\n\n\t\t\t\tthis._state.state = ReadState.ReadHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize + (hasMask ? 4 : 0) + (len === 126 ? 2 : 0) + (len === 127 ? 8 : 0);\n\t\t\t\tthis._state.fin = finBit;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t} else if (this._state.state === ReadState.ReadHeader) {\n\t\t\t\t// read entire header\n\t\t\t\tconst header = this._incomingData.read(this._state.readLen);\n\t\t\t\tconst secondByte = header.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tlet len = (secondByte & 0b01111111);\n\n\t\t\t\tlet offset = 1;\n\t\t\t\tif (len === 126) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t} else if (len === 127) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet mask = 0;\n\t\t\t\tif (hasMask) {\n\t\t\t\t\tmask = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._state.state = ReadState.ReadBody;\n\t\t\t\tthis._state.readLen = len;\n\t\t\t\tthis._state.mask = mask;\n\n\t\t\t} else if (this._state.state === ReadState.ReadBody) {\n\t\t\t\t// read body\n\n\t\t\t\tconst body = this._incomingData.read(this._state.readLen);\n\t\t\t\tunmask(body, this._state.mask);\n\n\t\t\t\tthis._state.state = ReadState.PeekHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tif (this._zlibInflate) {\n\t\t\t\t\t// See https://tools.ietf.org/html/rfc7692#section-7.2.2\n\t\t\t\t\tif (this._recordInflateBytes) {\n\t\t\t\t\t\tthis._recordedInflateBytes.push(Buffer.from(<Buffer>body.buffer));\n\t\t\t\t\t}\n\t\t\t\t\tthis._zlibInflate.write(<Buffer>body.buffer);\n\t\t\t\t\tif (this._state.fin) {\n\t\t\t\t\t\tif (this._recordInflateBytes) {\n\t\t\t\t\t\t\tthis._recordedInflateBytes.push(Buffer.from([0x00, 0x00, 0xff, 0xff]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._zlibInflate.write(Buffer.from([0x00, 0x00, 0xff, 0xff]));\n\t\t\t\t\t}\n\t\t\t\t\tthis._zlibInflate.flush(() => {\n\t\t\t\t\t\tconst data = Buffer.concat(this._pendingInflateData);\n\t\t\t\t\t\tthis._pendingInflateData.length = 0;\n\t\t\t\t\t\tthis._totalIncomingDataBytes += data.length;\n\t\t\t\t\t\tthis._onData.fire(VSBuffer.wrap(data));\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis._totalIncomingDataBytes += body.byteLength;\n\t\t\t\t\tthis._onData.fire(body);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async drain(): Promise<void> {\n\t\tif (this._zlibDeflateFlushWaitingCount > 0) {\n\t\t\tawait Event.toPromise(this._onDidZlibFlush.event);\n\t\t}\n\t\tawait this.socket.drain();\n\t}\n}\n\nfunction unmask(buffer: VSBuffer, mask: number): void {\n\tif (mask === 0) {\n\t\treturn;\n\t}\n\tlet cnt = buffer.byteLength >>> 2;\n\tfor (let i = 0; i < cnt; i++) {\n\t\tconst v = buffer.readUInt32BE(i * 4);\n\t\tbuffer.writeUInt32BE(v ^ mask, i * 4);\n\t}\n\tlet offset = cnt * 4;\n\tlet bytesLeft = buffer.byteLength - offset;\n\tconst m3 = (mask >>> 24) & 0b11111111;\n\tconst m2 = (mask >>> 16) & 0b11111111;\n\tconst m1 = (mask >>> 8) & 0b11111111;\n\tif (bytesLeft >= 1) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset) ^ m3, offset);\n\t}\n\tif (bytesLeft >= 2) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 1) ^ m2, offset + 1);\n\t}\n\tif (bytesLeft >= 3) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 2) ^ m1, offset + 2);\n\t}\n}\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/microsoft/vscode/issues/30624\nexport const XDG_RUNTIME_DIR = <string | undefined>process.env['XDG_RUNTIME_DIR'];\n\nconst safeIpcPathLengths: { [platform: number]: number } = {\n\t[Platform.Linux]: 107,\n\t[Platform.Mac]: 103\n};\n\nexport function createRandomIPCHandle(): string {\n\tconst randomSuffix = generateUuid();\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t}\n\n\t// Mac/Unix: use socket file and prefer\n\t// XDG_RUNTIME_DIR over tmpDir\n\tlet result: string;\n\tif (XDG_RUNTIME_DIR) {\n\t\tresult = join(XDG_RUNTIME_DIR, `vscode-ipc-${randomSuffix}.sock`);\n\t} else {\n\t\tresult = join(tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n\t}\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nexport function createStaticIPCHandle(directoryPath: string, type: string, version: string): string {\n\tconst scope = createHash('md5').update(directoryPath).digest('hex');\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${version}-${type}-sock`;\n\t}\n\n\t// Mac/Unix: use socket file and prefer\n\t// XDG_RUNTIME_DIR over user data path\n\t// unless portable\n\tlet result: string;\n\tif (XDG_RUNTIME_DIR && !process.env['VSCODE_PORTABLE']) {\n\t\tresult = join(XDG_RUNTIME_DIR, `vscode-${scope.substr(0, 8)}-${version}-${type}.sock`);\n\t} else {\n\t\tresult = join(directoryPath, `${version}-${type}.sock`);\n\t}\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nfunction validateIPCHandleLength(handle: string): void {\n\tconst limit = safeIpcPathLengths[platform];\n\tif (typeof limit === 'number' && handle.length >= limit) {\n\t\t// https://nodejs.org/api/net.html#net_identifying_paths_for_ipc_connections\n\t\tconsole.warn(`WARNING: IPC handle \"${handle}\" is longer than ${limit} chars, try a shorter --user-data-dir`);\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(new NodeSocket(socket)),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string, port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(new NodeSocket(socket), clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as streams from 'vs/base/common/stream';\nimport { createGunzip } from 'zlib';\nimport { parse as parseUrl } from 'url';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isBoolean, isNumber } from 'vs/base/common/types';\nimport { canceled } from 'vs/base/common/errors';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRequestService, IHTTPConfiguration } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\nimport { getProxyAgent, Agent } from 'vs/platform/request/node/proxy';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { streamToBufferReadableStream } from 'vs/base/common/buffer';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { resolveShellEnv } from 'vs/platform/environment/node/shellEnv';\n\nexport interface IRawRequestFunction {\n\t(options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface NodeRequestOptions extends IRequestOptions {\n\tagent?: Agent;\n\tstrictSSL?: boolean;\n\tgetRawRequest?(options: IRequestOptions): IRawRequestFunction;\n}\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService extends Disposable implements IRequestService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate proxyUrl?: string;\n\tprivate strictSSL: boolean | undefined;\n\tprivate authorization?: string;\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.configure(configurationService.getValue<IHTTPConfiguration>());\n\t\tthis._register(configurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this));\n\t}\n\n\tprivate configure(config: IHTTPConfiguration) {\n\t\tthis.proxyUrl = config.http && config.http.proxy;\n\t\tthis.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n\t\tthis.authorization = config.http && config.http.proxyAuthorization;\n\t}\n\n\tasync request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request', options.url);\n\n\t\tconst { proxyUrl, strictSSL } = this;\n\t\tconst env = {\n\t\t\t...process.env,\n\t\t\t...(await resolveShellEnv(this.logService, this.environmentService.args, process.env)),\n\t\t};\n\t\tconst agent = options.agent ? options.agent : await getProxyAgent(options.url || '', env, { proxyUrl, strictSSL });\n\n\t\toptions.agent = agent;\n\t\toptions.strictSSL = strictSSL;\n\n\t\tif (this.authorization) {\n\t\t\toptions.headers = {\n\t\t\t\t...(options.headers || {}),\n\t\t\t\t'Proxy-Authorization': this.authorization\n\t\t\t};\n\t\t}\n\n\t\treturn this._request(options, token);\n\t}\n\n\tprivate async getNodeRequest(options: IRequestOptions): Promise<IRawRequestFunction> {\n\t\tconst endpoint = parseUrl(options.url!);\n\t\tconst module = endpoint.protocol === 'https:' ? await import('https') : await import('http');\n\t\treturn module.request;\n\t}\n\n\tprivate _request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\n\t\treturn new Promise<IRequestContext>(async (c, e) => {\n\t\t\tlet req: http.ClientRequest;\n\n\t\t\tconst endpoint = parseUrl(options.url!);\n\t\t\tconst rawRequest = options.getRawRequest\n\t\t\t\t? options.getRawRequest(options)\n\t\t\t\t: await this.getNodeRequest(options);\n\n\t\t\tconst opts: https.RequestOptions = {\n\t\t\t\thostname: endpoint.hostname,\n\t\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\t\tprotocol: endpoint.protocol,\n\t\t\t\tpath: endpoint.path,\n\t\t\t\tmethod: options.type || 'GET',\n\t\t\t\theaders: options.headers,\n\t\t\t\tagent: options.agent,\n\t\t\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t\t\t};\n\n\t\t\tif (options.user && options.password) {\n\t\t\t\topts.auth = options.user + ':' + options.password;\n\t\t\t}\n\n\t\t\treq = rawRequest(opts, (res: http.IncomingMessage) => {\n\t\t\t\tconst followRedirects: number = isNumber(options.followRedirects) ? options.followRedirects : 3;\n\t\t\t\tif (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers['location']) {\n\t\t\t\t\tthis._request({\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\t\tfollowRedirects: followRedirects - 1\n\t\t\t\t\t}, token).then(c, e);\n\t\t\t\t} else {\n\t\t\t\t\tlet stream: streams.ReadableStreamEvents<Uint8Array> = res;\n\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') {\n\t\t\t\t\t\tstream = res.pipe(createGunzip());\n\t\t\t\t\t}\n\n\t\t\t\t\tc({ res, stream: streamToBufferReadableStream(stream) } as IRequestContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treq.on('error', e);\n\n\t\t\tif (options.timeout) {\n\t\t\t\treq.setTimeout(options.timeout);\n\t\t\t}\n\n\t\t\tif (options.data) {\n\t\t\t\tif (typeof options.data === 'string') {\n\t\t\t\t\treq.write(options.data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.end();\n\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\treq.abort();\n\t\t\t\te(canceled());\n\t\t\t});\n\t\t});\n\t}\n\n\tasync resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn undefined; // currently not implemented in node\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { release, hostname } from 'os';\nimport * as fs from 'fs';\nimport { gracefulify } from 'graceful-fs';\nimport { isAbsolute, join } from 'vs/base/common/path';\nimport { raceTimeout } from 'vs/base/common/async';\nimport product from 'vs/platform/product/common/product';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { NativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { IExtensionManagementService, IExtensionGalleryService, IExtensionManagementCLIService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { combinedAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { TelemetryService, ITelemetryServiceConfig } from 'vs/platform/telemetry/common/telemetryService';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/common/commonProperties';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { StateService } from 'vs/platform/state/node/stateService';\nimport { ILogService, getLogLevel, LogLevel, ConsoleLogger, MultiplexLogService, ILogger } from 'vs/platform/log/common/log';\nimport { Schemas } from 'vs/base/common/network';\nimport { SpdLogLogger } from 'vs/platform/log/node/spdlogLog';\nimport { buildTelemetryMessage } from 'vs/platform/telemetry/node/telemetry';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ExtensionManagementCLIService } from 'vs/platform/extensionManagement/common/extensionManagementCLIService';\nimport { URI } from 'vs/base/common/uri';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { cwd } from 'vs/base/common/process';\n\nclass CliMain extends Disposable {\n\n\tconstructor(\n\t\tprivate argv: NativeParsedArgs\n\t) {\n\t\tsuper();\n\n\t\t// Enable gracefulFs\n\t\tgracefulify(fs);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Dispose on exit\n\t\tprocess.once('exit', () => this.dispose());\n\t}\n\n\tasync run(): Promise<void> {\n\n\t\t// Services\n\t\tconst [instantiationService, appenders] = await this.initServices();\n\n\t\treturn instantiationService.invokeFunction(async accessor => {\n\t\t\tconst logService = accessor.get(ILogService);\n\t\t\tconst fileService = accessor.get(IFileService);\n\t\t\tconst environmentService = accessor.get(INativeEnvironmentService);\n\t\t\tconst extensionManagementCLIService = accessor.get(IExtensionManagementCLIService);\n\n\t\t\t// Log info\n\t\t\tlogService.info('CLI main', this.argv);\n\n\t\t\t// Error handler\n\t\t\tthis.registerErrorHandler(logService);\n\n\t\t\t// Run based on argv\n\t\t\tawait this.doRun(environmentService, extensionManagementCLIService, fileService);\n\n\t\t\t// Flush the remaining data in AI adapter (with 1s timeout)\n\t\t\treturn raceTimeout(combinedAppender(...appenders).flush(), 1000);\n\t\t});\n\t}\n\n\tprivate async initServices(): Promise<[IInstantiationService, AppInsightsAppender[]]> {\n\t\tconst services = new ServiceCollection();\n\n\t\t// Product\n\t\tconst productService = { _serviceBrand: undefined, ...product };\n\t\tservices.set(IProductService, productService);\n\n\t\t// Environment\n\t\tconst environmentService = new NativeEnvironmentService(this.argv, productService);\n\t\tservices.set(INativeEnvironmentService, environmentService);\n\n\t\t// Init folders\n\t\tawait Promise.all([environmentService.appSettingsHome.fsPath, environmentService.extensionsPath].map(path => path ? fs.promises.mkdir(path, { recursive: true }) : undefined));\n\n\t\t// Log\n\t\tconst logLevel = getLogLevel(environmentService);\n\t\tconst loggers: ILogger[] = [];\n\t\tloggers.push(new SpdLogLogger('cli', join(environmentService.logsPath, 'cli.log'), true, logLevel));\n\t\tif (logLevel === LogLevel.Trace) {\n\t\t\tloggers.push(new ConsoleLogger(logLevel));\n\t\t}\n\n\t\tconst logService = this._register(new MultiplexLogService(loggers));\n\t\tservices.set(ILogService, logService);\n\n\t\t// Files\n\t\tconst fileService = this._register(new FileService(logService));\n\t\tservices.set(IFileService, fileService);\n\n\t\tconst diskFileSystemProvider = this._register(new DiskFileSystemProvider(logService));\n\t\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\t\t// Configuration\n\t\tconst configurationService = this._register(new ConfigurationService(environmentService.settingsResource, fileService));\n\t\tservices.set(IConfigurationService, configurationService);\n\n\t\t// Init config\n\t\tawait configurationService.initialize();\n\n\t\t// State\n\t\tconst stateService = new StateService(environmentService, logService);\n\t\tservices.set(IStateService, stateService);\n\n\t\t// Request\n\t\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\n\t\t// Extensions\n\t\tservices.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\t\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\t\tservices.set(IExtensionManagementCLIService, new SyncDescriptor(ExtensionManagementCLIService));\n\n\t\t// Localizations\n\t\tservices.set(ILocalizationsService, new SyncDescriptor(LocalizationsService));\n\n\t\t// Telemetry\n\t\tconst appenders: AppInsightsAppender[] = [];\n\t\tif (environmentService.isBuilt && !environmentService.isExtensionDevelopment && !environmentService.disableTelemetry && productService.enableTelemetry) {\n\t\t\tif (productService.aiConfig && productService.aiConfig.asimovKey) {\n\t\t\t\tappenders.push(new AppInsightsAppender('monacoworkbench', null, productService.aiConfig.asimovKey));\n\t\t\t}\n\n\t\t\tconst { appRoot, extensionsPath, installSourcePath } = environmentService;\n\n\t\t\tconst config: ITelemetryServiceConfig = {\n\t\t\t\tappender: combinedAppender(...appenders),\n\t\t\t\tsendErrorTelemetry: false,\n\t\t\t\tcommonProperties: resolveCommonProperties(fileService, release(), hostname(), process.arch, productService.commit, productService.version, stateService.getItem('telemetry.machineId'), productService.msftInternalDomains, installSourcePath),\n\t\t\t\tpiiPaths: [appRoot, extensionsPath]\n\t\t\t};\n\n\t\t\tservices.set(ITelemetryService, new SyncDescriptor(TelemetryService, [config]));\n\n\t\t} else {\n\t\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\treturn [new InstantiationService(services), appenders];\n\t}\n\n\tprivate registerErrorHandler(logService: ILogService): void {\n\n\t\t// Install handler for unexpected errors\n\t\tsetUnexpectedErrorHandler(error => {\n\t\t\tconst message = toErrorMessage(error, true);\n\t\t\tif (!message) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlogService.error(`[uncaught exception in CLI]: ${message}`);\n\t\t});\n\t}\n\n\tprivate async doRun(environmentService: INativeEnvironmentService, extensionManagementCLIService: IExtensionManagementCLIService, fileService: IFileService): Promise<void> {\n\n\t\t// Install Source\n\t\tif (this.argv['install-source']) {\n\t\t\treturn this.setInstallSource(environmentService, fileService, this.argv['install-source']);\n\t\t}\n\n\t\t// List Extensions\n\t\tif (this.argv['list-extensions']) {\n\t\t\treturn extensionManagementCLIService.listExtensions(!!this.argv['show-versions'], this.argv['category']);\n\t\t}\n\n\t\t// Install Extension\n\t\telse if (this.argv['install-extension'] || this.argv['install-builtin-extension']) {\n\t\t\treturn extensionManagementCLIService.installExtensions(this.asExtensionIdOrVSIX(this.argv['install-extension'] || []), this.argv['install-builtin-extension'] || [], !!this.argv['do-not-sync'], !!this.argv['force']);\n\t\t}\n\n\t\t// Uninstall Extension\n\t\telse if (this.argv['uninstall-extension']) {\n\t\t\treturn extensionManagementCLIService.uninstallExtensions(this.asExtensionIdOrVSIX(this.argv['uninstall-extension']), !!this.argv['force']);\n\t\t}\n\n\t\t// Locate Extension\n\t\telse if (this.argv['locate-extension']) {\n\t\t\treturn extensionManagementCLIService.locateExtension(this.argv['locate-extension']);\n\t\t}\n\n\t\t// Telemetry\n\t\telse if (this.argv['telemetry']) {\n\t\t\tconsole.log(buildTelemetryMessage(environmentService.appRoot, environmentService.extensionsPath));\n\t\t}\n\t}\n\n\tprivate asExtensionIdOrVSIX(inputs: string[]): (string | URI)[] {\n\t\treturn inputs.map(input => /\\.vsix$/i.test(input) ? URI.file(isAbsolute(input) ? input : join(cwd(), input)) : input);\n\t}\n\n\tprivate async setInstallSource(environmentService: INativeEnvironmentService, fileService: IFileService, installSource: string): Promise<void> {\n\t\tawait fileService.writeFile(URI.file(environmentService.installSourcePath), VSBuffer.fromString(installSource.slice(0, 30)));\n\t}\n}\n\nexport async function main(argv: NativeParsedArgs): Promise<void> {\n\tconst cliMain = new CliMain(argv);\n\n\ttry {\n\t\tawait cliMain.run();\n\t} finally {\n\t\tcliMain.dispose();\n\t}\n}\n","import { field, logger, Logger } from '@coder/logger';\nimport * as net from 'net';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { PersistentProtocol } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket, WebSocketNodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { AuthRequest, ConnectionTypeRequest, HandshakeMessage } from 'vs/platform/remote/common/remoteAgentConnection';\n\nexport interface SocketOptions {\n\t/** The token is how we identify and connect to existing sessions. */\n\treadonly reconnectionToken: string;\n\t/** Specifies that the client is trying to reconnect. */\n\treadonly reconnection: boolean;\n\t/** If true assume this is not a web socket (always false for code-server). */\n\treadonly skipWebSocketFrames: boolean;\n\t/** Whether to support compression (web socket only). */\n\treadonly permessageDeflate?: boolean;\n\t/**\n\t * Seed zlib with these bytes (web socket only). If parts of inflating was\n\t * done in a different zlib instance we need to pass all those bytes into zlib\n\t * otherwise the inflate might hit an inflated portion referencing a distance\n\t * too far back.\n\t */\n\treadonly inflateBytes?: VSBuffer;\n}\n\nexport class Protocol extends PersistentProtocol {\n\tprivate readonly logger: Logger;\n\n\tpublic constructor(socket: net.Socket, public readonly options: SocketOptions) {\n\t\tsuper(\n\t\t\toptions.skipWebSocketFrames\n\t\t\t\t? new NodeSocket(socket)\n\t\t\t\t: new WebSocketNodeSocket(\n\t\t\t\t\tnew NodeSocket(socket),\n\t\t\t\t\toptions.permessageDeflate || false,\n\t\t\t\t\toptions.inflateBytes || null,\n\t\t\t\t\t// Always record inflate bytes if using permessage-deflate.\n\t\t\t\t\toptions.permessageDeflate || false,\n\t\t\t\t),\n\t\t);\n\n\t\tthis.logger = logger.named('protocol', field('token', this.options.reconnectionToken));\n\t}\n\n\tpublic getUnderlyingSocket(): net.Socket {\n\t\tconst socket = this.getSocket();\n\t\treturn socket instanceof NodeSocket\n\t\t\t? socket.socket\n\t\t\t: (socket as WebSocketNodeSocket).socket.socket;\n\t}\n\n\t/**\n\t * Perform a handshake to get a connection request.\n\t */\n\tpublic handshake(): Promise<ConnectionTypeRequest> {\n\t\tthis.logger.debug('Initiating handshake...');\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst cleanup = () => {\n\t\t\t\thandler.dispose();\n\t\t\t\tonClose.dispose();\n\t\t\t\tclearTimeout(timeout);\n\t\t\t};\n\n\t\t\tconst onClose = this.onSocketClose(() => {\n\t\t\t\tcleanup();\n\t\t\t\tthis.logger.debug('Handshake failed');\n\t\t\t\treject(new Error('Protocol socket closed unexpectedly'));\n\t\t\t});\n\n\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\tcleanup();\n\t\t\t\tthis.logger.debug('Handshake timed out');\n\t\t\t\treject(new Error('Protocol handshake timed out'));\n\t\t\t}, 10000); // Matches the client timeout.\n\n\t\t\tconst handler = this.onControlMessage((rawMessage) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst raw = rawMessage.toString();\n\t\t\t\t\tthis.logger.trace('Got message', field('message', raw));\n\t\t\t\t\tconst message = JSON.parse(raw);\n\t\t\t\t\tswitch (message.type) {\n\t\t\t\t\t\tcase 'auth':\n\t\t\t\t\t\t\treturn this.authenticate(message);\n\t\t\t\t\t\tcase 'connectionType':\n\t\t\t\t\t\t\tcleanup();\n\t\t\t\t\t\t\tthis.logger.debug('Handshake completed');\n\t\t\t\t\t\t\treturn resolve(message);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error('Unrecognized message type');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tcleanup();\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Kick off the handshake in case we missed the client's opening shot.\n\t\t\t// TODO: Investigate why that message seems to get lost.\n\t\t\tthis.authenticate();\n\t\t});\n\t}\n\n\t/**\n\t * TODO: This ignores the authentication process entirely for now.\n\t */\n\tprivate authenticate(_?: AuthRequest): void {\n\t\tthis.sendMessage({ type: 'sign', data: '' });\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tpublic tunnel(): void {\n\t\tthrow new Error('Tunnel is not implemented yet');\n\t}\n\n\t/**\n\t * Send a handshake message. In the case of the extension host it should just\n\t * send a debug port.\n\t */\n\tpublic sendMessage(message: HandshakeMessage | { debugPort?: number | null } ): void {\n\t\tthis.sendControl(VSBuffer.fromString(JSON.stringify(message)));\n\t}\n\n\t/**\n\t * Disconnect and dispose everything including the underlying socket.\n\t */\n\tpublic destroy(reason?: string): void {\n\t\ttry {\n\t\t\tif (reason) {\n\t\t\t\tthis.sendMessage({ type: 'error', reason });\n\t\t\t}\n\t\t\t// If still connected try notifying the client.\n\t\t\tthis.sendDisconnect();\n\t\t} catch (error) {\n\t\t\t// I think the write might fail if already disconnected.\n\t\t\tthis.logger.warn(error.message || error);\n\t\t}\n\t\tthis.dispose(); // This disposes timers and socket event handlers.\n\t\tthis.getSocket().dispose(); // This will destroy() the socket.\n\t}\n\n\t/**\n\t * Get inflateBytes from the current socket.\n\t */\n\tpublic get inflateBytes(): Uint8Array | undefined {\n\t\tconst socket = this.getSocket();\n\t\treturn socket instanceof WebSocketNodeSocket\n\t\t\t? socket.recordedInflateBytes.buffer\n\t\t\t: undefined;\n\t}\n}\n","import { promises as fs } from 'fs';\nimport * as net from 'net';\nimport { hostname, release } from 'os';\nimport * as path from 'path';\nimport { Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { getMachineId } from 'vs/base/node/id';\nimport { ClientConnectionEvent, IPCServer, IServerChannel, ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { LogsDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner';\nimport { main } from 'vs/code/node/cliProcessMain';\nimport { Query, VscodeOptions, WorkbenchOptions } from 'vs/ipc';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { ExtensionHostDebugBroadcastChannel } from 'vs/platform/debug/common/extensionHostDebugIpc';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { IEnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { NativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IExtensionGalleryService, IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementChannel } from 'vs/platform/extensionManagement/common/extensionManagementIpc';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { ConsoleLogger, getLogLevel, ILoggerService, ILogService, MultiplexLogService } from 'vs/platform/log/common/log';\nimport { LogLevelChannel } from 'vs/platform/log/common/logIpc';\nimport { LoggerService } from 'vs/platform/log/node/loggerService';\nimport { SpdLogLogger } from 'vs/platform/log/node/spdlogLog';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ConnectionType, ConnectionTypeRequest } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestChannel } from 'vs/platform/request/common/requestIpc';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport ErrorTelemetry from 'vs/platform/telemetry/browser/errorTelemetry';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/common/commonProperties';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { TelemetryLogAppender } from 'vs/platform/telemetry/common/telemetryLogAppender';\nimport { TelemetryService } from 'vs/platform/telemetry/common/telemetryService';\nimport { combinedAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { TelemetryChannel } from 'vs/server/common/telemetry';\nimport { ExtensionEnvironmentChannel, FileProviderChannel, TerminalProviderChannel } from 'vs/server/node/channel';\nimport { Connection, ExtensionHostConnection, ManagementConnection } from 'vs/server/node/connection';\nimport { TelemetryClient } from 'vs/server/node/insights';\nimport { logger } from 'vs/server/node/logger';\nimport { getLocaleFromConfig, getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { REMOTE_TERMINAL_CHANNEL_NAME } from 'vs/workbench/contrib/terminal/common/remoteTerminalChannel';\nimport { REMOTE_FILE_SYSTEM_CHANNEL_NAME } from 'vs/workbench/services/remote/common/remoteAgentFileSystemChannel';\nimport { RemoteExtensionLogFileName } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { PtyHostService } from 'vs/platform/terminal/node/ptyHostService';\n\nconst commit = product.commit || 'development';\n\nexport class Vscode {\n\tpublic readonly _onDidClientConnect = new Emitter<ClientConnectionEvent>();\n\tpublic readonly onDidClientConnect = this._onDidClientConnect.event;\n\tprivate readonly ipc = new IPCServer<RemoteAgentConnectionContext>(this.onDidClientConnect);\n\n\tprivate readonly maxExtraOfflineConnections = 0;\n\tprivate readonly connections = new Map<ConnectionType, Map<string, Connection>>();\n\n\tprivate readonly services = new ServiceCollection();\n\tprivate servicesPromise?: Promise<void>;\n\n\tpublic async cli(args: NativeParsedArgs): Promise<void> {\n\t\treturn main(args);\n\t}\n\n\tpublic async initialize(options: VscodeOptions): Promise<WorkbenchOptions> {\n\t\tconst transformer = getUriTransformer(options.remoteAuthority);\n\t\tif (!this.servicesPromise) {\n\t\t\tthis.servicesPromise = this.initializeServices(options.args);\n\t\t}\n\t\tawait this.servicesPromise;\n\t\tconst environment = this.services.get(IEnvironmentService) as INativeEnvironmentService;\n\t\tconst startPath = options.startPath;\n\t\tconst parseUrl = (url: string): URI => {\n\t\t\t// This might be a fully-specified URL or just a path.\n\t\t\ttry {\n\t\t\t\treturn URI.parse(url, true);\n\t\t\t} catch (error) {\n\t\t\t\treturn URI.from({\n\t\t\t\t\tscheme: Schemas.vscodeRemote,\n\t\t\t\t\tauthority: options.remoteAuthority,\n\t\t\t\t\tpath: url,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\treturn {\n\t\t\tworkbenchWebConfiguration: {\n\t\t\t\tworkspaceUri: startPath && startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tfolderUri: startPath && !startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tremoteAuthority: options.remoteAuthority,\n\t\t\t\tlogLevel: getLogLevel(environment),\n\t\t\t\tworkspaceProvider: {\n\t\t\t\t\tpayload: [\n\t\t\t\t\t\t['userDataPath', environment.userDataPath],\n\t\t\t\t\t\t['enableProposedApi', JSON.stringify(options.args['enable-proposed-api'] || [])]\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\tremoteUserDataUri: transformer.transformOutgoing(URI.file(environment.userDataPath)),\n\t\t\tproductConfiguration: product,\n\t\t\tnlsConfiguration: await getNlsConfiguration(environment.args.locale || await getLocaleFromConfig(environment.userDataPath), environment.userDataPath),\n\t\t\tcommit,\n\t\t};\n\t}\n\n\tpublic async handleWebSocket(socket: net.Socket, query: Query, permessageDeflate: boolean): Promise<true> {\n\t\tif (!query.reconnectionToken) {\n\t\t\tthrow new Error('Reconnection token is missing from query parameters');\n\t\t}\n\t\tconst protocol = new Protocol(socket, {\n\t\t\treconnectionToken: <string>query.reconnectionToken,\n\t\t\treconnection: query.reconnection === 'true',\n\t\t\tskipWebSocketFrames: query.skipWebSocketFrames === 'true',\n\t\t\tpermessageDeflate,\n\t\t});\n\t\ttry {\n\t\t\tawait this.connect(await protocol.handshake(), protocol);\n\t\t} catch (error) {\n\t\t\tprotocol.destroy(error.message);\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async connect(message: ConnectionTypeRequest, protocol: Protocol): Promise<void> {\n\t\tif (product.commit && message.commit !== product.commit) {\n\t\t\tlogger.warn(`Version mismatch (${message.commit} instead of ${product.commit})`);\n\t\t}\n\n\t\tswitch (message.desiredConnectionType) {\n\t\t\tcase ConnectionType.ExtensionHost:\n\t\t\tcase ConnectionType.Management:\n\t\t\t\t// Initialize connection map for this type of connection.\n\t\t\t\tif (!this.connections.has(message.desiredConnectionType)) {\n\t\t\t\t\tthis.connections.set(message.desiredConnectionType, new Map());\n\t\t\t\t}\n\t\t\t\tconst connections = this.connections.get(message.desiredConnectionType)!;\n\n\t\t\t\tconst token = protocol.options.reconnectionToken;\n\t\t\t\tlet connection = connections.get(token);\n\t\t\t\tif (protocol.options.reconnection && connection) {\n\t\t\t\t\treturn connection.reconnect(protocol);\n\t\t\t\t}\n\n\t\t\t\t// This probably means the process restarted so the session was lost\n\t\t\t\t// while the browser remained open.\n\t\t\t\tif (protocol.options.reconnection) {\n\t\t\t\t\tthrow new Error(`Unable to reconnect; session no longer exists (${token})`);\n\t\t\t\t}\n\n\t\t\t\t// This will probably never happen outside a chance collision.\n\t\t\t\tif (connection) {\n\t\t\t\t\tthrow new Error('Unable to connect; token is already in use');\n\t\t\t\t}\n\n\t\t\t\t// Now that the initial exchange has completed we can create the actual\n\t\t\t\t// connection on top of the protocol then send it to whatever uses it.\n\t\t\t\tif (message.desiredConnectionType === ConnectionType.Management) {\n\t\t\t\t\t// The management connection is used by firing onDidClientConnect\n\t\t\t\t\t// which makes the IPC server become aware of the connection.\n\t\t\t\t\tconnection = new ManagementConnection(protocol);\n\t\t\t\t\tthis._onDidClientConnect.fire({\n\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\tonDidClientDisconnect: connection.onClose,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// The extension host connection is used by spawning an extension host\n\t\t\t\t\t// and passing the socket into it.\n\t\t\t\t\tconnection = new ExtensionHostConnection(\n\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlanguage: 'en',\n\t\t\t\t\t\t\t...message.args,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.services.get(IEnvironmentService) as INativeEnvironmentService,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconnections.set(token, connection);\n\t\t\t\tconnection.onClose(() => connections.delete(token));\n\n\t\t\t\tthis.disposeOldOfflineConnections(connections);\n\t\t\t\tlogger.debug(`${connections.size} active ${connection.name} connection(s)`);\n\t\t\t\tbreak;\n\t\t\tcase ConnectionType.Tunnel:\n\t\t\t\treturn protocol.tunnel();\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unrecognized connection type ${message.desiredConnectionType}`);\n\t\t}\n\t}\n\n\tprivate disposeOldOfflineConnections(connections: Map<string, Connection>): void {\n\t\tconst offline = Array.from(connections.values())\n\t\t\t.filter((connection) => typeof connection.offline !== 'undefined');\n\t\tfor (let i = 0, max = offline.length - this.maxExtraOfflineConnections; i < max; ++i) {\n\t\t\toffline[i].dispose('old');\n\t\t}\n\t}\n\n\t// References:\n\t// ../../electron-browser/sharedProcess/sharedProcessMain.ts#L148\n\t// ../../../code/electron-main/app.ts\n\tprivate async initializeServices(args: NativeParsedArgs): Promise<void> {\n\t\tconst productService = { _serviceBrand: undefined, ...product };\n\t\tconst environmentService = new NativeEnvironmentService(args, productService);\n\n\t\tawait Promise.all([\n\t\t\tenvironmentService.extensionsPath,\n\t\t\tenvironmentService.logsPath,\n\t\t\tenvironmentService.globalStorageHome.fsPath,\n\t\t\tenvironmentService.workspaceStorageHome.fsPath,\n\t\t\t...environmentService.extraExtensionPaths,\n\t\t\t...environmentService.extraBuiltinExtensionPaths,\n\t\t].map((p) => fs.mkdir(p, { recursive: true }).catch((error) => {\n\t\t\tlogger.warn(error.message || error);\n\t\t})));\n\n\t\tconst logService = new MultiplexLogService([\n\t\t\tnew ConsoleLogger(getLogLevel(environmentService)),\n\t\t\tnew SpdLogLogger(RemoteExtensionLogFileName, path.join(environmentService.logsPath, `${RemoteExtensionLogFileName}.log`), false, getLogLevel(environmentService))\n\t\t]);\n\t\tconst fileService = new FileService(logService);\n\t\tfileService.registerProvider(Schemas.file, new DiskFileSystemProvider(logService));\n\n\t\tconst loggerService = new LoggerService(logService, fileService);\n\n\t\tconst piiPaths = [\n\t\t\tpath.join(environmentService.userDataPath, 'clp'), // Language packs.\n\t\t\tenvironmentService.appRoot,\n\t\t\tenvironmentService.extensionsPath,\n\t\t\tenvironmentService.builtinExtensionsPath,\n\t\t\t...environmentService.extraExtensionPaths,\n\t\t\t...environmentService.extraBuiltinExtensionPaths,\n\t\t];\n\n\t\tthis.ipc.registerChannel('logger', new LogLevelChannel(logService));\n\t\tthis.ipc.registerChannel(ExtensionHostDebugBroadcastChannel.ChannelName, new ExtensionHostDebugBroadcastChannel());\n\n\t\tthis.services.set(ILogService, logService);\n\t\tthis.services.set(IEnvironmentService, environmentService);\n\t\tthis.services.set(INativeEnvironmentService, environmentService);\n\t\tthis.services.set(ILoggerService, loggerService);\n\n\t\tconst configurationService = new ConfigurationService(environmentService.settingsResource, fileService);\n\t\tawait configurationService.initialize();\n\t\tthis.services.set(IConfigurationService, configurationService);\n\n\t\tthis.services.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tthis.services.set(IFileService, fileService);\n\t\tthis.services.set(IProductService, productService);\n\n\t\tconst machineId = await getMachineId();\n\n\t\tawait new Promise((resolve) => {\n\t\t\tconst instantiationService = new InstantiationService(this.services);\n\n\t\t\tinstantiationService.invokeFunction((accessor) => {\n\t\t\t\tinstantiationService.createInstance(LogsDataCleaner);\n\n\t\t\t\tlet telemetryService: ITelemetryService;\n\t\t\t\tif (!environmentService.disableTelemetry) {\n\t\t\t\t\ttelemetryService = new TelemetryService({\n\t\t\t\t\t\tappender: combinedAppender(\n\t\t\t\t\t\t\tnew AppInsightsAppender('code-server', null, () => new TelemetryClient() as any),\n\t\t\t\t\t\t\tnew TelemetryLogAppender(accessor.get(ILoggerService), environmentService)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsendErrorTelemetry: true,\n\t\t\t\t\t\tcommonProperties: resolveCommonProperties(\n\t\t\t\t\t\t\tfileService, release(), hostname(), process.arch, commit, product.version, machineId,\n\t\t\t\t\t\t\tundefined, environmentService.installSourcePath, 'code-server',\n\t\t\t\t\t\t),\n\t\t\t\t\t\tpiiPaths,\n\t\t\t\t\t}, configurationService);\n\t\t\t\t} else {\n\t\t\t\t\ttelemetryService = NullTelemetryService;\n\t\t\t\t}\n\n\t\t\t\tthis.services.set(ITelemetryService, telemetryService);\n\n\t\t\t\tthis.services.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\t\t\t\tthis.services.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\t\t\t\tthis.services.set(ILocalizationsService, new SyncDescriptor(LocalizationsService));\n\n\t\t\t\tthis.ipc.registerChannel('extensions', new ExtensionManagementChannel(\n\t\t\t\t\taccessor.get(IExtensionManagementService),\n\t\t\t\t\t(context) => getUriTransformer(context.remoteAuthority),\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('remoteextensionsenvironment', new ExtensionEnvironmentChannel(\n\t\t\t\t\tenvironmentService, logService, telemetryService, '',\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('request', new RequestChannel(accessor.get(IRequestService)));\n\t\t\t\tthis.ipc.registerChannel('telemetry', new TelemetryChannel(telemetryService));\n\t\t\t\tthis.ipc.registerChannel('localizations', <IServerChannel<any>>ProxyChannel.fromService(accessor.get(ILocalizationsService)));\n\t\t\t\tthis.ipc.registerChannel(REMOTE_FILE_SYSTEM_CHANNEL_NAME, new FileProviderChannel(environmentService, logService));\n\n\t\t\t\tconst ptyHostService = new PtyHostService(logService, telemetryService);\n\t\t\t\tthis.ipc.registerChannel(REMOTE_TERMINAL_CHANNEL_NAME, new TerminalProviderChannel(logService, ptyHostService));\n\n\t\t\t\tresolve(new ErrorTelemetry(telemetryService));\n\t\t\t});\n\t\t});\n\t}\n}\n","import { field } from '@coder/logger';\nimport { setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport * as proxyAgent from 'vs/base/node/proxy_agent';\nimport { CodeServerMessage, VscodeMessage } from 'vs/ipc';\nimport { logger } from 'vs/server/node/logger';\nimport { enableCustomMarketplace } from 'vs/server/node/marketplace';\nimport { Vscode } from 'vs/server/node/server';\n\nsetUnexpectedErrorHandler((error) => {\n\tlogger.warn('Uncaught error', field('error', error instanceof Error ? error.message : error));\n});\nenableCustomMarketplace();\nproxyAgent.monkeyPatch(true);\n\n/**\n * Ensure we control when the process exits.\n */\nconst exit = process.exit;\nprocess.exit = function(code?: number) {\n\tlogger.warn(`process.exit() was prevented: ${code || 'unknown code'}.`);\n} as (code?: number) => never;\n\n// Kill VS Code if the parent process dies.\nif (typeof process.env.CODE_SERVER_PARENT_PID !== 'undefined') {\n\tconst parentPid = parseInt(process.env.CODE_SERVER_PARENT_PID, 10);\n\tsetInterval(() => {\n\t\ttry {\n\t\t\tprocess.kill(parentPid, 0); // Throws an exception if the process doesn't exist anymore.\n\t\t} catch (e) {\n\t\t\texit();\n\t\t}\n\t}, 5000);\n} else {\n\tlogger.error('no parent process');\n\texit(1);\n}\n\nconst vscode = new Vscode();\nconst send = (message: VscodeMessage): void => {\n\tif (!process.send) {\n\t\tthrow new Error('not spawned with IPC');\n\t}\n\tprocess.send(message);\n};\n\n// Wait for the init message then start up VS Code. Subsequent messages will\n// return new workbench options without starting a new instance.\nprocess.on('message', async (message: CodeServerMessage, socket) => {\n\tlogger.debug('got message from code-server', field('type', message.type));\n\tlogger.trace('code-server message content', field('message', message));\n\tswitch (message.type) {\n\t\tcase 'init':\n\t\t\ttry {\n\t\t\t\tconst options = await vscode.initialize(message.options);\n\t\t\t\tsend({ type: 'options', id: message.id, options });\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'cli':\n\t\t\ttry {\n\t\t\t\tawait vscode.cli(message.args);\n\t\t\t\texit(0);\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'socket':\n\t\t\tvscode.handleWebSocket(socket, message.query, message.permessageDeflate);\n\t\t\tbreak;\n\t}\n});\nif (!process.send) {\n\tlogger.error('not spawned with IPC');\n\texit(1);\n} else {\n\t// This lets the parent know the child is ready to receive messages.\n\tsend({ type: 'ready' });\n}\n"],"mappings":"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","names":[],"file":"entry.js"}