{"version":3,"sources":["out-vscode/vs/code/browser/workbench/fake","out-vscode/vs/code/browser/workbench/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/util.ts","out-vscode/vs/code/browser/workbench/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/code/browser/workbench/workbench.ts"],"sourcesContent":["}).call(this);","import { URITransformer } from 'vs/base/common/uriIpc';\n\nexport const getUriTransformer = (remoteAuthority: string): URITransformer => {\n\treturn new URITransformer(remoteAuthority);\n};\n\n/**\n * Encode a path for opening via the folder or workspace query parameter. This\n * preserves slashes so it can be edited by hand more easily.\n */\nexport const encodePath = (path: string): string => {\n\treturn path.split('/').map((p) => encodeURIComponent(p)).join('/');\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkbenchConstructionOptions, create, ICredentialsProvider, IURLCallbackProvider, IWorkspaceProvider, IWorkspace, IWindowIndicator, IProductQualityChangeHandler, ISettingsSyncOptions } from 'vs/workbench/workbench.web.api';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { request } from 'vs/base/parts/request/browser/request';\nimport { isFolderToOpen, isWorkspaceToOpen } from 'vs/platform/windows/common/windows';\nimport { isEqual } from 'vs/base/common/resources';\nimport { isStandalone } from 'vs/base/browser/browser';\nimport { localize } from 'vs/nls';\nimport { Schemas } from 'vs/base/common/network';\nimport product from 'vs/platform/product/common/product';\nimport { encodePath } from 'vs/server/node/util';\n\nfunction doCreateUri(path: string, queryValues: Map<string, string>): URI {\n\tlet query: string | undefined = undefined;\n\n\tif (queryValues) {\n\t\tlet index = 0;\n\t\tqueryValues.forEach((value, key) => {\n\t\t\tif (!query) {\n\t\t\t\tquery = '';\n\t\t\t}\n\n\t\t\tconst prefix = (index++ === 0) ? '' : '&';\n\t\t\tquery += `${prefix}${key}=${encodeURIComponent(value)}`;\n\t\t});\n\t}\n\n\treturn URI.parse(window.location.href).with({ path, query });\n}\n\ninterface ICredential {\n\tservice: string;\n\taccount: string;\n\tpassword: string;\n}\n\nclass LocalStorageCredentialsProvider implements ICredentialsProvider {\n\n\tstatic readonly CREDENTIALS_OPENED_KEY = 'credentials.provider';\n\n\tprivate readonly authService: string | undefined;\n\n\tconstructor() {\n\t\tlet authSessionInfo: { readonly id: string, readonly accessToken: string, readonly providerId: string, readonly canSignOut?: boolean, readonly scopes: string[][] } | undefined;\n\t\tconst authSessionElement = document.getElementById('vscode-workbench-auth-session');\n\t\tconst authSessionElementAttribute = authSessionElement ? authSessionElement.getAttribute('data-settings') : undefined;\n\t\tif (authSessionElementAttribute) {\n\t\t\ttry {\n\t\t\t\tauthSessionInfo = JSON.parse(authSessionElementAttribute);\n\t\t\t} catch (error) { /* Invalid session is passed. Ignore. */ }\n\t\t}\n\n\t\tif (authSessionInfo) {\n\t\t\t// Settings Sync Entry\n\t\t\tthis.setPassword(`${product.urlProtocol}.login`, 'account', JSON.stringify(authSessionInfo));\n\n\t\t\t// Auth extension Entry\n\t\t\tthis.authService = `${product.urlProtocol}-${authSessionInfo.providerId}.login`;\n\t\t\tthis.setPassword(this.authService, 'account', JSON.stringify(authSessionInfo.scopes.map(scopes => ({\n\t\t\t\tid: authSessionInfo!.id,\n\t\t\t\tscopes,\n\t\t\t\taccessToken: authSessionInfo!.accessToken\n\t\t\t}))));\n\t\t}\n\t}\n\n\tprivate _credentials: ICredential[] | undefined;\n\tprivate get credentials(): ICredential[] {\n\t\tif (!this._credentials) {\n\t\t\ttry {\n\t\t\t\tconst serializedCredentials = window.localStorage.getItem(LocalStorageCredentialsProvider.CREDENTIALS_OPENED_KEY);\n\t\t\t\tif (serializedCredentials) {\n\t\t\t\t\tthis._credentials = JSON.parse(serializedCredentials);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t}\n\n\t\t\tif (!Array.isArray(this._credentials)) {\n\t\t\t\tthis._credentials = [];\n\t\t\t}\n\t\t}\n\n\t\treturn this._credentials;\n\t}\n\n\tprivate save(): void {\n\t\twindow.localStorage.setItem(LocalStorageCredentialsProvider.CREDENTIALS_OPENED_KEY, JSON.stringify(this.credentials));\n\t}\n\n\tasync getPassword(service: string, account: string): Promise<string | null> {\n\t\treturn this.doGetPassword(service, account);\n\t}\n\n\tprivate async doGetPassword(service: string, account?: string): Promise<string | null> {\n\t\tfor (const credential of this.credentials) {\n\t\t\tif (credential.service === service) {\n\t\t\t\tif (typeof account !== 'string' || account === credential.account) {\n\t\t\t\t\treturn credential.password;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync setPassword(service: string, account: string, password: string): Promise<void> {\n\t\tthis.doDeletePassword(service, account);\n\n\t\tthis.credentials.push({ service, account, password });\n\n\t\tthis.save();\n\n\t\ttry {\n\t\t\tif (password && service === this.authService) {\n\t\t\t\tconst value = JSON.parse(password);\n\t\t\t\tif (Array.isArray(value) && value.length === 0) {\n\t\t\t\t\tawait this.logout(service);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tasync deletePassword(service: string, account: string): Promise<boolean> {\n\t\tconst result = await this.doDeletePassword(service, account);\n\n\t\tif (result && service === this.authService) {\n\t\t\ttry {\n\t\t\t\tawait this.logout(service);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async doDeletePassword(service: string, account: string): Promise<boolean> {\n\t\tlet found = false;\n\n\t\tthis._credentials = this.credentials.filter(credential => {\n\t\t\tif (credential.service === service && credential.account === account) {\n\t\t\t\tfound = true;\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tif (found) {\n\t\t\tthis.save();\n\t\t}\n\n\t\treturn found;\n\t}\n\n\tasync findPassword(service: string): Promise<string | null> {\n\t\treturn this.doGetPassword(service);\n\t}\n\n\tasync findCredentials(service: string): Promise<Array<{ account: string, password: string }>> {\n\t\treturn this.credentials\n\t\t\t.filter(credential => credential.service === service)\n\t\t\t.map(({ account, password }) => ({ account, password }));\n\t}\n\n\tprivate async logout(service: string): Promise<void> {\n\t\tconst queryValues: Map<string, string> = new Map();\n\t\tqueryValues.set('logout', String(true));\n\t\tqueryValues.set('service', service);\n\n\t\tawait request({\n\t\t\turl: doCreateUri('/auth/logout', queryValues).toString(true)\n\t\t}, CancellationToken.None);\n\t}\n}\n\nclass PollingURLCallbackProvider extends Disposable implements IURLCallbackProvider {\n\n\tstatic readonly FETCH_INTERVAL = 500; \t\t\t// fetch every 500ms\n\tstatic readonly FETCH_TIMEOUT = 5 * 60 * 1000; \t// ...but stop after 5min\n\n\tstatic readonly QUERY_KEYS = {\n\t\tREQUEST_ID: 'vscode-requestId',\n\t\tSCHEME: 'vscode-scheme',\n\t\tAUTHORITY: 'vscode-authority',\n\t\tPATH: 'vscode-path',\n\t\tQUERY: 'vscode-query',\n\t\tFRAGMENT: 'vscode-fragment'\n\t};\n\n\tprivate readonly _onCallback = this._register(new Emitter<URI>());\n\treadonly onCallback = this._onCallback.event;\n\n\tcreate(options?: Partial<UriComponents>): URI {\n\t\tconst queryValues: Map<string, string> = new Map();\n\n\t\tconst requestId = generateUuid();\n\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.REQUEST_ID, requestId);\n\n\t\tconst { scheme, authority, path, query, fragment } = options ? options : { scheme: undefined, authority: undefined, path: undefined, query: undefined, fragment: undefined };\n\n\t\tif (scheme) {\n\t\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.SCHEME, scheme);\n\t\t}\n\n\t\tif (authority) {\n\t\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.AUTHORITY, authority);\n\t\t}\n\n\t\tif (path) {\n\t\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.PATH, path);\n\t\t}\n\n\t\tif (query) {\n\t\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.QUERY, query);\n\t\t}\n\n\t\tif (fragment) {\n\t\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.FRAGMENT, fragment);\n\t\t}\n\n\t\t// Start to poll on the callback being fired\n\t\tthis.periodicFetchCallback(requestId, Date.now());\n\n\t\treturn doCreateUri('/callback', queryValues);\n\t}\n\n\tprivate async periodicFetchCallback(requestId: string, startTime: number): Promise<void> {\n\n\t\t// Ask server for callback results\n\t\tconst queryValues: Map<string, string> = new Map();\n\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.REQUEST_ID, requestId);\n\n\t\tconst result = await request({\n\t\t\turl: doCreateUri('/fetch-callback', queryValues).toString(true)\n\t\t}, CancellationToken.None);\n\n\t\t// Check for callback results\n\t\tconst content = await streamToBuffer(result.stream);\n\t\tif (content.byteLength > 0) {\n\t\t\ttry {\n\t\t\t\tthis._onCallback.fire(URI.revive(JSON.parse(content.toString())));\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\n\t\t\treturn; // done\n\t\t}\n\n\t\t// Continue fetching unless we hit the timeout\n\t\tif (Date.now() - startTime < PollingURLCallbackProvider.FETCH_TIMEOUT) {\n\t\t\tsetTimeout(() => this.periodicFetchCallback(requestId, startTime), PollingURLCallbackProvider.FETCH_INTERVAL);\n\t\t}\n\t}\n}\n\nclass WorkspaceProvider implements IWorkspaceProvider {\n\n\tstatic QUERY_PARAM_EMPTY_WINDOW = 'ew';\n\tstatic QUERY_PARAM_FOLDER = 'folder';\n\tstatic QUERY_PARAM_WORKSPACE = 'workspace';\n\n\tstatic QUERY_PARAM_PAYLOAD = 'payload';\n\n\treadonly trusted = true;\n\n\tconstructor(\n\t\tpublic readonly workspace: IWorkspace,\n\t\tpublic readonly payload: object\n\t) { }\n\n\tasync open(workspace: IWorkspace, options?: { reuse?: boolean, payload?: object }): Promise<boolean> {\n\t\tif (options?.reuse && !options.payload && this.isSame(this.workspace, workspace)) {\n\t\t\treturn true; // return early if workspace and environment is not changing and we are reusing window\n\t\t}\n\n\t\tconst targetHref = this.createTargetUrl(workspace, options);\n\t\tif (targetHref) {\n\t\t\tif (options?.reuse) {\n\t\t\t\twindow.location.href = targetHref;\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tlet result;\n\t\t\t\tif (isStandalone) {\n\t\t\t\t\tresult = window.open(targetHref, '_blank', 'toolbar=no'); // ensures to open another 'standalone' window!\n\t\t\t\t} else {\n\t\t\t\t\tresult = window.open(targetHref);\n\t\t\t\t}\n\n\t\t\t\treturn !!result;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate createTargetUrl(workspace: IWorkspace, options?: { reuse?: boolean, payload?: object }): string | undefined {\n\n\t\t// Empty\n\t\tlet targetHref: string | undefined = undefined;\n\t\tif (!workspace) {\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_EMPTY_WINDOW}=true`;\n\t\t}\n\n\t\t// Folder\n\t\telse if (isFolderToOpen(workspace)) {\n\t\t\tconst target = workspace.folderUri.scheme === Schemas.vscodeRemote\n\t\t\t\t? encodePath(workspace.folderUri.path)\n\t\t\t\t: encodeURIComponent(workspace.folderUri.toString());\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_FOLDER}=${target}`;\n\t\t}\n\n\t\t// Workspace\n\t\telse if (isWorkspaceToOpen(workspace)) {\n\t\t\tconst target = workspace.workspaceUri.scheme === Schemas.vscodeRemote\n\t\t\t\t? encodePath(workspace.workspaceUri.path)\n\t\t\t\t: encodeURIComponent(workspace.workspaceUri.toString());\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_WORKSPACE}=${target}`;\n\t\t}\n\n\t\t// Append payload if any\n\t\tif (options?.payload) {\n\t\t\ttargetHref += `&${WorkspaceProvider.QUERY_PARAM_PAYLOAD}=${encodeURIComponent(JSON.stringify(options.payload))}`;\n\t\t}\n\n\t\treturn targetHref;\n\t}\n\n\tprivate isSame(workspaceA: IWorkspace, workspaceB: IWorkspace): boolean {\n\t\tif (!workspaceA || !workspaceB) {\n\t\t\treturn workspaceA === workspaceB; // both empty\n\t\t}\n\n\t\tif (isFolderToOpen(workspaceA) && isFolderToOpen(workspaceB)) {\n\t\t\treturn isEqual(workspaceA.folderUri, workspaceB.folderUri); // same workspace\n\t\t}\n\n\t\tif (isWorkspaceToOpen(workspaceA) && isWorkspaceToOpen(workspaceB)) {\n\t\t\treturn isEqual(workspaceA.workspaceUri, workspaceB.workspaceUri); // same workspace\n\t\t}\n\n\t\treturn false;\n\t}\n\n\thasRemote(): boolean {\n\t\tif (this.workspace) {\n\t\t\tif (isFolderToOpen(this.workspace)) {\n\t\t\t\treturn this.workspace.folderUri.scheme === Schemas.vscodeRemote;\n\t\t\t}\n\n\t\t\tif (isWorkspaceToOpen(this.workspace)) {\n\t\t\t\treturn this.workspace.workspaceUri.scheme === Schemas.vscodeRemote;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nclass WindowIndicator implements IWindowIndicator {\n\n\treadonly onDidChange = Event.None;\n\n\treadonly label: string;\n\treadonly tooltip: string;\n\treadonly command: string | undefined;\n\n\tconstructor(workspace: IWorkspace) {\n\t\tlet repositoryOwner: string | undefined = undefined;\n\t\tlet repositoryName: string | undefined = undefined;\n\n\t\tif (workspace) {\n\t\t\tlet uri: URI | undefined = undefined;\n\t\t\tif (isFolderToOpen(workspace)) {\n\t\t\t\turi = workspace.folderUri;\n\t\t\t} else if (isWorkspaceToOpen(workspace)) {\n\t\t\t\turi = workspace.workspaceUri;\n\t\t\t}\n\n\t\t\tif (uri?.scheme === 'github' || uri?.scheme === 'codespace') {\n\t\t\t\t[repositoryOwner, repositoryName] = uri.authority.split('+');\n\t\t\t}\n\t\t}\n\n\t\t// Repo\n\t\tif (repositoryName && repositoryOwner) {\n\t\t\tthis.label = localize('playgroundLabelRepository', \"$(remote) VS Code Web Playground: {0}/{1}\", repositoryOwner, repositoryName);\n\t\t\tthis.tooltip = localize('playgroundRepositoryTooltip', \"VS Code Web Playground: {0}/{1}\", repositoryOwner, repositoryName);\n\t\t}\n\n\t\t// No Repo\n\t\telse {\n\t\t\tthis.label = localize('playgroundLabel', \"$(remote) VS Code Web Playground\");\n\t\t\tthis.tooltip = localize('playgroundTooltip', \"VS Code Web Playground\");\n\t\t}\n\t}\n}\n\n(function () {\n\n\t// Find config by checking for DOM\n\tconst configElement = document.getElementById('vscode-workbench-web-configuration');\n\tconst configElementAttribute = configElement ? configElement.getAttribute('data-settings') : undefined;\n\tif (!configElement || !configElementAttribute) {\n\t\tthrow new Error('Missing web configuration element');\n\t}\n\n\tconst config: IWorkbenchConstructionOptions & { folderUri?: UriComponents, workspaceUri?: UriComponents } = {\n\t\twebviewEndpoint: `${window.location.origin}${window.location.pathname.replace(/\\/+$/, '')}/webview`,\n\t\t...JSON.parse(configElementAttribute),\n\t};\n\n\t// Strip the protocol from the authority if it exists.\n\tconst normalizeAuthority = (authority: string): string => authority.replace(/^https?:\\/\\//, '');\n\tif (config.remoteAuthority) {\n\t\t(config as any).remoteAuthority = normalizeAuthority(config.remoteAuthority);\n\t}\n\tif (config.workspaceUri && config.workspaceUri.authority) {\n\t\tconfig.workspaceUri.authority = normalizeAuthority(config.workspaceUri.authority);\n\t}\n\tif (config.folderUri && config.folderUri.authority) {\n\t\tconfig.folderUri.authority = normalizeAuthority(config.folderUri.authority);\n\t}\n\n\t// Find workspace to open and payload\n\tlet foundWorkspace = false;\n\tlet workspace: IWorkspace;\n\tlet payload = config.workspaceProvider?.payload || Object.create(null);\n\n\t// If no workspace is provided through the URL, check for config attribute from server\n\tif (!foundWorkspace) {\n\t\tif (config.folderUri) {\n\t\t\tworkspace = { folderUri: URI.revive(config.folderUri) };\n\t\t} else if (config.workspaceUri) {\n\t\t\tworkspace = { workspaceUri: URI.revive(config.workspaceUri) };\n\t\t} else {\n\t\t\tworkspace = undefined;\n\t\t}\n\t}\n\n\t// Workspace Provider\n\tconst workspaceProvider = new WorkspaceProvider(workspace, payload);\n\n\t// Window indicator (unless connected to a remote)\n\tlet windowIndicator: WindowIndicator | undefined = undefined;\n\tif (!workspaceProvider.hasRemote()) {\n\t\twindowIndicator = new WindowIndicator(workspace);\n\t}\n\n\t// Product Quality Change Handler\n\tconst productQualityChangeHandler: IProductQualityChangeHandler = (quality) => {\n\t\tlet queryString = `quality=${quality}`;\n\n\t\t// Save all other query params we might have\n\t\tconst query = new URL(document.location.href).searchParams;\n\t\tquery.forEach((value, key) => {\n\t\t\tif (key !== 'quality') {\n\t\t\t\tqueryString += `&${key}=${value}`;\n\t\t\t}\n\t\t});\n\n\t\twindow.location.href = `${window.location.origin}?${queryString}`;\n\t};\n\n\t// settings sync options\n\tconst settingsSyncOptions: ISettingsSyncOptions | undefined = config.settingsSyncOptions ? {\n\t\tenabled: config.settingsSyncOptions.enabled,\n\t\tenablementHandler: (enablement) => {\n\t\t\tlet queryString = `settingsSync=${enablement ? 'true' : 'false'}`;\n\n\t\t\t// Save all other query params we might have\n\t\t\tconst query = new URL(document.location.href).searchParams;\n\t\t\tquery.forEach((value, key) => {\n\t\t\t\tif (key !== 'settingsSync') {\n\t\t\t\t\tqueryString += `&${key}=${value}`;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\twindow.location.href = `${window.location.origin}?${queryString}`;\n\t\t}\n\t} : undefined;\n\n\t// Finally create workbench\n\tcreate(document.body, {\n\t\t...config,\n\t\tsettingsSyncOptions,\n\t\twindowIndicator,\n\t\tproductQualityChangeHandler,\n\t\tworkspaceProvider,\n\t\turlCallbackProvider: new PollingURLCallbackProvider(),\n\t\tcredentialsProvider: new LocalStorageCredentialsProvider()\n\t});\n})();\n"],"mappings":"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","names":[],"file":"workbench.js"}