!function(e,r){for(var t in r)e[t]=r[t]}(exports,function(e){var r={};function t(o){if(r[o])return r[o].exports;var s=r[o]={i:o,l:!1,exports:{}};return e[o].call(s.exports,s,s.exports,t),s.l=!0,s.exports}return t.m=e,t.c=r,t.d=function(e,r,o){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var s in e)t.d(o,s,function(r){return e[r]}.bind(null,s));return o},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=14)}([function(e,r){e.exports=require("stream")},function(e,r){e.exports=require("zlib")},function(e,r){e.exports=require("vscode")},function(e,r){e.exports=require("url")},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.getOctokit=r.getSession=void 0;const o=t(2),s=t(6),n=t(16),i=t(3);const a=["repo","workflow"];async function c(){return await o.authentication.getSession("github",a,{createIfNone:!0})}let u;r.getSession=c,r.getOctokit=function(){return u||(u=c().then(async e=>{const r=e.accessToken,a=function(e=process.env.HTTPS_PROXY){if(!e)return s.globalAgent;try{const{hostname:r,port:t,username:o,password:s}=new i.URL(e),a=o&&s&&`${o}:${s}`;return n.httpsOverHttp({proxy:{host:r,port:t,proxyAuth:a}})}catch(e){return o.window.showErrorMessage("HTTPS_PROXY environment variable ignored: "+e.message),s.globalAgent}}(),{Octokit:c}=await Promise.resolve().then(()=>t(30));return new c({request:{agent:a},userAgent:"GitHub VSCode",auth:"token "+r})}).then(null,async e=>{throw u=void 0,e})),u}},function(e,r){e.exports=require("path")},function(e,r){e.exports=require("https")},function(e,r){e.exports=require("http")},function(e,r){e.exports=require("util")},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.publishRepository=void 0;const o=t(2),s=t(10),n=t(4),i=t(8),a=t(5),c=s.loadMessageBundle(t(5).join(__dirname,"publish.ts"));function u(e){return Promise.race([new Promise(r=>e.onDidAccept(()=>e.selectedItems.length>0&&r(e.selectedItems[0]))),new Promise(r=>e.onDidHide(()=>r(void 0)))])}r.publishRepository=async function(e,r){var t,s;if(!(null===(t=o.workspace.workspaceFolders)||void 0===t?void 0:t.length))return;let l;if(r)l=r.rootUri;else if(1===e.repositories.length)r=e.repositories[0],l=r.rootUri;else if(1===o.workspace.workspaceFolders.length)l=o.workspace.workspaceFolders[0].uri;else{const e=o.workspace.workspaceFolders.map(e=>({label:e.name,folder:e})),r=c(0,null),t=await o.window.showQuickPick(e,{placeHolder:r});if(!t)return;l=t.folder.uri}let p,d,m,g,h=o.window.createQuickPick();h.ignoreFocusOut=!0,h.placeholder="Repository Name",h.value=a.basename(l.fsPath),h.show(),h.busy=!0;try{d=await n.getOctokit();const e=await d.users.getAuthenticated({});p=e.data.login}catch(e){return void h.dispose()}h.busy=!1;const f=async()=>{const e=h.value.trim().replace(/[^a-z0-9_.]/gi,"-");h.items=e?[{label:"$(repo) Publish to GitHub private repository",description:`$(github) ${p}/${e}`,alwaysShow:!0,repo:e,isPrivate:!0},{label:"$(repo) Publish to GitHub public repository",description:`$(github) ${p}/${e}`,alwaysShow:!0,repo:e,isPrivate:!1}]:[]};for(f();;){const e=h.onDidChangeValue(f),r=await u(h);if(e.dispose(),m=null==r?void 0:r.repo,g=null===(s=null==r?void 0:r.isPrivate)||void 0===s||s,m)try{h.busy=!0,await d.repos.get({owner:p,repo:m}),h.items=[{label:"$(error) GitHub repository already exists",description:`$(github) ${p}/${m}`,alwaysShow:!0}]}catch(e){break}finally{h.busy=!1}}if(h.dispose(),!m)return;if(!r){const e=o.Uri.joinPath(l,".gitignore");let r=!1;try{await o.workspace.fs.stat(e)}catch(e){r=!0}if(r){h=o.window.createQuickPick(),h.placeholder=c(1,null),h.canSelectMany=!0,h.show();try{h.busy=!0;const r=(await o.workspace.fs.readDirectory(l)).map(([e])=>e).filter(e=>".git"!==e);h.items=r.map(e=>({label:e})),h.selectedItems=h.items,h.busy=!1;const t=await Promise.race([new Promise(e=>h.onDidAccept(()=>e(h.selectedItems))),new Promise(e=>h.onDidHide(()=>e(void 0)))]);if(!t||0===t.length)return;const s=new Set(r);if(t.forEach(e=>s.delete(e.label)),s.size>0){const r=[...s].map(e=>"/"+e).join("\n"),t=new i.TextEncoder;await o.workspace.fs.writeFile(e,t.encode(r))}}finally{h.dispose()}}}const b=await o.window.withProgress({location:o.ProgressLocation.Notification,cancellable:!1,title:"Publish to GitHub"},async t=>{t.report({message:c(g?2:3,null),increment:25});const o=(await d.repos.createForAuthenticatedUser({name:m,private:g})).data;if(t.report({message:c(4,null),increment:25}),!r){if(!(r=await e.init(l)||void 0))return;await r.commit("first commit",{all:!0})}t.report({message:c(5,null),increment:25});const s=await r.getBranch("HEAD");return await r.addRemote("origin",o.clone_url),await r.push("origin",s.name,!0),o});if(!b)return;const w=c(6,null);o.window.showInformationMessage(c(7,null,`${p}/${m}`),w).then(e=>{e===w&&o.commands.executeCommand("vscode.open",o.Uri.parse(b.html_url))})}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var o,s,n,i,a,c,u=t(5),l=t(26),p=Object.prototype.toString;function d(e){return void 0!==e}function m(e){return"[object Number]"===p.call(e)}function g(e){return"[object String]"===p.call(e)}function h(e){return JSON.parse(l.readFileSync(e,"utf8"))}function f(e,r){return c&&(e="［"+e.replace(/[aouei]/g,"$&$&")+"］"),0===r.length?e:e.replace(/\{(\d+)\}/g,(function(e,t){var o=t[0],s=r[o],n=e;return"string"==typeof s?n=s:"number"!=typeof s&&"boolean"!=typeof s&&null!=s||(n=String(s)),n}))}function b(e){return function(r,t){for(var o=[],s=2;s<arguments.length;s++)o[s-2]=arguments[s];return m(r)?r>=e.length?void console.error("Broken localize call found. Index out of bounds. Stacktrace is\n: "+new Error("").stack):f(e[r],o):g(t)?(console.warn("Message "+t+" didn't get externalized correctly."),f(t,o)):void console.error("Broken localize call found. Stacktrace is\n: "+new Error("").stack)}}function w(e,r){for(var t=[],o=2;o<arguments.length;o++)t[o-2]=arguments[o];return f(r,t)}function T(e,r){return i[e]=r,r}function E(e,r){var t,o,s,n=u.join(a.cacheRoot,e.id+"-"+e.hash+".json"),i=!1,c=!1;try{return t=JSON.parse(l.readFileSync(n,{encoding:"utf8",flag:"r"})),o=n,s=new Date,l.utimes(o,s,s,(function(){})),t}catch(e){if("ENOENT"===e.code)c=!0;else{if(!(e instanceof SyntaxError))throw e;console.log("Syntax error parsing message bundle: "+e.message+"."),l.unlink(n,(function(e){e&&console.error("Deleting corrupted bundle "+n+" failed.")})),i=!0}}if(!(t=function(e,r){var t=a.translationsConfig[e.id];if(t){var o=h(t).contents,s=h(u.join(r,"nls.metadata.json")),n=Object.create(null);for(var i in s){var c=s[i],l=o[e.outDir+"/"+i];if(l){for(var p=[],d=0;d<c.keys.length;d++){var m=c.keys[d],f=l[g(m)?m:m.key];void 0===f&&(f=c.messages[d]),p.push(f)}n[i]=p}else n[i]=c.messages}return n}}(e,r))||i)return t;if(c)try{l.writeFileSync(n,JSON.stringify(t),{encoding:"utf8",flag:"wx"})}catch(e){if("EEXIST"===e.code)return t;throw e}return t}function y(e){try{return function(e){var r=h(u.join(e,"nls.metadata.json")),t=Object.create(null);for(var o in r){var s=r[o];t[o]=s.messages}return t}(e)}catch(e){return void console.log("Generating default bundle from meta data failed.",e)}}function v(e,r){var t;if(!0===a.languagePackSupport&&void 0!==a.cacheRoot&&void 0!==a.languagePackId&&void 0!==a.translationsConfigFile&&void 0!==a.translationsConfig)try{t=E(e,r)}catch(e){console.log("Load or create bundle failed ",e)}if(!t){if(a.languagePackSupport)return y(r);var o=function(e){for(var r=a.language;r;){var t=u.join(e,"nls.bundle."+r+".json");if(l.existsSync(t))return t;var o=r.lastIndexOf("-");r=o>0?r.substring(0,o):void 0}if(void 0===r){t=u.join(e,"nls.bundle.json");if(l.existsSync(t))return t}}(r);if(o)try{return h(o)}catch(e){console.log("Loading in the box message bundle failed.",e)}t=y(r)}return t}function _(e){if(!e)return w;var r=u.extname(e);if(r&&(e=e.substr(0,e.length-r.length)),a.messageFormat===o.both||a.messageFormat===o.bundle){var t=function(e){for(var r,t=u.dirname(e);r=u.join(t,"nls.metadata.header.json"),!l.existsSync(r);){var o=u.dirname(t);if(o===t){r=void 0;break}t=o}return r}(e);if(t){var s=u.dirname(t),n=i[s];if(void 0===n)try{var p=JSON.parse(l.readFileSync(t,"utf8"));try{var m=v(p,s);n=T(s,m?{header:p,nlsBundle:m}:null)}catch(e){console.error("Failed to load nls bundle",e),n=T(s,null)}}catch(e){console.error("Failed to read header file",e),n=T(s,null)}if(n){var g=e.substr(s.length+1).replace(/\\/g,"/"),f=n.nlsBundle[g];return void 0===f?(console.error("Messages for file "+e+" not found. See console for details."),function(){return"Messages not found."}):b(f)}}}if(a.messageFormat===o.both||a.messageFormat===o.file)try{var E=h(function(e){var r;if(a.cacheLanguageResolution&&r)r=r;else{if(c||!a.language)r=".nls.json";else for(var t=a.language;t;){var o=".nls."+t+".json";if(l.existsSync(e+o)){r=o;break}var s=t.lastIndexOf("-");s>0?t=t.substring(0,s):(r=".nls.json",t=null)}a.cacheLanguageResolution&&(r=r)}return e+r}(e));return Array.isArray(E)?b(E):d(E.messages)&&d(E.keys)?b(E.messages):(console.error("String bundle '"+e+"' uses an unsupported format."),function(){return"File bundle has unsupported format. See console for details"})}catch(e){"ENOENT"!==e.code&&console.error("Failed to load single file bundle",e)}return console.error("Failed to load message bundle for file "+e),function(){return"Failed to load message bundle. See console for details."}}!function(e){e.file="file",e.bundle="bundle",e.both="both"}(o=r.MessageFormat||(r.MessageFormat={})),function(e){e.standalone="standalone",e.languagePack="languagePack"}(s=r.BundleFormat||(r.BundleFormat={})),function(e){e.is=function(e){var r=e;return r&&d(r.key)&&d(r.comment)}}(n||(n={})),function(){if(a={locale:void 0,language:void 0,languagePackSupport:!1,cacheLanguageResolution:!0,messageFormat:o.bundle},g(process.env.VSCODE_NLS_CONFIG))try{var e=JSON.parse(process.env.VSCODE_NLS_CONFIG),r=void 0;if(e.availableLanguages){var t=e.availableLanguages["*"];g(t)&&(r=t)}if(g(e.locale)&&(a.locale=e.locale.toLowerCase()),void 0===r?a.language=a.locale:"en"!==r&&(a.language=r),function(e){return!0===e||!1===e}(e._languagePackSupport)&&(a.languagePackSupport=e._languagePackSupport),g(e._cacheRoot)&&(a.cacheRoot=e._cacheRoot),g(e._languagePackId)&&(a.languagePackId=e._languagePackId),g(e._translationsConfigFile)){a.translationsConfigFile=e._translationsConfigFile;try{a.translationsConfig=h(a.translationsConfigFile)}catch(r){if(e._corruptedFile){var s=u.dirname(e._corruptedFile);l.exists(s,(function(r){r&&l.writeFile(e._corruptedFile,"corrupted","utf8",(function(e){console.error(e)}))}))}}}}catch(e){}c="pseudo"===a.locale,void 0,i=Object.create(null)}(),r.loadMessageBundle=_,r.config=function(e){return e&&(g(e.locale)&&(a.locale=e.locale.toLowerCase(),a.language=a.locale,void 0,i=Object.create(null)),void 0!==e.messageFormat&&(a.messageFormat=e.messageFormat),e.bundleFormat===s.standalone&&!0===a.languagePackSupport&&(a.languagePackSupport=!1)),c="pseudo"===a.locale,_}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.combinedDisposable=r.dispose=void 0;const o=t(2);function s(e){if(e instanceof o.Disposable)e.dispose();else for(const r of e)r.dispose()}r.dispose=s,r.combinedDisposable=function(e){return{dispose(){s(e)}}}},function(e,r,t){var o=t(22),s=t(23),n=t(24),i=Function.bind,a=i.bind(i);function c(e,r,t){var o=a(n,null).apply(null,t?[r,t]:[r]);e.api={remove:o},e.remove=o,["before","error","after","wrap"].forEach((function(o){var n=t?[r,o,t]:[r,o];e[o]=e.api[o]=a(s,null).apply(null,n)}))}function u(){var e={registry:{}},r=o.bind(null,e);return c(r,e),r}var l=!1;function p(){return l||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),l=!0),u()}p.Singular=function(){var e={registry:{}},r=o.bind(null,e,"h");return c(r,e,"h"),r}.bind(),p.Collection=u.bind(),e.exports=p,e.exports.Hook=p,e.exports.Singular=p.Singular,e.exports.Collection=p.Collection},function(e,r,t){var o=t(25);function s(e){var r=function(){return r.called?r.value:(r.called=!0,r.value=e.apply(this,arguments))};return r.called=!1,r}function n(e){var r=function(){if(r.called)throw new Error(r.onceError);return r.called=!0,r.value=e.apply(this,arguments)},t=e.name||"Function wrapped with `once`";return r.onceError=t+" shouldn't be called more than once",r.called=!1,r}e.exports=o(s),e.exports.strict=o(n),s.proto=s((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return s(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return n(this)},configurable:!0})}))},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.activate=void 0;const o=t(2),s=t(15),n=t(27),i=t(28),a=t(11),c=t(29);r.activate=function(e){const r=new Set;e.subscriptions.push(a.combinedDisposable(r));const t=e=>{e?(()=>{try{const e=u.getAPI(1);r.add(n.registerCommands(e)),r.add(e.registerRemoteSourceProvider(new s.GithubRemoteSourceProvider(e))),r.add(new i.GithubCredentialProviderManager(e)),r.add(e.registerPushErrorHandler(new c.GithubPushErrorHandler))}catch(e){console.error("Could not initialize GitHub extension"),console.warn(e)}})():(a.dispose(r),r.clear())},u=o.extensions.getExtension("vscode.git").exports;e.subscriptions.push(u.onDidChangeEnablement(t)),t(u.enabled)}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.GithubRemoteSourceProvider=void 0;const o=t(4),s=t(9);function n(e){var r;const t=/^https:\/\/github\.com\/([^/]+)\/([^/]+)\.git/i.exec(e)||/^git@github\.com:([^/]+)\/([^/]+)\.git/i.exec(e);return null!==(r=t&&{owner:t[1],repo:t[2]})&&void 0!==r?r:void 0}function i(e){return{name:"$(github) "+e.full_name,description:e.description||void 0,url:e.clone_url}}r.GithubRemoteSourceProvider=class{constructor(e){this.gitAPI=e,this.name="GitHub",this.icon="github",this.supportsQuery=!0,this.userReposCache=[]}async getRemoteSources(e){const r=await o.getOctokit();if(e){const t=n(e);if(t){return[i((await r.repos.get(t)).data)]}}const t=await Promise.all([this.getQueryRemoteSources(r,e),this.getUserRemoteSources(r,e)]),s=new Map;for(const e of t)for(const r of e)s.set(r.name,r);return[...s.values()]}async getUserRemoteSources(e,r){if(!r){const r=(await e.users.getAuthenticated({})).data.login,t=await e.repos.listForUser({username:r,sort:"updated",per_page:100});this.userReposCache=t.data.map(i)}return this.userReposCache}async getQueryRemoteSources(e,r){if(!r)return[];return(await e.search.repos({q:r,sort:"stars"})).data.items.map(i)}async getBranches(e){const r=n(e);if(!r)return[];const t=await o.getOctokit(),s=[];let i=1;for(;;){let e=await t.repos.listBranches({...r,per_page:100,page:i});if(0===e.data.length)break;s.push(...e.data.map(e=>e.name)),i++}const a=(await t.repos.get(r)).data.default_branch;return s.sort((e,r)=>e===a?-1:r===a?1:0)}publishRepository(e){return s.publishRepository(this.gitAPI,e)}}},function(e,r,t){e.exports=t(17)},function(e,r,t){"use strict";t(18);var o,s=t(19),n=t(7),i=t(6),a=t(20),c=(t(21),t(8));function u(e){var r=this;r.options=e||{},r.proxyOptions=r.options.proxy||{},r.maxSockets=r.options.maxSockets||n.Agent.defaultMaxSockets,r.requests=[],r.sockets=[],r.on("free",(function(e,t,o,s){for(var n=p(t,o,s),i=0,a=r.requests.length;i<a;++i){var c=r.requests[i];if(c.host===n.host&&c.port===n.port)return r.requests.splice(i,1),void c.request.onSocket(e)}e.destroy(),r.removeSocket(e)}))}function l(e,r){var t=this;u.prototype.createSocket.call(t,e,(function(o){var n=e.request.getHeader("host"),i=d({},t.options,{socket:o,servername:n?n.replace(/:.*$/,""):e.host}),a=s.connect(0,i);t.sockets[t.sockets.indexOf(o)]=a,r(a)}))}function p(e,r,t){return"string"==typeof e?{host:e,port:r,localAddress:t}:e}function d(e){for(var r=1,t=arguments.length;r<t;++r){var o=arguments[r];if("object"==typeof o)for(var s=Object.keys(o),n=0,i=s.length;n<i;++n){var a=s[n];void 0!==o[a]&&(e[a]=o[a])}}return e}r.httpOverHttp=function(e){var r=new u(e);return r.request=n.request,r},r.httpsOverHttp=function(e){var r=new u(e);return r.request=n.request,r.createSocket=l,r.defaultPort=443,r},r.httpOverHttps=function(e){var r=new u(e);return r.request=i.request,r},r.httpsOverHttps=function(e){var r=new u(e);return r.request=i.request,r.createSocket=l,r.defaultPort=443,r},c.inherits(u,a.EventEmitter),u.prototype.addRequest=function(e,r,t,o){var s=this,n=d({request:e},s.options,p(r,t,o));s.sockets.length>=this.maxSockets?s.requests.push(n):s.createSocket(n,(function(r){function t(){s.emit("free",r,n)}function o(e){s.removeSocket(r),r.removeListener("free",t),r.removeListener("close",o),r.removeListener("agentRemove",o)}r.on("free",t),r.on("close",o),r.on("agentRemove",o),e.onSocket(r)}))},u.prototype.createSocket=function(e,r){var t=this,s={};t.sockets.push(s);var n=d({},t.proxyOptions,{method:"CONNECT",path:e.host+":"+e.port,agent:!1,headers:{host:e.host+":"+e.port}});e.localAddress&&(n.localAddress=e.localAddress),n.proxyAuth&&(n.headers=n.headers||{},n.headers["Proxy-Authorization"]="Basic "+new Buffer(n.proxyAuth).toString("base64")),o("making CONNECT request");var i=t.request(n);function a(n,a,c){var u;return i.removeAllListeners(),a.removeAllListeners(),200!==n.statusCode?(o("tunneling socket could not be established, statusCode=%d",n.statusCode),a.destroy(),(u=new Error("tunneling socket could not be established, statusCode="+n.statusCode)).code="ECONNRESET",e.request.emit("error",u),void t.removeSocket(s)):c.length>0?(o("got illegal response body from proxy"),a.destroy(),(u=new Error("got illegal response body from proxy")).code="ECONNRESET",e.request.emit("error",u),void t.removeSocket(s)):(o("tunneling connection has established"),t.sockets[t.sockets.indexOf(s)]=a,r(a))}i.useChunkedEncodingByDefault=!1,i.once("response",(function(e){e.upgrade=!0})),i.once("upgrade",(function(e,r,t){process.nextTick((function(){a(e,r,t)}))})),i.once("connect",a),i.once("error",(function(r){i.removeAllListeners(),o("tunneling socket could not be established, cause=%s\n",r.message,r.stack);var n=new Error("tunneling socket could not be established, cause="+r.message);n.code="ECONNRESET",e.request.emit("error",n),t.removeSocket(s)})),i.end()},u.prototype.removeSocket=function(e){var r=this.sockets.indexOf(e);if(-1!==r){this.sockets.splice(r,1);var t=this.requests.shift();t&&this.createSocket(t,(function(e){t.request.onSocket(e)}))}},o=process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments);"string"==typeof e[0]?e[0]="TUNNEL: "+e[0]:e.unshift("TUNNEL:"),console.error.apply(console,e)}:function(){},r.debug=o},function(e,r){e.exports=require("net")},function(e,r){e.exports=require("tls")},function(e,r){e.exports=require("events")},function(e,r){e.exports=require("assert")},function(e,r){e.exports=function e(r,t,o,s){if("function"!=typeof o)throw new Error("method for before hook must be a function");s||(s={});if(Array.isArray(t))return t.reverse().reduce((function(t,o){return e.bind(null,r,o,t,s)}),o)();return Promise.resolve().then((function(){return r.registry[t]?r.registry[t].reduce((function(e,r){return r.hook.bind(null,e,s)}),o)():o(s)}))}},function(e,r){e.exports=function(e,r,t,o){var s=o;e.registry[t]||(e.registry[t]=[]);"before"===r&&(o=function(e,r){return Promise.resolve().then(s.bind(null,r)).then(e.bind(null,r))});"after"===r&&(o=function(e,r){var t;return Promise.resolve().then(e.bind(null,r)).then((function(e){return s(t=e,r)})).then((function(){return t}))});"error"===r&&(o=function(e,r){return Promise.resolve().then(e.bind(null,r)).catch((function(e){return s(e,r)}))});e.registry[t].push({hook:o,orig:s})}},function(e,r){e.exports=function(e,r,t){if(!e.registry[r])return;var o=e.registry[r].map((function(e){return e.orig})).indexOf(t);if(-1===o)return;e.registry[r].splice(o,1)}},function(e,r){e.exports=function e(r,t){if(r&&t)return e(r)(t);if("function"!=typeof r)throw new TypeError("need wrapper function");return Object.keys(r).forEach((function(e){o[e]=r[e]})),o;function o(){for(var e=new Array(arguments.length),t=0;t<e.length;t++)e[t]=arguments[t];var o=r.apply(this,e),s=e[e.length-1];return"function"==typeof o&&o!==s&&Object.keys(s).forEach((function(e){o[e]=s[e]})),o}}},function(e,r){e.exports=require("fs")},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.registerCommands=void 0;const o=t(2),s=t(9),n=t(11);r.registerCommands=function(e){const r=[];return r.push(o.commands.registerCommand("github.publish",async()=>{try{s.publishRepository(e)}catch(e){o.window.showErrorMessage(e.message)}})),n.combinedDisposable(r)}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.GithubCredentialProviderManager=void 0;const o=t(2),s=t(4),n={dispose(){}};class i{async getCredentials(e){if(!/github\.com/i.test(e.authority))return;const r=await s.getSession();return{username:r.account.id,password:r.accessToken}}}r.GithubCredentialProviderManager=class{constructor(e){this.gitAPI=e,this.providerDisposable=n,this._enabled=!1,this.disposable=o.workspace.onDidChangeConfiguration(e=>{e.affectsConfiguration("github")&&this.refresh()}),this.refresh()}set enabled(e){this._enabled!==e&&(this._enabled=e,e?this.providerDisposable=this.gitAPI.registerCredentialsProvider(new i):this.providerDisposable.dispose())}refresh(){const e=o.workspace.getConfiguration("github",null).get("gitAuthentication",!0);this.enabled=!!e}dispose(){this.enabled=!1,this.disposable.dispose()}}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.GithubPushErrorHandler=r.isInCodespaces=void 0;const o=t(2),s=t(10),n=t(4),i=s.loadMessageBundle(t(5).join(__dirname,"pushErrorHandler.ts"));function a(){return"codespaces"===o.env.remoteName}r.isInCodespaces=a;r.GithubPushErrorHandler=class{async handlePushError(e,r,t,s){if("PermissionDenied"!==s.gitErrorCode)return!1;const c=r.pushUrl||(a()?r.fetchUrl:void 0);if(!c)return!1;const u=/^(?:https:\/\/github\.com\/|git@github\.com:)([^/]+)\/([^/.]+)(?:\.git)?$/i.exec(c);if(!u)return!1;if(/^:/.test(t))return!1;const[,l,p]=u;return await async function(e,r,t,s,c){const u=i(0,null),l=i(1,null);if(await o.window.showInformationMessage(i(2,null,s,c),u,l)===l)return;const p=/^([^:]*):([^:]*)$/.exec(t),d=p?p[1]:t;let m=p?p[2]:t;const[g,h]=await o.window.withProgress({location:o.ProgressLocation.Notification,cancellable:!1,title:i(3,null)},async t=>{t.report({message:i(4,null,s,c),increment:33});const u=await n.getOctokit();let l;try{if(a()){const e=await o.commands.executeCommand("github.codespaces.forkRepository");if(!e)throw new Error("Unable to fork respository");if(l=e.repository,e.ref){let r=e.ref;r.startsWith("refs/heads/")&&(r=r.substr(11)),m=r}}else{l=(await u.repos.createFork({owner:s,repo:c})).data}}catch(e){throw console.error(e),e}t.report({message:i(5,null),increment:33}),await e.renameRemote(r.name,"upstream"),await e.addRemote("origin",l.clone_url);try{await e.fetch("origin",m),await e.setBranchUpstream(d,"origin/"+m)}catch(e){}return await e.push("origin",d,!0),[u,l]});(async()=>{const r=i(6,null),t=i(7,null),n=await o.window.showInformationMessage(i(8,null,h.full_name),r,t);if(n===r)await o.commands.executeCommand("vscode.open",o.Uri.parse(h.html_url));else if(n===t){const r=await o.window.withProgress({location:o.ProgressLocation.Notification,cancellable:!1,title:i(9,null)},async t=>{var o;let n="Update "+m;const i=null===(o=e.state.HEAD)||void 0===o?void 0:o.name;if(i){n=(await e.getCommit(i)).message.replace(/\n.*$/m,"")}const a=await g.pulls.create({owner:s,repo:c,title:n,head:`${h.owner.login}:${m}`,base:m});return await e.setConfig(`branch.${d}.remote`,"upstream"),await e.setConfig(`branch.${d}.merge`,"refs/heads/"+m),await e.setConfig(`branch.${d}.github-pr-owner-number`,`${s}#${c}#${r.number}`),a.data}),t=i(10,null);await o.window.showInformationMessage(i(11,null,s,c,r.number),t)===t&&await o.commands.executeCommand("vscode.open",o.Uri.parse(r.html_url))}})()}(e,r,t,l,p),!0}}},function(e,r,t){"use strict";function o(){return"object"==typeof navigator&&"userAgent"in navigator?navigator.userAgent:"object"==typeof process&&"version"in process?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}t.r(r),t.d(r,"Octokit",(function(){return Fe}));var s=t(12);
/*!
 * isobject <https://github.com/jonschlinkert/isobject>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
function n(e){return!0==(null!=(r=e)&&"object"==typeof r&&!1===Array.isArray(r))&&"[object Object]"===Object.prototype.toString.call(e);var r}var i=function(e){var r,t;return!1!==n(e)&&("function"==typeof(r=e.constructor)&&(!1!==n(t=r.prototype)&&!1!==t.hasOwnProperty("isPrototypeOf")))};function a(e,r,t){if("string"==typeof r){let[e,o]=r.split(" ");t=Object.assign(o?{method:e,url:o}:{url:e},t)}else t=Object.assign({},r);var o;t.headers=(o=t.headers)?Object.keys(o).reduce((e,r)=>(e[r.toLowerCase()]=o[r],e),{}):{};const s=function e(r,t){const o=Object.assign({},r);return Object.keys(t).forEach(s=>{i(t[s])?s in r?o[s]=e(r[s],t[s]):Object.assign(o,{[s]:t[s]}):Object.assign(o,{[s]:t[s]})}),o}(e||{},t);return e&&e.mediaType.previews.length&&(s.mediaType.previews=e.mediaType.previews.filter(e=>!s.mediaType.previews.includes(e)).concat(s.mediaType.previews)),s.mediaType.previews=s.mediaType.previews.map(e=>e.replace(/-preview/,"")),s}const c=/\{[^}]+\}/g;function u(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function l(e,r){return Object.keys(e).filter(e=>!r.includes(e)).reduce((r,t)=>(r[t]=e[t],r),{})}function p(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e})).join("")}function d(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function m(e,r,t){return r="+"===e||"#"===e?p(r):d(r),t?d(t)+"="+r:r}function g(e){return null!=e}function h(e){return";"===e||"&"===e||"?"===e}function f(e,r){var t=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,o,s){if(o){let e="";const s=[];if(-1!==t.indexOf(o.charAt(0))&&(e=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach((function(t){var o=/([^:\*]*)(?::(\d+)|(\*))?/.exec(t);s.push(function(e,r,t,o){var s=e[t],n=[];if(g(s)&&""!==s)if("string"==typeof s||"number"==typeof s||"boolean"==typeof s)s=s.toString(),o&&"*"!==o&&(s=s.substring(0,parseInt(o,10))),n.push(m(r,s,h(r)?t:""));else if("*"===o)Array.isArray(s)?s.filter(g).forEach((function(e){n.push(m(r,e,h(r)?t:""))})):Object.keys(s).forEach((function(e){g(s[e])&&n.push(m(r,s[e],e))}));else{const e=[];Array.isArray(s)?s.filter(g).forEach((function(t){e.push(m(r,t))})):Object.keys(s).forEach((function(t){g(s[t])&&(e.push(d(t)),e.push(m(r,s[t].toString())))})),h(r)?n.push(d(t)+"="+e.join(",")):0!==e.length&&n.push(e.join(","))}else";"===r?g(s)&&n.push(d(t)):""!==s||"&"!==r&&"?"!==r?""===s&&n.push(""):n.push(d(t)+"=");return n}(r,e,o[1],o[2]||o[3]))})),e&&"+"!==e){var n=",";return"?"===e?n="&":"#"!==e&&(n=e),(0!==s.length?e:"")+s.join(n)}return s.join(",")}return p(s)}))}function b(e){let r,t=e.method.toUpperCase(),o=(e.url||"/").replace(/:([a-z]\w+)/g,"{+$1}"),s=Object.assign({},e.headers),n=l(e,["method","baseUrl","url","headers","request","mediaType"]);const i=function(e){const r=e.match(c);return r?r.map(u).reduce((e,r)=>e.concat(r),[]):[]}(o);var a;o=(a=o,{expand:f.bind(null,a)}).expand(n),/^http/.test(o)||(o=e.baseUrl+o);const p=l(n,Object.keys(e).filter(e=>i.includes(e)).concat("baseUrl"));if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(r=>r.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,"application/vnd$1$2."+e.mediaType.format)).join(",")),e.mediaType.previews.length)){const r=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=r.concat(e.mediaType.previews).map(r=>`application/vnd.github.${r}-preview${e.mediaType.format?"."+e.mediaType.format:"+json"}`).join(",")}return["GET","HEAD"].includes(t)?o=function(e,r){const t=/\?/.test(e)?"&":"?",o=Object.keys(r);return 0===o.length?e:e+t+o.map(e=>"q"===e?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(r[e])}`).join("&")}(o,p):"data"in p?r=p.data:Object.keys(p).length?r=p:s["content-length"]=0,s["content-type"]||void 0===r||(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(t)&&void 0===r&&(r=""),Object.assign({method:t,url:o,headers:s},void 0!==r?{body:r}:null,e.request?{request:e.request}:null)}function w(e,r,t){return b(a(e,r,t))}const T=function e(r,t){const o=a(r,t),s=w.bind(null,o);return Object.assign(s,{DEFAULTS:o,defaults:e.bind(null,o),merge:a.bind(null,o),parse:b})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":"octokit-endpoint.js/6.0.4 "+o()},mediaType:{format:"",previews:[]}});var E=t(0),y=t(7),v=t(3),_=t(6),k=t(1);const P=E.Readable,S=Symbol("buffer"),G=Symbol("type");class O{constructor(){this[G]="";const e=arguments[0],r=arguments[1],t=[];let o=0;if(e){const r=e,s=Number(r.length);for(let e=0;e<s;e++){const s=r[e];let n;n=s instanceof Buffer?s:ArrayBuffer.isView(s)?Buffer.from(s.buffer,s.byteOffset,s.byteLength):s instanceof ArrayBuffer?Buffer.from(s):s instanceof O?s[S]:Buffer.from("string"==typeof s?s:String(s)),o+=n.length,t.push(n)}}this[S]=Buffer.concat(t);let s=r&&void 0!==r.type&&String(r.type).toLowerCase();s&&!/[^\u0020-\u007E]/.test(s)&&(this[G]=s)}get size(){return this[S].length}get type(){return this[G]}text(){return Promise.resolve(this[S].toString())}arrayBuffer(){const e=this[S],r=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(r)}stream(){const e=new P;return e._read=function(){},e.push(this[S]),e.push(null),e}toString(){return"[object Blob]"}slice(){const e=this.size,r=arguments[0],t=arguments[1];let o,s;o=void 0===r?0:r<0?Math.max(e+r,0):Math.min(r,e),s=void 0===t?e:t<0?Math.max(e+t,0):Math.min(t,e);const n=Math.max(s-o,0),i=this[S].slice(o,o+n),a=new O([],{type:arguments[2]});return a[S]=i,a}}function C(e,r,t){Error.call(this,e),this.message=e,this.type=r,t&&(this.code=this.errno=t.code),Error.captureStackTrace(this,this.constructor)}let A;Object.defineProperties(O.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(O.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),C.prototype=Object.create(Error.prototype),C.prototype.constructor=C,C.prototype.name="FetchError";try{A=require("encoding").convert}catch(e){}const R=Symbol("Body internals"),F=E.PassThrough;function j(e){var r=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=t.size;let s=void 0===o?0:o;var n=t.timeout;let i=void 0===n?0:n;null==e?e=null:D(e)?e=Buffer.from(e.toString()):L(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof E||(e=Buffer.from(String(e)))),this[R]={body:e,disturbed:!1,error:null},this.size=s,this.timeout=i,e instanceof E&&e.on("error",(function(e){const t="AbortError"===e.name?e:new C(`Invalid response body while trying to fetch ${r.url}: ${e.message}`,"system",e);r[R].error=t}))}function U(){var e=this;if(this[R].disturbed)return j.Promise.reject(new TypeError("body used already for: "+this.url));if(this[R].disturbed=!0,this[R].error)return j.Promise.reject(this[R].error);let r=this.body;if(null===r)return j.Promise.resolve(Buffer.alloc(0));if(L(r)&&(r=r.stream()),Buffer.isBuffer(r))return j.Promise.resolve(r);if(!(r instanceof E))return j.Promise.resolve(Buffer.alloc(0));let t=[],o=0,s=!1;return new j.Promise((function(n,i){let a;e.timeout&&(a=setTimeout((function(){s=!0,i(new C(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)),r.on("error",(function(r){"AbortError"===r.name?(s=!0,i(r)):i(new C(`Invalid response body while trying to fetch ${e.url}: ${r.message}`,"system",r))})),r.on("data",(function(r){if(!s&&null!==r){if(e.size&&o+r.length>e.size)return s=!0,void i(new C(`content size at ${e.url} over limit: ${e.size}`,"max-size"));o+=r.length,t.push(r)}})),r.on("end",(function(){if(!s){clearTimeout(a);try{n(Buffer.concat(t,o))}catch(r){i(new C(`Could not create Buffer from response body for ${e.url}: ${r.message}`,"system",r))}}}))}))}function D(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function L(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function x(e){let r,t,o=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return o instanceof E&&"function"!=typeof o.getBoundary&&(r=new F,t=new F,o.pipe(r),o.pipe(t),e[R].body=r,o=t),o}function q(e){return null===e?null:"string"==typeof e?"text/plain;charset=UTF-8":D(e)?"application/x-www-form-urlencoded;charset=UTF-8":L(e)?e.type||null:Buffer.isBuffer(e)||"[object ArrayBuffer]"===Object.prototype.toString.call(e)||ArrayBuffer.isView(e)?null:"function"==typeof e.getBoundary?"multipart/form-data;boundary="+e.getBoundary():e instanceof E?null:"text/plain;charset=UTF-8"}function I(e){const r=e.body;return null===r?0:L(r)?r.size:Buffer.isBuffer(r)?r.length:r&&"function"==typeof r.getLengthSync&&(r._lengthRetrievers&&0==r._lengthRetrievers.length||r.hasKnownLength&&r.hasKnownLength())?r.getLengthSync():null}j.prototype={get body(){return this[R].body},get bodyUsed(){return this[R].disturbed},arrayBuffer(){return U.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return U.call(this).then((function(r){return Object.assign(new O([],{type:e.toLowerCase()}),{[S]:r})}))},json(){var e=this;return U.call(this).then((function(r){try{return JSON.parse(r.toString())}catch(r){return j.Promise.reject(new C(`invalid json response body at ${e.url} reason: ${r.message}`,"invalid-json"))}}))},text(){return U.call(this).then((function(e){return e.toString()}))},buffer(){return U.call(this)},textConverted(){var e=this;return U.call(this).then((function(r){return function(e,r){if("function"!=typeof A)throw new Error("The package `encoding` must be installed to use the textConverted() function");const t=r.get("content-type");let o,s,n="utf-8";t&&(o=/charset=([^;]*)/i.exec(t));s=e.slice(0,1024).toString(),!o&&s&&(o=/<meta.+?charset=(['"])(.+?)\1/i.exec(s));!o&&s&&(o=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(s),o||(o=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(s),o&&o.pop()),o&&(o=/charset=(.*)/i.exec(o.pop())));!o&&s&&(o=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(s));o&&(n=o.pop(),"gb2312"!==n&&"gbk"!==n||(n="gb18030"));return A(e,"UTF-8",n).toString()}(r,e.headers)}))}},Object.defineProperties(j.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),j.mixIn=function(e){for(const r of Object.getOwnPropertyNames(j.prototype))if(!(r in e)){const t=Object.getOwnPropertyDescriptor(j.prototype,r);Object.defineProperty(e,r,t)}},j.Promise=global.Promise;const B=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,H=/[^\t\x20-\x7e\x80-\xff]/;function $(e){if(e=""+e,B.test(e)||""===e)throw new TypeError(e+" is not a legal HTTP header name")}function M(e){if(e=""+e,H.test(e))throw new TypeError(e+" is not a legal HTTP header value")}function N(e,r){r=r.toLowerCase();for(const t in e)if(t.toLowerCase()===r)return t}const z=Symbol("map");class W{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[z]=Object.create(null),e instanceof W){const r=e.raw(),t=Object.keys(r);for(const e of t)for(const t of r[e])this.append(e,t)}else if(null==e);else{if("object"!=typeof e)throw new TypeError("Provided initializer must be an object");{const r=e[Symbol.iterator];if(null!=r){if("function"!=typeof r)throw new TypeError("Header pairs must be iterable");const t=[];for(const r of e){if("object"!=typeof r||"function"!=typeof r[Symbol.iterator])throw new TypeError("Each header pair must be iterable");t.push(Array.from(r))}for(const e of t){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const r of Object.keys(e)){const t=e[r];this.append(r,t)}}}}get(e){$(e=""+e);const r=N(this[z],e);return void 0===r?null:this[z][r].join(", ")}forEach(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,t=K(this),o=0;for(;o<t.length;){var s=t[o];const n=s[0],i=s[1];e.call(r,i,n,this),t=K(this),o++}}set(e,r){r=""+r,$(e=""+e),M(r);const t=N(this[z],e);this[z][void 0!==t?t:e]=[r]}append(e,r){r=""+r,$(e=""+e),M(r);const t=N(this[z],e);void 0!==t?this[z][t].push(r):this[z][e]=[r]}has(e){return $(e=""+e),void 0!==N(this[z],e)}delete(e){$(e=""+e);const r=N(this[z],e);void 0!==r&&delete this[z][r]}raw(){return this[z]}keys(){return J(this,"key")}values(){return J(this,"value")}[Symbol.iterator](){return J(this,"key+value")}}function K(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";const t=Object.keys(e[z]).sort();return t.map("key"===r?function(e){return e.toLowerCase()}:"value"===r?function(r){return e[z][r].join(", ")}:function(r){return[r.toLowerCase(),e[z][r].join(", ")]})}W.prototype.entries=W.prototype[Symbol.iterator],Object.defineProperty(W.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(W.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const V=Symbol("internal");function J(e,r){const t=Object.create(Q);return t[V]={target:e,kind:r,index:0},t}const Q=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==Q)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[V];const r=e.target,t=e.kind,o=e.index,s=K(r,t);return o>=s.length?{value:void 0,done:!0}:(this[V].index=o+1,{value:s[o],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function Z(e){const r=Object.assign({__proto__:null},e[z]),t=N(e[z],"Host");return void 0!==t&&(r[t]=r[t][0]),r}Object.defineProperty(Q,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const Y=Symbol("Response internals"),X=y.STATUS_CODES;class ee{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};j.call(this,e,r);const t=r.status||200,o=new W(r.headers);if(null!=e&&!o.has("Content-Type")){const r=q(e);r&&o.append("Content-Type",r)}this[Y]={url:r.url,status:t,statusText:r.statusText||X[t],headers:o,counter:r.counter}}get url(){return this[Y].url||""}get status(){return this[Y].status}get ok(){return this[Y].status>=200&&this[Y].status<300}get redirected(){return this[Y].counter>0}get statusText(){return this[Y].statusText}get headers(){return this[Y].headers}clone(){return new ee(x(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}j.mixIn(ee.prototype),Object.defineProperties(ee.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(ee.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const re=Symbol("Request internals"),te=v.parse,oe=v.format,se="destroy"in E.Readable.prototype;function ne(e){return"object"==typeof e&&"object"==typeof e[re]}class ie{constructor(e){let r,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};ne(e)?r=te(e.url):(r=e&&e.href?te(e.href):te(""+e),e={});let o=t.method||e.method||"GET";if(o=o.toUpperCase(),(null!=t.body||ne(e)&&null!==e.body)&&("GET"===o||"HEAD"===o))throw new TypeError("Request with GET/HEAD method cannot have body");let s=null!=t.body?t.body:ne(e)&&null!==e.body?x(e):null;j.call(this,s,{timeout:t.timeout||e.timeout||0,size:t.size||e.size||0});const n=new W(t.headers||e.headers||{});if(null!=s&&!n.has("Content-Type")){const e=q(s);e&&n.append("Content-Type",e)}let i=ne(e)?e.signal:null;if("signal"in t&&(i=t.signal),null!=i&&!function(e){const r=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!(!r||"AbortSignal"!==r.constructor.name)}(i))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[re]={method:o,redirect:t.redirect||e.redirect||"follow",headers:n,parsedURL:r,signal:i},this.follow=void 0!==t.follow?t.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==t.compress?t.compress:void 0===e.compress||e.compress,this.counter=t.counter||e.counter||0,this.agent=t.agent||e.agent}get method(){return this[re].method}get url(){return oe(this[re].parsedURL)}get headers(){return this[re].headers}get redirect(){return this[re].redirect}get signal(){return this[re].signal}clone(){return new ie(this)}}function ae(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}j.mixIn(ie.prototype),Object.defineProperty(ie.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(ie.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),ae.prototype=Object.create(Error.prototype),ae.prototype.constructor=ae,ae.prototype.name="AbortError";const ce=E.PassThrough,ue=v.resolve;function le(e,r){if(!le.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return j.Promise=le.Promise,new le.Promise((function(t,o){const s=new ie(e,r),n=function(e){const r=e[re].parsedURL,t=new W(e[re].headers);if(t.has("Accept")||t.set("Accept","*/*"),!r.protocol||!r.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(r.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof E.Readable&&!se)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let o=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(o="0"),null!=e.body){const r=I(e);"number"==typeof r&&(o=String(r))}o&&t.set("Content-Length",o),t.has("User-Agent")||t.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!t.has("Accept-Encoding")&&t.set("Accept-Encoding","gzip,deflate");let s=e.agent;return"function"==typeof s&&(s=s(r)),t.has("Connection")||s||t.set("Connection","close"),Object.assign({},r,{method:e.method,headers:Z(t),agent:s})}(s),i=("https:"===n.protocol?_:y).request,a=s.signal;let c=null;const u=function(){let e=new ae("The user aborted a request.");o(e),s.body&&s.body instanceof E.Readable&&s.body.destroy(e),c&&c.body&&c.body.emit("error",e)};if(a&&a.aborted)return void u();const l=function(){u(),m()},p=i(n);let d;function m(){p.abort(),a&&a.removeEventListener("abort",l),clearTimeout(d)}a&&a.addEventListener("abort",l),s.timeout&&p.once("socket",(function(e){d=setTimeout((function(){o(new C("network timeout at: "+s.url,"request-timeout")),m()}),s.timeout)})),p.on("error",(function(e){o(new C(`request to ${s.url} failed, reason: ${e.message}`,"system",e)),m()})),p.on("response",(function(e){clearTimeout(d);const r=function(e){const r=new W;for(const t of Object.keys(e))if(!B.test(t))if(Array.isArray(e[t]))for(const o of e[t])H.test(o)||(void 0===r[z][t]?r[z][t]=[o]:r[z][t].push(o));else H.test(e[t])||(r[z][t]=[e[t]]);return r}(e.headers);if(le.isRedirect(e.statusCode)){const n=r.get("Location"),i=null===n?null:ue(s.url,n);switch(s.redirect){case"error":return o(new C("uri requested responds with a redirect, redirect mode is set to error: "+s.url,"no-redirect")),void m();case"manual":if(null!==i)try{r.set("Location",i)}catch(e){o(e)}break;case"follow":if(null===i)break;if(s.counter>=s.follow)return o(new C("maximum redirect reached at: "+s.url,"max-redirect")),void m();const n={headers:new W(s.headers),follow:s.follow,counter:s.counter+1,agent:s.agent,compress:s.compress,method:s.method,body:s.body,signal:s.signal,timeout:s.timeout,size:s.size};return 303!==e.statusCode&&s.body&&null===I(s)?(o(new C("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void m()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==s.method)||(n.method="GET",n.body=void 0,n.headers.delete("content-length")),t(le(new ie(i,n))),void m())}}e.once("end",(function(){a&&a.removeEventListener("abort",l)}));let n=e.pipe(new ce);const i={url:s.url,status:e.statusCode,statusText:e.statusMessage,headers:r,size:s.size,timeout:s.timeout,counter:s.counter},u=r.get("Content-Encoding");if(!s.compress||"HEAD"===s.method||null===u||204===e.statusCode||304===e.statusCode)return c=new ee(n,i),void t(c);const p={flush:k.Z_SYNC_FLUSH,finishFlush:k.Z_SYNC_FLUSH};if("gzip"==u||"x-gzip"==u)return n=n.pipe(k.createGunzip(p)),c=new ee(n,i),void t(c);if("deflate"!=u&&"x-deflate"!=u){if("br"==u&&"function"==typeof k.createBrotliDecompress)return n=n.pipe(k.createBrotliDecompress()),c=new ee(n,i),void t(c);c=new ee(n,i),t(c)}else{e.pipe(new ce).once("data",(function(e){n=8==(15&e[0])?n.pipe(k.createInflate()):n.pipe(k.createInflateRaw()),c=new ee(n,i),t(c)}))}})),function(e,r){const t=r.body;null===t?e.end():L(t)?t.stream().pipe(e):Buffer.isBuffer(t)?(e.write(t),e.end()):t.pipe(e)}(p,s)}))}le.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},le.Promise=global.Promise;var pe=le;class de extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var me=t(13);const ge=t.n(me)()(e=>console.warn(e));class he extends Error{constructor(e,r,t){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=r,Object.defineProperty(this,"code",{get:()=>(ge(new de("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),r)}),this.headers=t.headers||{};const o=Object.assign({},t.request);t.request.headers.authorization&&(o.headers=Object.assign({},t.request.headers,{authorization:t.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),o.url=o.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=o}}function fe(e){(i(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let r,t,o={};return(e.request&&e.request.fetch||pe)(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then(s=>{t=s.url,r=s.status;for(const e of s.headers)o[e[0]]=e[1];if(204===r||205===r)return;if("HEAD"===e.method){if(r<400)return;throw new he(s.statusText,r,{headers:o,request:e})}if(304===r)throw new he("Not modified",r,{headers:o,request:e});if(r>=400)return s.text().then(t=>{const s=new he(t,r,{headers:o,request:e});try{let e=JSON.parse(s.message);Object.assign(s,e);let r=e.errors;s.message=s.message+": "+r.map(JSON.stringify).join(", ")}catch(e){}throw s});const n=s.headers.get("content-type");return/application\/json/.test(n)?s.json():!n||/^text\/|charset=utf-8$/.test(n)?s.text():function(e){return e.arrayBuffer()}(s)}).then(e=>({status:r,url:t,headers:o,data:e})).catch(r=>{if(r instanceof he)throw r;throw new he(r.message,500,{headers:o,request:e})})}const be=function e(r,t){const o=r.defaults(t);return Object.assign((function(r,t){const s=o.merge(r,t);if(!s.request||!s.request.hook)return fe(o.parse(s));const n=(e,r)=>fe(o.parse(o.merge(e,r)));return Object.assign(n,{endpoint:o,defaults:e.bind(null,o)}),s.request.hook(n,s)}),{endpoint:o,defaults:e.bind(null,o)})}(T,{headers:{"user-agent":"octokit-request.js/5.4.6 "+o()}});class we extends Error{constructor(e,r){super(r.data.errors[0].message),Object.assign(this,r.data),this.name="GraphqlError",this.request=e,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}const Te=["method","baseUrl","url","headers","request","query","mediaType"];function Ee(e,r){const t=e.defaults(r);return Object.assign((e,r)=>function(e,r,t){t=t="string"==typeof r?Object.assign({query:r},t):r;const o=Object.keys(t).reduce((e,r)=>Te.includes(r)?(e[r]=t[r],e):(e.variables||(e.variables={}),e.variables[r]=t[r],e),{});return e(o).then(e=>{if(e.data.errors)throw new we(o,{data:e.data});return e.data.data})}(t,e,r),{defaults:Ee.bind(null,t),endpoint:be.endpoint})}Ee(be,{headers:{"user-agent":"octokit-graphql.js/4.5.2 "+o()},method:"POST",url:"/graphql"});async function ye(e){const r=3===e.split(/\./).length?"app":/^v\d+\./.test(e)?"installation":"oauth";return{type:"token",token:e,tokenType:r}}async function ve(e,r,t,o){const s=r.endpoint.merge(t,o);return s.headers.authorization=function(e){return 3===e.split(/\./).length?"bearer "+e:"token "+e}(e),r(s)}class _e{constructor(e={}){const r=new s.Collection,t={baseUrl:be.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};var n;if(t.headers["user-agent"]=[e.userAgent,"octokit-core.js/3.1.1 "+o()].filter(Boolean).join(" "),e.baseUrl&&(t.baseUrl=e.baseUrl),e.previews&&(t.mediaType.previews=e.previews),e.timeZone&&(t.headers["time-zone"]=e.timeZone),this.request=be.defaults(t),this.graphql=(n=this.request,Ee(n,{method:"POST",url:"/graphql"})).defaults({...t,baseUrl:t.baseUrl.replace(/\/api\/v3$/,"/api")}),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log),this.hook=r,e.authStrategy){const t=e.authStrategy(Object.assign({request:this.request},e.auth));r.wrap("request",t.hook),this.auth=t}else if(e.auth){const t=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof e)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(ye.bind(null,e),{hook:ve.bind(null,e)})}(e.auth);r.wrap("request",t.hook),this.auth=t}else this.auth=async()=>({type:"unauthenticated"});this.constructor.plugins.forEach(r=>{Object.assign(this,r(this,e))})}static defaults(e){return class extends(this){constructor(...r){const t=r[0]||{};super("function"!=typeof e?Object.assign({},e,t,t.userAgent&&e.userAgent?{userAgent:`${t.userAgent} ${e.userAgent}`}:null):e(t))}}}static plugin(...e){var r;const t=this.plugins;return(r=class extends(this){}).plugins=t.concat(e.filter(e=>!t.includes(e))),r}}_e.VERSION="3.1.1",_e.plugins=[];function ke(e){e.hook.wrap("request",(r,t)=>{e.log.debug("request",t);const o=Date.now(),s=e.request.endpoint.parse(t),n=s.url.replace(t.baseUrl,"");return r(t).then(r=>(e.log.info(`${s.method} ${n} - ${r.status} in ${Date.now()-o}ms`),r)).catch(r=>{throw e.log.info(`${s.method} ${n} - ${r.status} in ${Date.now()-o}ms`),r})})}ke.VERSION="1.0.0";function Pe(e){if(!("total_count"in e.data&&!("url"in e.data)))return e;const r=e.data.incomplete_results,t=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const s=Object.keys(e.data)[0],n=e.data[s];return e.data=n,void 0!==r&&(e.data.incomplete_results=r),void 0!==t&&(e.data.repository_selection=t),e.data.total_count=o,e}function Se(e,r,t){const o="function"==typeof r?r.endpoint(t):e.request.endpoint(r,t),s="function"==typeof r?r:e.request,n=o.method,i=o.headers;let a=o.url;return{[Symbol.asyncIterator]:()=>({next:()=>a?s({method:n,url:a,headers:i}).then(Pe).then(e=>(a=((e.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:e})):Promise.resolve({done:!0})})}}function Ge(e,r,t,o){return"function"==typeof t&&(o=t,t=void 0),function e(r,t,o,s){return o.next().then(n=>{if(n.done)return t;let i=!1;return t=t.concat(s?s(n.value,(function(){i=!0})):n.value.data),i?t:e(r,t,o,s)})}(e,[],Se(e,r,t)[Symbol.asyncIterator](),o)}function Oe(e){return{paginate:Object.assign(Ge.bind(null,e),{iterator:Se.bind(null,e)})}}Oe.VERSION="2.2.3";const Ce={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{mediaType:{previews:["machine-man"]}}],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens",{mediaType:{previews:["machine-man"]}}],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}",{mediaType:{previews:["machine-man"]}}],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app",{mediaType:{previews:["machine-man"]}}],getBySlug:["GET /apps/{app_slug}",{mediaType:{previews:["machine-man"]}}],getInstallation:["GET /app/installations/{installation_id}",{mediaType:{previews:["machine-man"]}}],getOrgInstallation:["GET /orgs/{org}/installation",{mediaType:{previews:["machine-man"]}}],getRepoInstallation:["GET /repos/{owner}/{repo}/installation",{mediaType:{previews:["machine-man"]}}],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation",{mediaType:{previews:["machine-man"]}}],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories",{mediaType:{previews:["machine-man"]}}],listInstallations:["GET /app/installations",{mediaType:{previews:["machine-man"]}}],listInstallationsForAuthenticatedUser:["GET /user/installations",{mediaType:{previews:["machine-man"]}}],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories",{mediaType:{previews:["machine-man"]}}],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{mediaType:{previews:["machine-man"]}}],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs",{mediaType:{previews:["antiope"]}}],createSuite:["POST /repos/{owner}/{repo}/check-suites",{mediaType:{previews:["antiope"]}}],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}",{mediaType:{previews:["antiope"]}}],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",{mediaType:{previews:["antiope"]}}],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs",{mediaType:{previews:["antiope"]}}],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",{mediaType:{previews:["antiope"]}}],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites",{mediaType:{previews:["antiope"]}}],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest",{mediaType:{previews:["antiope"]}}],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences",{mediaType:{previews:["antiope"]}}],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}]},codeScanning:{getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_id}"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],getConductCode:["GET /codes_of_conduct/{key}",{mediaType:{previews:["scarlet-witch"]}}],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{blockUser:["PUT /orgs/{org}/blocks/{username}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations",{mediaType:{previews:["machine-man"]}}],listBlockedUsers:["GET /orgs/{org}/blocks"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteLegacy:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{deprecated:"octokit.reactions.deleteLegacy() is deprecated, see https://developer.github.com/v3/reactions/#delete-a-reaction-legacy"}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],createRelease:["POST /repos/{owner}/{repo}/releases"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],downloadArchive:["GET /repos/{owner}/{repo}/{archive_format}/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile",{mediaType:{previews:["black-panther"]}}],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics",{mediaType:{previews:["mercy"]}}],users:["GET /search/users"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};function Ae(e,r,t,o,s){const n=e.request.defaults(o);return Object.assign((function(...o){let i=n.endpoint.merge(...o);if(s.mapToData)return i=Object.assign({},i,{data:i[s.mapToData],[s.mapToData]:void 0}),n(i);if(s.renamed){const[o,n]=s.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${o}.${n}()`)}if(s.deprecated&&e.log.warn(s.deprecated),s.renamedParameters){const i=n.endpoint.merge(...o);for(const[o,n]of Object.entries(s.renamedParameters))o in i&&(e.log.warn(`"${o}" parameter is deprecated for "octokit.${r}.${t}()". Use "${n}" instead`),n in i||(i[n]=i[o]),delete i[o]);return n(i)}return n(...o)}),n)}function Re(e){return function(e,r){const t={};for(const[o,s]of Object.entries(r))for(const[r,n]of Object.entries(s)){const[s,i,a]=n,[c,u]=s.split(/ /),l=Object.assign({method:c,url:u},i);t[o]||(t[o]={});const p=t[o];a?p[r]=Ae(e,o,r,l,a):p[r]=e.request.defaults(l)}return t}(e,Ce)}Re.VERSION="4.1.0";const Fe=_e.plugin(ke,Re,Oe).defaults({userAgent:"octokit-rest.js/18.0.1"})}]));
//# sourceMappingURL=https://ticino.blob.core.windows.net/sourcemaps/undefined/extensions/github/dist/extension.js.map