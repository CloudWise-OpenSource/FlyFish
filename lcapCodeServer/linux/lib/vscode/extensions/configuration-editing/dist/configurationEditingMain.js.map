{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"path\"","webpack:///external \"vscode\"","webpack:///./node_modules/vscode-nls/lib/main.js","webpack:///./src/extensionsProposals.ts","webpack:///./node_modules/jsonc-parser/lib/esm/impl/scanner.js","webpack:///./node_modules/jsonc-parser/lib/esm/impl/format.js","webpack:///./node_modules/jsonc-parser/lib/esm/impl/parser.js","webpack:///./node_modules/jsonc-parser/lib/esm/impl/edit.js","webpack:///./node_modules/jsonc-parser/lib/esm/main.js","webpack:///./src/configurationEditingMain.ts","webpack:///external \"fs\"","webpack:///./src/settingsDocumentHelper.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","MessageFormat","BundleFormat","LocalizeInfo","resolvedBundles","options","isPseudo","path","fs","toString","isDefined","isNumber","isString","readJsonFileSync","filename","JSON","parse","readFileSync","format","message","args","replace","length","match","rest","index","arg","replacement","String","createScopedLocalizeFunction","messages","_i","arguments","console","error","Error","stack","warn","localize","cacheBundle","bundle","loadNlsBundleOrCreateFromI18n","header","bundlePath","result","file","join","cacheRoot","id","hash","useMemoryOnly","writeBundle","encoding","flag","Date","utimes","err","code","SyntaxError","log","unlink","metaDataPath","languagePackLocation","translationsConfig","languagePack","contents","metaData","module_2","entry","translations","outDir","resultMessages","keys","messageKey","translatedMessage","undefined","push","createNLSBundle","writeFileSync","stringify","loadDefaultNlsBundle","folder","module_1","createDefaultNlsBundle","loadNlsBundle","languagePackSupport","languagePackId","translationsConfigFile","candidate","root","language","existsSync","lastIndexOf","substring","findInTheBoxBundle","loadMessageBundle","ext","extname","substr","messageFormat","both","headerFile","dirname","parent","tryFindMetaDataHeaderFile","nlsBundle","module_3","json","resolvedLanguage","cacheLanguageResolution","locale","resolveLanguage","Array","isArray","is","comment","process","env","VSCODE_NLS_CONFIG","vscodeOptions","availableLanguages","toLowerCase","isBoolean","_languagePackSupport","_cacheRoot","_languagePackId","_translationsConfigFile","_corruptedFile","writeFile","_a","initializeSettings","config","opts","bundleFormat","standalone","createScanner","text","ignoreTrivia","len","pos","tokenOffset","token","lineNumber","lineStartOffset","tokenLineStartOffset","prevTokenLineStartOffset","scanError","scanHexDigits","count","exact","digits","ch","charCodeAt","scanNext","isWhiteSpace","fromCharCode","isLineBreak","start","ch3","scanString","safeLength","commentClosed","isDigit","end","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenStartLine","getTokenStartCharacter","getTokenError","documentText","range","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","offset","isEOL","endOffset","content","nChars","tabSize","charAt","Math","floor","computeIndentLevel","indentValue","eol","getEOL","lineBreak","indentLevel","insertSpaces","repeat","scanner","hasError","newLineAndIndent","editOperations","addEdit","startOffset","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","indexOf","ParseOptions","parseTree","errors","DEFAULT","currentParent","type","children","ensurePropertyComplete","onValue","valueNode","visit","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","getNodeType","onSeparator","sep","colonOffset","onError","findNodeAtLocation","node","path_1","segment","found","_b","propertyNode","visitor","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","onComment","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","e","parseLiteral","allowEmptyContent","setProperty","originalPath","formattingOptions","getInsertionIndex","slice","lastSegment","pop","existing","propertyIndex","removeBegin","removeEnd","previous","withFormatting","newProperty","map","edit","removalIndex","toRemove","newText","applyEdit","begin","edits","edit_1","min","max","position","segments","earlyReturnException","previousNode","previousNodeInst","isAtPropertyKey","setPreviousNode","last","matches","pattern","k","currentProperty","previousParents","array","findNodeAtOffset","includeRightBound","contains","item","getNodePath","getNodeValue","obj","prop","replaceCh","kind","parts","printParseErrorCode","modify","applyEdits"],"mappings":"6DACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBClFrDhC,EAAOD,QAAUkC,QAAQ,S,cCAzBjC,EAAOD,QAAUkC,QAAQ,W,6BCKzBtB,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtD,IAkBIgB,EAMAC,EAMAC,EASAC,EACAC,EACAC,EAzCAC,EAAO,EAAQ,GACfC,EAAK,EAAQ,GACbC,EAAW/B,OAAOkB,UAAUa,SAChC,SAASC,EAAUzB,GACf,YAAwB,IAAVA,EAElB,SAAS0B,EAAS1B,GACd,MAAgC,oBAAzBwB,EAAStC,KAAKc,GAEzB,SAAS2B,EAAS3B,GACd,MAAgC,oBAAzBwB,EAAStC,KAAKc,GAKzB,SAAS4B,EAAiBC,GACtB,OAAOC,KAAKC,MAAMR,EAAGS,aAAaH,EAAU,SAqFhD,SAASI,EAAOC,EAASC,GAuBrB,OArBId,IAEAa,EAAU,IAAWA,EAAQE,QAAQ,WAAY,QAAU,KAE3C,IAAhBD,EAAKE,OACIH,EAGAA,EAAQE,QAAQ,cAAc,SAAUE,EAAOC,GACpD,IAAIC,EAAQD,EAAK,GACbE,EAAMN,EAAKK,GACXE,EAAcJ,EAOlB,MANmB,iBAARG,EACPC,EAAcD,EAEM,iBAARA,GAAmC,kBAARA,GAAlC,MAAuDA,IAC5DC,EAAcC,OAAOF,IAElBC,KAKnB,SAASE,EAA6BC,GAClC,OAAO,SAAUvC,EAAK4B,GAElB,IADA,IAAIC,EAAO,GACFW,EAAK,EAAGA,EAAKC,UAAUV,OAAQS,IACpCX,EAAKW,EAAK,GAAKC,UAAUD,GAE7B,OAAIpB,EAASpB,GACLA,GAAOuC,EAASR,YAChBW,QAAQC,MAAM,qEAAuE,IAAIC,MAAM,IAAIC,OAGhGlB,EAAOY,EAASvC,GAAM6B,GAGzBR,EAASO,IACTc,QAAQI,KAAK,WAAalB,EAAU,uCAC7BD,EAAOC,EAASC,SAGvBa,QAAQC,MAAM,gDAAkD,IAAIC,MAAM,IAAIC,QAK9F,SAASE,EAAS/C,EAAK4B,GAEnB,IADA,IAAIC,EAAO,GACFW,EAAK,EAAGA,EAAKC,UAAUV,OAAQS,IACpCX,EAAKW,EAAK,GAAKC,UAAUD,GAE7B,OAAOb,EAAOC,EAASC,GAgI3B,SAASmB,EAAYhD,EAAKiD,GAEtB,OADApC,EAAgBb,GAAOiD,EAChBA,EAEX,SAASC,EAA8BC,EAAQC,GAC3C,IAAIC,EAXOC,EACPvE,EAWAkE,EAASjC,EAAKuC,KAAKzC,EAAQ0C,UAAWL,EAAOM,GAAK,IAAMN,EAAOO,KAAO,SACtEC,GAAgB,EAChBC,GAAc,EAClB,IAGI,OAFAP,EAAS7B,KAAKC,MAAMR,EAAGS,aAAauB,EAAQ,CAAEY,SAAU,OAAQC,KAAM,OAhB/DR,EAiBDL,EAhBNlE,EAAI,IAAIgF,KACZ9C,EAAG+C,OAAOV,EAAMvE,EAAGA,GAAG,eAgBXsE,EAEX,MAAOY,GACH,GAAiB,WAAbA,EAAIC,KACJN,GAAc,MAEb,MAAIK,aAAeE,aAWpB,MAAMF,EATNvB,QAAQ0B,IAAI,wCAA0CH,EAAIrC,QAAU,KACpEX,EAAGoD,OAAOpB,GAAQ,SAAUgB,GACpBA,GACAvB,QAAQC,MAAM,6BAA+BM,EAAS,eAG9DU,GAAgB,GAOxB,KADAN,EApEJ,SAAyBF,EAAQmB,GAC7B,IAAIC,EAAuBzD,EAAQ0D,mBAAmBrB,EAAOM,IAC7D,GAAKc,EAAL,CAGA,IAAIE,EAAenD,EAAiBiD,GAAsBG,SACtDC,EAAWrD,EAAiBN,EAAKuC,KAAKe,EAAc,sBACpDjB,EAASlE,OAAOY,OAAO,MAC3B,IAAK,IAAI6E,KAAYD,EAAU,CAC3B,IAAIE,EAAQF,EAASC,GACjBE,EAAeL,EAAatB,EAAO4B,OAAS,IAAMH,GACtD,GAAIE,EAAc,CAEd,IADA,IAAIE,EAAiB,GACZvG,EAAI,EAAGA,EAAIoG,EAAMI,KAAKlD,OAAQtD,IAAK,CACxC,IAAIyG,EAAaL,EAAMI,KAAKxG,GAExB0G,EAAoBL,EADdzD,EAAS6D,GAAcA,EAAaA,EAAWlF,UAE/BoF,IAAtBD,IACAA,EAAoBN,EAAMtC,SAAS9D,IAEvCuG,EAAeK,KAAKF,GAExB9B,EAAOuB,GAAYI,OAGnB3B,EAAOuB,GAAYC,EAAMtC,SAGjC,OAAOc,GAwCEiC,CAAgBnC,EAAQC,KAClBO,EACX,OAAON,EAEX,GAAIO,EACA,IACI3C,EAAGsE,cAActC,EAAQzB,KAAKgE,UAAUnC,GAAS,CAAEQ,SAAU,OAAQC,KAAM,OAE/E,MAAOG,GACH,GAAiB,WAAbA,EAAIC,KACJ,OAAOb,EAEX,MAAMY,EAGd,OAAOZ,EAEX,SAASoC,EAAqBrC,GAC1B,IACI,OAhGR,SAAgCsC,GAC5B,IAAIf,EAAWrD,EAAiBN,EAAKuC,KAAKmC,EAAQ,sBAC9CrC,EAASlE,OAAOY,OAAO,MAC3B,IAAK,IAAI4F,KAAYhB,EAAU,CAC3B,IAAIE,EAAQF,EAASgB,GACrBtC,EAAOsC,GAAYd,EAAMtC,SAE7B,OAAOc,EAyFIuC,CAAuBxC,GAElC,MAAOa,GAEH,YADAvB,QAAQ0B,IAAI,mDAAoDH,IAIxE,SAAS4B,EAAc1C,EAAQC,GAC3B,IAAIC,EAEJ,IAtPuC,IAAhCvC,EAAQgF,0BAAsDV,IAAtBtE,EAAQ0C,gBAAsD4B,IAA3BtE,EAAQiF,qBAAmEX,IAAnCtE,EAAQkF,6BAC5FZ,IAA/BtE,EAAQ0D,mBAsPX,IACInB,EAASH,EAA8BC,EAAQC,GAEnD,MAAOa,GACHvB,QAAQ0B,IAAI,gCAAiCH,GAGrD,IAAKZ,EAAQ,CAIT,GAAIvC,EAAQgF,oBACR,OAAOL,EAAqBrC,GAEhC,IAAI6C,EAvKZ,SAA4BC,GAExB,IADA,IAAIC,EAAWrF,EAAQqF,SAChBA,GAAU,CACb,IAAIF,EAAYjF,EAAKuC,KAAK2C,EAAM,cAAgBC,EAAW,SAC3D,GAAIlF,EAAGmF,WAAWH,GACd,OAAOA,EAGP,IAAI/D,EAAQiE,EAASE,YAAY,KAE7BF,EADAjE,EAAQ,EACGiE,EAASG,UAAU,EAAGpE,QAGtBkD,EAKvB,QAAiBA,IAAbe,EAAwB,CACpBF,EAAYjF,EAAKuC,KAAK2C,EAAM,mBAChC,GAAIjF,EAAGmF,WAAWH,GACd,OAAOA,GAkJKM,CAAmBnD,GACnC,GAAI6C,EACA,IACI,OAAO3E,EAAiB2E,GAE5B,MAAOhC,GACHvB,QAAQ0B,IAAI,4CAA6CH,GAGjEZ,EAASoC,EAAqBrC,GAElC,OAAOC,EAqBX,SAASmD,EAAkBlD,GACvB,IAAKA,EAGD,OAAOP,EAGX,IAAI0D,EAAMzF,EAAK0F,QAAQpD,GAIvB,GAHImD,IACAnD,EAAOA,EAAKqD,OAAO,EAAGrD,EAAKvB,OAAS0E,EAAI1E,SAExCjB,EAAQ8F,gBAAkBlG,EAAcmG,MAAQ/F,EAAQ8F,gBAAkBlG,EAAcuC,OAAQ,CAChG,IAAI6D,EA/BZ,SAAmCxD,GAG/B,IAFA,IAAID,EACA0D,EAAU/F,EAAK+F,QAAQzD,GAEvBD,EAASrC,EAAKuC,KAAKwD,EAAS,6BACxB9F,EAAGmF,WAAW/C,IAFT,CAKT,IAAI2D,EAAShG,EAAK+F,QAAQA,GAC1B,GAAIC,IAAWD,EAAS,CACpB1D,OAAS+B,EACT,MAGA2B,EAAUC,EAGlB,OAAO3D,EAcc4D,CAA0B3D,GAC3C,GAAIwD,EAAY,CACZ,IAAI1D,EAAapC,EAAK+F,QAAQD,GAC1B7D,EAASpC,EAAgBuC,GAC7B,QAAegC,IAAXnC,EACA,IACI,IAAIE,EAAS3B,KAAKC,MAAMR,EAAGS,aAAaoF,EAAY,SACpD,IACI,IAAII,EAAYrB,EAAc1C,EAAQC,GACtCH,EAASD,EAAYI,EAAY8D,EAAY,CAAE/D,OAAQA,EAAQ+D,UAAWA,GAAc,MAE5F,MAAOjD,GACHvB,QAAQC,MAAM,4BAA6BsB,GAC3ChB,EAASD,EAAYI,EAAY,OAGzC,MAAOa,GACHvB,QAAQC,MAAM,6BAA8BsB,GAC5ChB,EAASD,EAAYI,EAAY,MAGzC,GAAIH,EAAQ,CACR,IAAIkE,EAAW7D,EAAKqD,OAAOvD,EAAWrB,OAAS,GAAGD,QAAQ,MAAO,KAC7DS,EAAWU,EAAOiE,UAAUC,GAChC,YAAiB/B,IAAb7C,GACAG,QAAQC,MAAM,qBAAuBW,EAAO,wCACrC,WACH,MAAO,wBAGRhB,EAA6BC,KAIhD,GAAIzB,EAAQ8F,gBAAkBlG,EAAcmG,MAAQ/F,EAAQ8F,gBAAkBlG,EAAc4C,KAExF,IACI,IAAI8D,EAAO9F,EA3RvB,SAAyBgC,GACrB,IAAI+D,EACJ,GAAIvG,EAAQwG,yBAA2BD,EACnCA,EAAmBA,MAElB,CACD,GAAItG,IAAaD,EAAQqF,SACrBkB,EAAmB,iBAInB,IADA,IAAIE,EAASzG,EAAQqF,SACdoB,GAAQ,CACX,IAAItB,EAAY,QAAUsB,EAAS,QACnC,GAAItG,EAAGmF,WAAW9C,EAAO2C,GAAY,CACjCoB,EAAmBpB,EACnB,MAGA,IAAI/D,EAAQqF,EAAOlB,YAAY,KAC3BnE,EAAQ,EACRqF,EAASA,EAAOjB,UAAU,EAAGpE,IAG7BmF,EAAmB,YACnBE,EAAS,MAKrBzG,EAAQwG,0BACRD,EAAmBA,GAG3B,OAAO/D,EAAO+D,EA0PsBG,CAAgBlE,IAC5C,OAAImE,MAAMC,QAAQN,GACP9E,EAA6B8E,GAGhCjG,EAAUiG,EAAK7E,WAAapB,EAAUiG,EAAKnC,MACpC3C,EAA6B8E,EAAK7E,WAGzCG,QAAQC,MAAM,kBAAoBW,EAAO,iCAClC,WACH,MAAO,gEAKvB,MAAOW,GACc,WAAbA,EAAIC,MACJxB,QAAQC,MAAM,oCAAqCsB,GAK/D,OADAvB,QAAQC,MAAM,0CAA4CW,GACnD,WACH,MAAO,4DA7bf,SAAW5C,GACPA,EAAoB,KAAI,OACxBA,EAAsB,OAAI,SAC1BA,EAAoB,KAAI,OAH5B,CAIGA,EAAgBnC,EAAQmC,gBAAkBnC,EAAQmC,cAAgB,KAErE,SAAWC,GAEPA,EAAyB,WAAI,aAC7BA,EAA2B,aAAI,eAHnC,CAIGA,EAAepC,EAAQoC,eAAiBpC,EAAQoC,aAAe,KAElE,SAAWC,GAKPA,EAAa+G,GAJb,SAAYjI,GACR,IAAIuG,EAAYvG,EAChB,OAAOuG,GAAa9E,EAAU8E,EAAUjG,MAAQmB,EAAU8E,EAAU2B,UAH5E,CAMGhH,IAAiBA,EAAe,KAKnC,WAEI,GADAE,EAAU,CAAEyG,YAAQnC,EAAWe,cAAUf,EAAWU,qBAAqB,EAAOwB,yBAAyB,EAAMV,cAAelG,EAAcuC,QACxI5B,EAASwG,QAAQC,IAAIC,mBACrB,IACI,IAAIC,EAAgBxG,KAAKC,MAAMoG,QAAQC,IAAIC,mBACvC5B,OAAW,EAEf,GAAI6B,EAAcC,mBAAoB,CAClC,IAAIvI,EAAQsI,EAAcC,mBAAmB,KACzC5G,EAAS3B,KACTyG,EAAWzG,GAqBnB,GAlBI2B,EAAS2G,EAAcT,UACvBzG,EAAQyG,OAASS,EAAcT,OAAOW,oBAEzB9C,IAAbe,EACArF,EAAQqF,SAAWrF,EAAQyG,OAET,OAAbpB,IACLrF,EAAQqF,SAAWA,GAlDnC,SAAmBzG,GACf,OAAiB,IAAVA,IAA4B,IAAVA,EAmDbyI,CAAUH,EAAcI,wBACxBtH,EAAQgF,oBAAsBkC,EAAcI,sBAE5C/G,EAAS2G,EAAcK,cACvBvH,EAAQ0C,UAAYwE,EAAcK,YAElChH,EAAS2G,EAAcM,mBACvBxH,EAAQiF,eAAiBiC,EAAcM,iBAEvCjH,EAAS2G,EAAcO,yBAA0B,CACjDzH,EAAQkF,uBAAyBgC,EAAcO,wBAC/C,IACIzH,EAAQ0D,mBAAqBlD,EAAiBR,EAAQkF,wBAE1D,MAAOrD,GAECqF,EAAcQ,gBACdvH,EAAGwH,UAAUT,EAAcQ,eAAgB,YAAa,QAAQ,SAAUvE,GACtEvB,QAAQC,MAAMsB,QAMlC,MAAOyE,IAIX3H,EAA8B,WAAnBD,EAAQyG,YACAnC,EACnBvE,EAAkB1B,OAAOY,OAAO,MAEpC4I,GAmXApK,EAAQiI,kBAAoBA,EAmB5BjI,EAAQqK,OAlBR,SAAgBC,GAgBZ,OAfIA,IACIxH,EAASwH,EAAKtB,UACdzG,EAAQyG,OAASsB,EAAKtB,OAAOW,cAC7BpH,EAAQqF,SAAWrF,EAAQyG,YACRnC,EACnBvE,EAAkB1B,OAAOY,OAAO,YAETqF,IAAvByD,EAAKjC,gBACL9F,EAAQ8F,cAAgBiC,EAAKjC,eAE7BiC,EAAKC,eAAiBnI,EAAaoI,aAA8C,IAAhCjI,EAAQgF,sBACzDhF,EAAQgF,qBAAsB,IAGtC/E,EAA8B,WAAnBD,EAAQyG,OACZf,I,oKCreX,aAEM,EADN,KACqB,kBAAiB,+CAGtC,8CAAmD,EAAoB,EAAwB,EAAqB,GACnH,GAAI,MAAM,QAAQ,GAAW,CAC5B,MACM,GADa,EAA2B,EAAO,WAAW,IAAM,EAAO,WAAW,IAAI,OAAO,KAAO,EAAE,GAAG,WAAW,YAAuB,8BAAT,EAAE,MAC/F,OAAO,IAAiC,IAA5B,EAAS,QAAQ,EAAE,KAC1E,GAAI,EAAwB,OAC3B,OAAO,EAAwB,IAAI,IAClC,MAAM,EAAO,IAAI,EAAO,eAAe,EAAE,IACnC,EAAa,IAAI,EAAE,MAAM,IAK/B,OAJA,EAAK,KAAO,EAAO,mBAAmB,MACtC,EAAK,WAAa,EAClB,EAAK,MAAQ,EACb,EAAK,WAAa,EACX,IAEF,CACN,MAAM,EAAU,IAAI,EAAO,eAAe,EAAS,EAAoB,OAIvE,OAHA,EAAQ,WAAa,kBACrB,EAAQ,KAAO,EAAO,mBAAmB,MACzC,EAAQ,MAAQ,EACT,CAAC,MAMX,mDAAwD,EAAoB,GAC3E,GAAI,MAAM,QAAQ,GAAW,CAC5B,MACM,EADa,EAAO,WAAW,IAAI,OAAO,GAAK,EAAE,YAAY,MAC7B,OAAO,IAAiC,IAA5B,EAAS,QAAQ,EAAE,KACrE,GAAI,EAAmB,OACtB,OAAO,EAAmB,IAAI,IAC7B,MAAM,EAAO,IAAI,EAAO,eAAe,EAAE,IACnC,EAAa,IAAI,EAAE,gDAAgD,EAAE,YAAY,cAKvF,OAJA,EAAK,KAAO,EAAO,mBAAmB,MACtC,EAAK,WAAa,EAClB,EAAK,MAAQ,EACb,EAAK,WAAa,EACX,IAEF,CACN,MAAM,EAAU,IAAI,EAAO,eAAe,EAAS,EAAoB,OAIvE,OAHA,EAAQ,WAAa,uEACrB,EAAQ,KAAO,EAAO,mBAAmB,MACzC,EAAQ,MAAQ,EACT,CAAC,O,6BC7CJ,SAASwC,EAAcC,EAAMC,QACX,IAAjBA,IAA2BA,GAAe,GAC9C,IAAIC,EAAMF,EAAKlH,OACXqH,EAAM,EAAG1J,EAAQ,GAAI2J,EAAc,EAAGC,EAAQ,GAAkBC,EAAa,EAAGC,EAAkB,EAAGC,EAAuB,EAAGC,EAA2B,EAAGC,EAAY,EAC7K,SAASC,EAAcC,EAAOC,GAG1B,IAFA,IAAIC,EAAS,EACTrK,EAAQ,EACLqK,EAASF,IAAUC,GAAO,CAC7B,IAAIE,EAAKf,EAAKgB,WAAWb,GACzB,GAAIY,GAAM,IAAeA,GAAM,GAC3BtK,EAAgB,GAARA,EAAasK,EAAK,QAEzB,GAAIA,GAAM,IAAcA,GAAM,GAC/BtK,EAAgB,GAARA,EAAasK,EAAK,GAAa,OAEtC,MAAIA,GAAM,IAAcA,GAAM,KAI/B,MAHAtK,EAAgB,GAARA,EAAasK,EAAK,GAAa,GAK3CZ,IACAW,IAKJ,OAHIA,EAASF,IACTnK,GAAS,GAENA,EAiIX,SAASwK,IAML,GALAxK,EAAQ,GACRiK,EAAY,EACZN,EAAcD,EACdI,EAAkBD,EAClBG,EAA2BD,EACvBL,GAAOD,EAGP,OADAE,EAAcF,EACPG,EAAQ,GAEnB,IAAIpF,EAAO+E,EAAKgB,WAAWb,GAE3B,GAAIe,EAAajG,GAAO,CACpB,GACIkF,IACA1J,GAAS2C,OAAO+H,aAAalG,GAC7BA,EAAO+E,EAAKgB,WAAWb,SAClBe,EAAajG,IACtB,OAAOoF,EAAQ,GAGnB,GAAIe,EAAYnG,GASZ,OARAkF,IACA1J,GAAS2C,OAAO+H,aAAalG,GAChB,KAATA,GAA6D,KAAzB+E,EAAKgB,WAAWb,KACpDA,IACA1J,GAAS,MAEb6J,IACAE,EAAuBL,EAChBE,EAAQ,GAEnB,OAAQpF,GAEJ,KAAK,IAED,OADAkF,IACOE,EAAQ,EACnB,KAAK,IAED,OADAF,IACOE,EAAQ,EACnB,KAAK,GAED,OADAF,IACOE,EAAQ,EACnB,KAAK,GAED,OADAF,IACOE,EAAQ,EACnB,KAAK,GAED,OADAF,IACOE,EAAQ,EACnB,KAAK,GAED,OADAF,IACOE,EAAQ,EAEnB,KAAK,GAGD,OAFAF,IACA1J,EArIZ,WAEI,IADA,IAAI2D,EAAS,GAAIiH,EAAQlB,IACZ,CACT,GAAIA,GAAOD,EAAK,CACZ9F,GAAU4F,EAAK3C,UAAUgE,EAAOlB,GAChCO,EAAY,EACZ,MAEJ,IAAIK,EAAKf,EAAKgB,WAAWb,GACzB,GAAW,KAAPY,EAA6B,CAC7B3G,GAAU4F,EAAK3C,UAAUgE,EAAOlB,GAChCA,IACA,MAEJ,GAAW,KAAPY,EAAJ,CAgDA,GAAIA,GAAM,GAAKA,GAAM,GAAM,CACvB,GAAIK,EAAYL,GAAK,CACjB3G,GAAU4F,EAAK3C,UAAUgE,EAAOlB,GAChCO,EAAY,EACZ,MAGAA,EAAY,EAIpBP,QA3DA,CAGI,GAFA/F,GAAU4F,EAAK3C,UAAUgE,EAAOlB,KAChCA,GACWD,EAAK,CACZQ,EAAY,EACZ,MAGJ,OADUV,EAAKgB,WAAWb,MAEtB,KAAK,GACD/F,GAAU,IACV,MACJ,KAAK,GACDA,GAAU,KACV,MACJ,KAAK,GACDA,GAAU,IACV,MACJ,KAAK,GACDA,GAAU,KACV,MACJ,KAAK,IACDA,GAAU,KACV,MACJ,KAAK,IACDA,GAAU,KACV,MACJ,KAAK,IACDA,GAAU,KACV,MACJ,KAAK,IACDA,GAAU,KACV,MACJ,KAAK,IACD,IAAIkH,EAAMX,EAAc,GAAG,GACvBW,GAAO,EACPlH,GAAUhB,OAAO+H,aAAaG,GAG9BZ,EAAY,EAEhB,MACJ,QACIA,EAAY,EAEpBW,EAAQlB,GAgBhB,OAAO/F,EA0DSmH,GACDlB,EAAQ,GAEnB,KAAK,GACD,IAAIgB,EAAQlB,EAAM,EAElB,GAAiC,KAA7BH,EAAKgB,WAAWb,EAAM,GAAuB,CAE7C,IADAA,GAAO,EACAA,EAAMD,IACLkB,EAAYpB,EAAKgB,WAAWb,KAGhCA,IAGJ,OADA1J,EAAQuJ,EAAK3C,UAAUgE,EAAOlB,GACvBE,EAAQ,GAGnB,GAAiC,KAA7BL,EAAKgB,WAAWb,EAAM,GAA0B,CAChDA,GAAO,EAGP,IAFA,IAAIqB,EAAatB,EAAM,EACnBuB,GAAgB,EACbtB,EAAMqB,GAAY,CACrB,IAAIT,EAAKf,EAAKgB,WAAWb,GACzB,GAAW,KAAPY,GAAyD,KAA7Bf,EAAKgB,WAAWb,EAAM,GAAuB,CACzEA,GAAO,EACPsB,GAAgB,EAChB,MAEJtB,IACIiB,EAAYL,KACD,KAAPA,GAA2D,KAAzBf,EAAKgB,WAAWb,IAClDA,IAEJG,IACAE,EAAuBL,GAQ/B,OALKsB,IACDtB,IACAO,EAAY,GAEhBjK,EAAQuJ,EAAK3C,UAAUgE,EAAOlB,GACvBE,EAAQ,GAKnB,OAFA5J,GAAS2C,OAAO+H,aAAalG,GAC7BkF,IACOE,EAAQ,GAEnB,KAAK,GAGD,GAFA5J,GAAS2C,OAAO+H,aAAalG,KAC7BkF,IACYD,IAAQwB,EAAQ1B,EAAKgB,WAAWb,IACxC,OAAOE,EAAQ,GAKvB,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAED,OADA5J,GArPZ,WACI,IAAI4K,EAAQlB,EACZ,GAA6B,KAAzBH,EAAKgB,WAAWb,GAChBA,SAIA,IADAA,IACOA,EAAMH,EAAKlH,QAAU4I,EAAQ1B,EAAKgB,WAAWb,KAChDA,IAGR,GAAIA,EAAMH,EAAKlH,QAAmC,KAAzBkH,EAAKgB,WAAWb,GAAuB,CAE5D,OADAA,EACUH,EAAKlH,QAAU4I,EAAQ1B,EAAKgB,WAAWb,KAQ7C,OADAO,EAAY,EACLV,EAAK3C,UAAUgE,EAAOlB,GAN7B,IADAA,IACOA,EAAMH,EAAKlH,QAAU4I,EAAQ1B,EAAKgB,WAAWb,KAChDA,IAQZ,IAAIwB,EAAMxB,EACV,GAAIA,EAAMH,EAAKlH,SAAoC,KAAzBkH,EAAKgB,WAAWb,IAAgD,MAAzBH,EAAKgB,WAAWb,IAK7E,MAJAA,EACUH,EAAKlH,QAAmC,KAAzBkH,EAAKgB,WAAWb,IAAmD,KAAzBH,EAAKgB,WAAWb,KAC/EA,IAEAA,EAAMH,EAAKlH,QAAU4I,EAAQ1B,EAAKgB,WAAWb,IAAO,CAEpD,IADAA,IACOA,EAAMH,EAAKlH,QAAU4I,EAAQ1B,EAAKgB,WAAWb,KAChDA,IAEJwB,EAAMxB,OAGNO,EAAY,EAGpB,OAAOV,EAAK3C,UAAUgE,EAAOM,GA4MZC,GACFvB,EAAQ,GAEnB,QAEI,KAAOF,EAAMD,GAAO2B,EAA0B5G,IAC1CkF,IACAlF,EAAO+E,EAAKgB,WAAWb,GAE3B,GAAIC,IAAgBD,EAAK,CAGrB,OAFA1J,EAAQuJ,EAAK3C,UAAU+C,EAAaD,IAGhC,IAAK,OAAQ,OAAOE,EAAQ,EAC5B,IAAK,QAAS,OAAOA,EAAQ,EAC7B,IAAK,OAAQ,OAAOA,EAAQ,EAEhC,OAAOA,EAAQ,GAKnB,OAFA5J,GAAS2C,OAAO+H,aAAalG,GAC7BkF,IACOE,EAAQ,IAG3B,SAASwB,EAA0B5G,GAC/B,GAAIiG,EAAajG,IAASmG,EAAYnG,GAClC,OAAO,EAEX,OAAQA,GACJ,KAAK,IACL,KAAK,GACL,KAAK,IACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACD,OAAO,EAEf,OAAO,EASX,MAAO,CACH6G,YA9SJ,SAAqBC,GACjB5B,EAAM4B,EACNtL,EAAQ,GACR2J,EAAc,EACdC,EAAQ,GACRK,EAAY,GA0SZsB,YAAa,WAAc,OAAO7B,GAClC8B,KAAMhC,EAVV,WACI,IAAI7F,EACJ,GACIA,EAAS6G,UACJ7G,GAAU,IAA8BA,GAAU,IAC3D,OAAOA,GAKkC6G,EACzCiB,SAAU,WAAc,OAAO7B,GAC/B8B,cAAe,WAAc,OAAO1L,GACpC2L,eAAgB,WAAc,OAAOhC,GACrCiC,eAAgB,WAAc,OAAOlC,EAAMC,GAC3CkC,kBAAmB,WAAc,OAAO/B,GACxCgC,uBAAwB,WAAc,OAAOnC,EAAcK,GAC3D+B,cAAe,WAAc,OAAO9B,IAG5C,SAASQ,EAAaH,GAClB,OAAc,KAAPA,GAAgC,IAAPA,GAA6B,KAAPA,GAAsC,KAAPA,GAC1E,MAAPA,GAA4C,OAAPA,GAA2BA,GAAM,MAAqBA,GAAM,MAC1F,OAAPA,GAA+C,OAAPA,GAA8C,QAAPA,GAA8C,QAAPA,EAE9H,SAASK,EAAYL,GACjB,OAAc,KAAPA,GAAmC,KAAPA,GAAyC,OAAPA,GAA0C,OAAPA,EAE5G,SAASW,EAAQX,GACb,OAAOA,GAAM,IAAeA,GAAM,GCnW/B,SAASrI,EAAO+J,EAAcC,EAAO7K,GACxC,IAAI8K,EACAC,EACAC,EACAC,EACAC,EACJ,GAAIL,EAAO,CAIP,IAHAI,EAAaJ,EAAMM,OACnBD,EAAWD,EAAaJ,EAAM5J,OAC9B+J,EAAkBC,EACXD,EAAkB,IAAMI,EAAMR,EAAcI,EAAkB,IACjEA,IAGJ,IADA,IAAIK,EAAYH,EACTG,EAAYT,EAAa3J,SAAWmK,EAAMR,EAAcS,IAC3DA,IAEJN,EAAaH,EAAapF,UAAUwF,EAAiBK,GACrDP,EAqIR,SAA4BQ,EAAStL,GACjC,IAAIrC,EAAI,EACJ4N,EAAS,EACTC,EAAUxL,EAAQwL,SAAW,EACjC,KAAO7N,EAAI2N,EAAQrK,QAAQ,CACvB,IAAIiI,EAAKoC,EAAQG,OAAO9N,GACxB,GAAW,MAAPuL,EACAqC,QAEC,IAAW,OAAPrC,EAIL,MAHAqC,GAAUC,EAKd7N,IAEJ,OAAO+N,KAAKC,MAAMJ,EAASC,GAtJFI,CAAmBb,EAAY/K,QAGpD+K,EAAaH,EACbE,EAAqB,EACrBE,EAAkB,EAClBC,EAAa,EACbC,EAAWN,EAAa3J,OAE5B,IAGI4K,EAHAC,EA+IR,SAAgB9L,EAASmI,GACrB,IAAK,IAAIxK,EAAI,EAAGA,EAAIwK,EAAKlH,OAAQtD,IAAK,CAClC,IAAIuL,EAAKf,EAAKsD,OAAO9N,GACrB,GAAW,OAAPuL,EACA,OAAIvL,EAAI,EAAIwK,EAAKlH,QAAiC,OAAvBkH,EAAKsD,OAAO9N,EAAI,GAChC,OAEJ,KAEN,GAAW,OAAPuL,EACL,MAAO,KAGf,OAAQlJ,GAAWA,EAAQ8L,KAAQ,KA5JzBC,CAAO/L,EAAS4K,GACtBoB,GAAY,EACZC,EAAc,EAGdJ,EADA7L,EAAQkM,aACMC,EAAO,IAAKnM,EAAQwL,SAAW,GAG/B,KAElB,IAAIY,EAAUlE,EAAc6C,GAAY,GACpCsB,GAAW,EACf,SAASC,IACL,OAAOR,EAAMK,EAAON,EAAaf,EAAqBmB,GAE1D,SAAS7C,IACL,IAAIZ,EAAQ4D,EAAQhC,OAEpB,IADA4B,GAAY,EACK,KAAVxD,GAAuC,KAAVA,GAChCwD,EAAYA,GAAwB,KAAVxD,EAC1BA,EAAQ4D,EAAQhC,OAGpB,OADAiC,EAAqB,KAAV7D,GAA0D,IAA5B4D,EAAQzB,gBAC1CnC,EAEX,IAAI+D,EAAiB,GACrB,SAASC,EAAQrE,EAAMsE,EAAapB,IAC3BgB,GAAYI,EAAcvB,GAAYG,EAAYJ,GAAcL,EAAapF,UAAUiH,EAAapB,KAAelD,GACpHoE,EAAehI,KAAK,CAAE4G,OAAQsB,EAAaxL,OAAQoK,EAAYoB,EAAanB,QAASnD,IAG7F,IAAIuE,EAAatD,IACjB,GAAmB,KAAfsD,EAA6B,CAC7B,IAAIC,EAAkBP,EAAQ7B,iBAAmBS,EAEjDwB,EADoBL,EAAON,EAAaf,GACjBE,EAAiB2B,GAE5C,KAAsB,KAAfD,GAA6B,CAIhC,IAHA,IAAIE,EAAgBR,EAAQ7B,iBAAmB6B,EAAQ5B,iBAAmBQ,EACtE6B,EAAczD,IACd0D,EAAiB,IACbd,IAA8B,KAAhBa,GAA8D,KAAhBA,IAA8C,CAG9GL,EAAQ,IAAKI,EADWR,EAAQ7B,iBAAmBS,GAEnD4B,EAAgBR,EAAQ7B,iBAAmB6B,EAAQ5B,iBAAmBQ,EACtE8B,EAAiC,KAAhBD,EAA6CP,IAAqB,GACnFO,EAAczD,IAElB,GAAoB,IAAhByD,EACmB,IAAfH,IACAT,IACAa,EAAiBR,UAGpB,GAAoB,IAAhBO,EACc,IAAfH,IACAT,IACAa,EAAiBR,SAGpB,CACD,OAAQI,GACJ,KAAK,EACL,KAAK,EACDT,IACAa,EAAiBR,IACjB,MACJ,KAAK,EACL,KAAK,GACDQ,EAAiBR,IACjB,MACJ,KAAK,GAEGQ,EADAd,EACiBM,IAIA,IAErB,MACJ,KAAK,EACDQ,EAAiB,IACjB,MACJ,KAAK,GACD,GAAoB,IAAhBD,EAAoC,CACpCC,EAAiB,GACjB,MAGR,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,GACL,KAAK,EACL,KAAK,EACmB,KAAhBD,GAA8D,KAAhBA,EAC9CC,EAAiB,IAEI,IAAhBD,GAAsD,KAAhBA,IAC3CR,GAAW,GAEf,MACJ,KAAK,GACDA,GAAW,GAGfL,GAA8B,KAAhBa,GAA8D,KAAhBA,IAC5DC,EAAiBR,KAIzBE,EAAQM,EAAgBF,EADDR,EAAQ7B,iBAAmBS,GAElD0B,EAAaG,EAEjB,OAAON,EAEX,SAASJ,EAAOzM,EAAGqJ,GAEf,IADA,IAAIxG,EAAS,GACJ5E,EAAI,EAAGA,EAAIoL,EAAOpL,IACvB4E,GAAU7C,EAEd,OAAO6C,EAoCJ,SAAS6I,EAAMjD,EAAMgD,GACxB,OAAgD,IAAzC,OAAO4B,QAAQ5E,EAAKsD,OAAON,IC1LtC,IAAI6B,EAkLG,SAASC,EAAU9E,EAAM+E,EAAQlN,QACrB,IAAXkN,IAAqBA,EAAS,SAClB,IAAZlN,IAAsBA,EAAUgN,EAAaG,SACjD,IAAIC,EAAgB,CAAEC,KAAM,QAASlC,QAAS,EAAGlK,QAAS,EAAGqM,SAAU,GAAIpH,YAAQ5B,GACnF,SAASiJ,EAAuBlC,GACD,aAAvB+B,EAAcC,OACdD,EAAcnM,OAASoK,EAAY+B,EAAcjC,OACjDiC,EAAgBA,EAAclH,QAGtC,SAASsH,EAAQC,GAEb,OADAL,EAAcE,SAAS/I,KAAKkJ,GACrBA,EA0CXC,EAAMvF,EAxCQ,CACVwF,cAAe,SAAUxC,GACrBiC,EAAgBI,EAAQ,CAAEH,KAAM,SAAUlC,OAAQA,EAAQlK,QAAS,EAAGiF,OAAQkH,EAAeE,SAAU,MAE3GM,iBAAkB,SAAU1P,EAAMiN,EAAQlK,IACtCmM,EAAgBI,EAAQ,CAAEH,KAAM,WAAYlC,OAAQA,EAAQlK,QAAS,EAAGiF,OAAQkH,EAAeE,SAAU,MAC3FA,SAAS/I,KAAK,CAAE8I,KAAM,SAAUzO,MAAOV,EAAMiN,OAAQA,EAAQlK,OAAQA,EAAQiF,OAAQkH,KAEvGS,YAAa,SAAU1C,EAAQlK,GAC3BsM,EAAuBpC,EAASlK,GAChCmM,EAAcnM,OAASkK,EAASlK,EAASmM,EAAcjC,OACvDiC,EAAgBA,EAAclH,OAC9BqH,EAAuBpC,EAASlK,IAEpC6M,aAAc,SAAU3C,EAAQlK,GAC5BmM,EAAgBI,EAAQ,CAAEH,KAAM,QAASlC,OAAQA,EAAQlK,QAAS,EAAGiF,OAAQkH,EAAeE,SAAU,MAE1GS,WAAY,SAAU5C,EAAQlK,GAC1BmM,EAAcnM,OAASkK,EAASlK,EAASmM,EAAcjC,OACvDiC,EAAgBA,EAAclH,OAC9BqH,EAAuBpC,EAASlK,IAEpC+M,eAAgB,SAAUpP,EAAOuM,EAAQlK,GACrCuM,EAAQ,CAAEH,KAAMY,EAAYrP,GAAQuM,OAAQA,EAAQlK,OAAQA,EAAQiF,OAAQkH,EAAexO,MAAOA,IAClG2O,EAAuBpC,EAASlK,IAEpCiN,YAAa,SAAUC,EAAKhD,EAAQlK,GACL,aAAvBmM,EAAcC,OACF,MAARc,EACAf,EAAcgB,YAAcjD,EAEf,MAARgD,GACLZ,EAAuBpC,KAInCkD,QAAS,SAAUxM,EAAOsJ,EAAQlK,GAC9BiM,EAAO3I,KAAK,CAAE1C,MAAOA,EAAOsJ,OAAQA,EAAQlK,OAAQA,MAGvCjB,GACrB,IAAIuC,EAAS6K,EAAcE,SAAS,GAIpC,OAHI/K,UACOA,EAAO2D,OAEX3D,EAKJ,SAAS+L,EAAmBlJ,EAAMlF,GACrC,GAAKkF,EAAL,CAIA,IADA,IAAImJ,EAAOnJ,EACF1D,EAAK,EAAG8M,EAAStO,EAAMwB,EAAK8M,EAAOvN,OAAQS,IAAM,CACtD,IAAI+M,EAAUD,EAAO9M,GACrB,GAAuB,iBAAZ+M,EAAsB,CAC7B,GAAkB,WAAdF,EAAKlB,OAAsB1G,MAAMC,QAAQ2H,EAAKjB,UAC9C,OAGJ,IADA,IAAIoB,GAAQ,EACH9G,EAAK,EAAG+G,EAAKJ,EAAKjB,SAAU1F,EAAK+G,EAAG1N,OAAQ2G,IAAM,CACvD,IAAIgH,EAAeD,EAAG/G,GACtB,GAAIjB,MAAMC,QAAQgI,EAAatB,WAAasB,EAAatB,SAAS,GAAG1O,QAAU6P,EAAS,CACpFF,EAAOK,EAAatB,SAAS,GAC7BoB,GAAQ,EACR,OAGR,IAAKA,EACD,WAGH,CACD,IAAItN,EAAQqN,EACZ,GAAkB,UAAdF,EAAKlB,MAAoBjM,EAAQ,IAAMuF,MAAMC,QAAQ2H,EAAKjB,WAAalM,GAASmN,EAAKjB,SAASrM,OAC9F,OAEJsN,EAAOA,EAAKjB,SAASlM,IAG7B,OAAOmN,GA0EJ,SAASb,EAAMvF,EAAM0G,EAAS7O,QACjB,IAAZA,IAAsBA,EAAUgN,EAAaG,SACjD,IAAI2B,EAAW5G,EAAcC,GAAM,GACnC,SAAS4G,EAAaC,GAClB,OAAOA,EAAgB,WAAc,OAAOA,EAAcF,EAASvE,iBAAkBuE,EAAStE,iBAAkBsE,EAASrE,oBAAqBqE,EAASpE,2BAA+B,WAAc,OAAO,GAE/M,SAASuE,EAAcD,GACnB,OAAOA,EAAgB,SAAU3N,GAAO,OAAO2N,EAAc3N,EAAKyN,EAASvE,iBAAkBuE,EAAStE,iBAAkBsE,EAASrE,oBAAqBqE,EAASpE,2BAA+B,WAAc,OAAO,GAEvN,IAAIiD,EAAgBoB,EAAaF,EAAQlB,eAAgBC,EAAmBqB,EAAcJ,EAAQjB,kBAAmBC,EAAckB,EAAaF,EAAQhB,aAAcC,EAAeiB,EAAaF,EAAQf,cAAeC,EAAagB,EAAaF,EAAQd,YAAaC,EAAiBiB,EAAcJ,EAAQb,gBAAiBE,EAAce,EAAcJ,EAAQX,aAAcgB,EAAYH,EAAaF,EAAQK,WAAYb,EAAUY,EAAcJ,EAAQR,SAC3bc,EAAmBnP,GAAWA,EAAQmP,iBACtCC,EAAqBpP,GAAWA,EAAQoP,mBAC5C,SAAShG,IACL,OAAa,CACT,IAAIZ,EAAQsG,EAAS1E,OACrB,OAAQ0E,EAASnE,iBACb,KAAK,EACD0E,EAAY,IACZ,MACJ,KAAK,EACDA,EAAY,IACZ,MACJ,KAAK,EACDA,EAAY,IACZ,MACJ,KAAK,EACIF,GACDE,EAAY,IAEhB,MACJ,KAAK,EACDA,EAAY,IACZ,MACJ,KAAK,EACDA,EAAY,IAGpB,OAAQ7G,GACJ,KAAK,GACL,KAAK,GACG2G,EACAE,EAAY,IAGZH,IAEJ,MACJ,KAAK,GACDG,EAAY,GACZ,MACJ,KAAK,GACL,KAAK,GACD,MACJ,QACI,OAAO7G,IAIvB,SAAS6G,EAAYxN,EAAOyN,EAAgBC,GAIxC,QAHuB,IAAnBD,IAA6BA,EAAiB,SAChC,IAAdC,IAAwBA,EAAY,IACxClB,EAAQxM,GACJyN,EAAerO,OAASsO,EAAUtO,OAAS,EAE3C,IADA,IAAIuH,EAAQsG,EAASzE,WACJ,KAAV7B,GAAwB,CAC3B,IAAuC,IAAnC8G,EAAevC,QAAQvE,GAAe,CACtCY,IACA,MAEC,IAAkC,IAA9BmG,EAAUxC,QAAQvE,GACvB,MAEJA,EAAQY,KAIpB,SAASoG,EAAYC,GACjB,IAAI7Q,EAAQkQ,EAASxE,gBAQrB,OAPImF,EACAzB,EAAepP,GAGfgP,EAAiBhP,GAErBwK,KACO,EAmHX,SAASsG,IACL,OAAQZ,EAASzE,YACb,KAAK,EACD,OAnCZ,WACIyD,IACA1E,IAEA,IADA,IAAIuG,GAAa,EACc,IAAxBb,EAASzE,YAAoE,KAAxByE,EAASzE,YAA6B,CAC9F,GAA4B,IAAxByE,EAASzE,YAMT,GALKsF,GACDN,EAAY,EAAuB,GAAI,IAE3CnB,EAAY,KACZ9E,IAC4B,IAAxB0F,EAASzE,YAA4C+E,EACrD,WAGCO,GACLN,EAAY,EAAuB,GAAI,IAEtCK,KACDL,EAAY,EAAuB,GAAI,CAAC,EAA2B,IAEvEM,GAAa,EASjB,OAPA5B,IAC4B,IAAxBe,EAASzE,WACTgF,EAAY,EAA8B,CAAC,GAA4B,IAGvEjG,KAEG,EAKQwG,GACX,KAAK,EACD,OArEZ,WACIjC,IACAvE,IAEA,IADA,IAAIuG,GAAa,EACc,IAAxBb,EAASzE,YAAkE,KAAxByE,EAASzE,YAA6B,CAC5F,GAA4B,IAAxByE,EAASzE,YAMT,GALKsF,GACDN,EAAY,EAAuB,GAAI,IAE3CnB,EAAY,KACZ9E,IAC4B,IAAxB0F,EAASzE,YAA0C+E,EACnD,WAGCO,GACLN,EAAY,EAAuB,GAAI,KAjCnB,KAAxBP,EAASzE,YACTgF,EAAY,EAA8B,GAAI,CAAC,EAAyB,IACjE,IAEXG,GAAY,GACgB,IAAxBV,EAASzE,YACT6D,EAAY,KACZ9E,IACKsG,KACDL,EAAY,EAAuB,GAAI,CAAC,EAAyB,KAIrEA,EAAY,EAAuB,GAAI,CAAC,EAAyB,IAE9D,KAqBCA,EAAY,EAAuB,GAAI,CAAC,EAAyB,IAErEM,GAAa,EASjB,OAPA9B,IAC4B,IAAxBiB,EAASzE,WACTgF,EAAY,EAA4B,CAAC,GAA0B,IAGnEjG,KAEG,EAuCQyG,GACX,KAAK,GACD,OAAOL,GAAY,GACvB,QACI,OA1HZ,WACI,OAAQV,EAASzE,YACb,KAAK,GACD,IAAIzL,EAAQ,EACZ,IAEyB,iBADrBA,EAAQ8B,KAAKC,MAAMmO,EAASxE,oBAExB+E,EAAY,GACZzQ,EAAQ,GAGhB,MAAOkR,GACHT,EAAY,GAEhBrB,EAAepP,GACf,MACJ,KAAK,EACDoP,EAAe,MACf,MACJ,KAAK,EACDA,GAAe,GACf,MACJ,KAAK,EACDA,GAAe,GACf,MACJ,QACI,OAAO,EAGf,OADA5E,KACO,EA6FQ2G,IAInB,OADA3G,IAC4B,KAAxB0F,EAASzE,aACLrK,EAAQgQ,oBAGZX,EAAY,EAAuB,GAAI,KAChC,GAENK,KAIuB,KAAxBZ,EAASzE,YACTgF,EAAY,EAA2B,GAAI,KAExC,IANHA,EAAY,EAAuB,GAAI,KAChC,GAiCR,SAASpB,EAAYrP,GACxB,cAAeA,GACX,IAAK,UAAW,MAAO,UACvB,IAAK,SAAU,MAAO,SACtB,IAAK,SAAU,MAAO,SACtB,IAAK,SACD,OAAKA,EAGI+H,MAAMC,QAAQhI,GACZ,QAEJ,SALI,OAOf,QAAS,MAAO,QCrmBjB,SAASqR,EAAY9H,EAAM+H,EAActR,EAAOuR,EAAmBC,GAOtE,IANA,IAAIxI,EACA1H,EAAOgQ,EAAaG,QAEpBjL,EAAO6H,EAAU9E,EADR,IAETjC,OAAS,EACToK,OAAc,EACXpQ,EAAKe,OAAS,IACjBqP,EAAcpQ,EAAKqQ,WAEJ,KADfrK,EAASoI,EAAmBlJ,EAAMlF,UACC,IAAVtB,IACM,iBAAhB0R,IACE1I,EAAK,IAAO0I,GAAe1R,EAApCA,EAA2CgJ,GAG3ChJ,EAAQ,CAACA,GAOrB,GAAKsH,EAOA,IAAoB,WAAhBA,EAAOmH,MAA4C,iBAAhBiD,GAA4B3J,MAAMC,QAAQV,EAAOoH,UAAW,CACpG,IAAIkD,EAAWlC,EAAmBpI,EAAQ,CAACoK,IAC3C,QAAiB,IAAbE,EAAqB,CACrB,QAAc,IAAV5R,EAAkB,CAClB,IAAK4R,EAAStK,OACV,MAAM,IAAIpE,MAAM,iBAEpB,IAAI2O,EAAgBvK,EAAOoH,SAASP,QAAQyD,EAAStK,QACjDwK,OAAc,EACdC,EAAYH,EAAStK,OAAOiF,OAASqF,EAAStK,OAAOjF,OACzD,GAAIwP,EAAgB,EAGhBC,GADIE,EAAW1K,EAAOoH,SAASmD,EAAgB,IACxBtF,OAASyF,EAAS3P,YAIzC,GADAyP,EAAcxK,EAAOiF,OAAS,EAC1BjF,EAAOoH,SAASrM,OAAS,EAGzB0P,EADWzK,EAAOoH,SAAS,GACVnC,OAGzB,OAAO0F,EAAe1I,EAAM,CAAEgD,OAAQuF,EAAazP,OAAQ0P,EAAYD,EAAapF,QAAS,IAAM6E,GAInG,OAAOU,EAAe1I,EAAM,CAAEgD,OAAQqF,EAASrF,OAAQlK,OAAQuP,EAASvP,OAAQqK,QAAS5K,KAAKgE,UAAU9F,IAAUuR,GAItH,QAAc,IAAVvR,EACA,MAAO,GAEX,IAAIkS,EAAcpQ,KAAKgE,UAAU4L,GAAe,KAAO5P,KAAKgE,UAAU9F,GAClEwC,EAAQgP,EAAoBA,EAAkBlK,EAAOoH,SAASyD,KAAI,SAAUtR,GAAK,OAAOA,EAAE6N,SAAS,GAAG1O,UAAasH,EAAOoH,SAASrM,OACnI+P,OAAO,EAWX,OAAOH,EAAe1I,EARlB6I,EAFA5P,EAAQ,EAED,CAAE+J,QADLyF,EAAW1K,EAAOoH,SAASlM,EAAQ,IACb+J,OAASyF,EAAS3P,OAAQA,OAAQ,EAAGqK,QAAS,IAAMwF,GAE9C,IAA3B5K,EAAOoH,SAASrM,OACd,CAAEkK,OAAQjF,EAAOiF,OAAS,EAAGlK,OAAQ,EAAGqK,QAASwF,GAGjD,CAAE3F,OAAQjF,EAAOiF,OAAS,EAAGlK,OAAQ,EAAGqK,QAASwF,EAAc,KAExCX,GAGrC,GAAoB,UAAhBjK,EAAOmH,MAA2C,iBAAhBiD,GAA4B3J,MAAMC,QAAQV,EAAOoH,UAAW,CAEnG,IAAqB,IADHgD,EACM,CAEhBQ,EAAc,GAAKpQ,KAAKgE,UAAU9F,GAClCoS,OAAO,EACX,GAA+B,IAA3B9K,EAAOoH,SAASrM,OAChB+P,EAAO,CAAE7F,OAAQjF,EAAOiF,OAAS,EAAGlK,OAAQ,EAAGqK,QAASwF,QAIxDE,EAAO,CAAE7F,QADLyF,EAAW1K,EAAOoH,SAASpH,EAAOoH,SAASrM,OAAS,IAC9BkK,OAASyF,EAAS3P,OAAQA,OAAQ,EAAGqK,QAAS,IAAMwF,GAElF,OAAOD,EAAe1I,EAAM6I,EAAMb,GAGlC,QAAc,IAAVvR,GAAoBsH,EAAOoH,SAASrM,QAAU,EAAG,CAEjD,IAAIgQ,EAAeX,EACfY,EAAWhL,EAAOoH,SAAS2D,GAC3BD,OAAO,EACX,GAA+B,IAA3B9K,EAAOoH,SAASrM,OAEhB+P,EAAO,CAAE7F,OAAQjF,EAAOiF,OAAS,EAAGlK,OAAQiF,EAAOjF,OAAS,EAAGqK,QAAS,SAEvE,GAAIpF,EAAOoH,SAASrM,OAAS,IAAMgQ,EAAc,CAElD,IAAIL,EACAzF,GADAyF,EAAW1K,EAAOoH,SAAS2D,EAAe,IACxB9F,OAASyF,EAAS3P,OAExC+P,EAAO,CAAE7F,OAAQA,EAAQlK,OADHiF,EAAOiF,OAASjF,EAAOjF,OACM,EAAIkK,EAAQG,QAAS,SAGxE0F,EAAO,CAAE7F,OAAQ+F,EAAS/F,OAAQlK,OAAQiF,EAAOoH,SAAS2D,EAAe,GAAG9F,OAAS+F,EAAS/F,OAAQG,QAAS,IAEnH,OAAOuF,EAAe1I,EAAM6I,EAAMb,GAGlC,MAAM,IAAIrO,MAAM,wCAKxB,MAAM,IAAIA,MAAM,gBAAyC,iBAAhBwO,EAA2B,QAAU,YAAc,sBAAwBpK,EAAOmH,MAlG3H,QAAc,IAAVzO,EACA,MAAM,IAAIkD,MAAM,oCAEpB,OAAO+O,EAAe1I,EAAM,CAAEgD,OAAQ/F,EAAOA,EAAK+F,OAAS,EAAGlK,OAAQmE,EAAOA,EAAKnE,OAAS,EAAGqK,QAAS5K,KAAKgE,UAAU9F,IAAUuR,GAkGxI,SAASU,EAAe1I,EAAM6I,EAAMb,GAEhC,IAAIgB,EAAUC,EAAUjJ,EAAM6I,GAE1BK,EAAQL,EAAK7F,OACbrB,EAAMkH,EAAK7F,OAAS6F,EAAK1F,QAAQrK,OACrC,GAAoB,IAAhB+P,EAAK/P,QAAwC,IAAxB+P,EAAK1F,QAAQrK,OAAc,CAChD,KAAOoQ,EAAQ,IAAMjG,EAAM+F,EAASE,EAAQ,IACxCA,IAEJ,KAAOvH,EAAMqH,EAAQlQ,SAAWmK,EAAM+F,EAASrH,IAC3CA,IAKR,IAFA,IAAIwH,EAAQzQ,EAAOsQ,EAAS,CAAEhG,OAAQkG,EAAOpQ,OAAQ6I,EAAMuH,GAASlB,GAE3DxS,EAAI2T,EAAMrQ,OAAS,EAAGtD,GAAK,EAAGA,IAAK,CACxC,IAAI4T,EAASD,EAAM3T,GACnBwT,EAAUC,EAAUD,EAASI,GAC7BF,EAAQ3F,KAAK8F,IAAIH,EAAOE,EAAOpG,QAC/BrB,EAAM4B,KAAK+F,IAAI3H,EAAKyH,EAAOpG,OAASoG,EAAOtQ,QAC3C6I,GAAOyH,EAAOjG,QAAQrK,OAASsQ,EAAOtQ,OAI1C,MAAO,CAAC,CAAEkK,OAAQkG,EAAOpQ,OADRkH,EAAKlH,QAAUkQ,EAAQlQ,OAAS6I,GAAOuH,EACX/F,QAAS6F,EAAQ3L,UAAU6L,EAAOvH,KAE5E,SAASsH,EAAUjJ,EAAM6I,GAC5B,OAAO7I,EAAK3C,UAAU,EAAGwL,EAAK7F,QAAU6F,EAAK1F,QAAUnD,EAAK3C,UAAUwL,EAAK7F,OAAS6F,EAAK/P,Q,+mBD5J7F,SAAW+L,GACPA,EAAaG,QAAU,CACnBiC,oBAAoB,GAF5B,CAIGpC,IAAiBA,EAAe,KEE5B,IAAI,EAAgB,EAIhB,EFFJ,SAAqB7E,EAAMuJ,GAC9B,IAAIC,EAAW,GACXC,EAAuB,IAAIvT,OAC3BwT,OAAevN,EACfwN,EAAmB,CACnBlT,MAAO,GACPuM,OAAQ,EACRlK,OAAQ,EACRoM,KAAM,SACNnH,YAAQ5B,GAERyN,GAAkB,EACtB,SAASC,EAAgBpT,EAAOuM,EAAQlK,EAAQoM,GAC5CyE,EAAiBlT,MAAQA,EACzBkT,EAAiB3G,OAASA,EAC1B2G,EAAiB7Q,OAASA,EAC1B6Q,EAAiBzE,KAAOA,EACxByE,EAAiB1D,iBAAc9J,EAC/BuN,EAAeC,EAEnB,IACIpE,EAAMvF,EAAM,CACRwF,cAAe,SAAUxC,EAAQlK,GAC7B,GAAIyQ,GAAYvG,EACZ,MAAMyG,EAEVC,OAAevN,EACfyN,EAAkBL,EAAWvG,EAC7BwG,EAASpN,KAAK,KAElBqJ,iBAAkB,SAAU1P,EAAMiN,EAAQlK,GACtC,GAAIyQ,EAAWvG,EACX,MAAMyG,EAIV,GAFAI,EAAgB9T,EAAMiN,EAAQlK,EAAQ,YACtC0Q,EAASA,EAAS1Q,OAAS,GAAK/C,EAC5BwT,GAAYvG,EAASlK,EACrB,MAAM2Q,GAGd/D,YAAa,SAAU1C,EAAQlK,GAC3B,GAAIyQ,GAAYvG,EACZ,MAAMyG,EAEVC,OAAevN,EACfqN,EAASpB,OAEbzC,aAAc,SAAU3C,EAAQlK,GAC5B,GAAIyQ,GAAYvG,EACZ,MAAMyG,EAEVC,OAAevN,EACfqN,EAASpN,KAAK,IAElBwJ,WAAY,SAAU5C,EAAQlK,GAC1B,GAAIyQ,GAAYvG,EACZ,MAAMyG,EAEVC,OAAevN,EACfqN,EAASpB,OAEbvC,eAAgB,SAAUpP,EAAOuM,EAAQlK,GACrC,GAAIyQ,EAAWvG,EACX,MAAMyG,EAGV,GADAI,EAAgBpT,EAAOuM,EAAQlK,EAAQgN,EAAYrP,IAC/C8S,GAAYvG,EAASlK,EACrB,MAAM2Q,GAGd1D,YAAa,SAAUC,EAAKhD,EAAQlK,GAChC,GAAIyQ,GAAYvG,EACZ,MAAMyG,EAEV,GAAY,MAARzD,GAAe0D,GAAsC,aAAtBA,EAAaxE,KAC5CwE,EAAazD,YAAcjD,EAC3B4G,GAAkB,EAClBF,OAAevN,OAEd,GAAY,MAAR6J,EAAa,CAClB,IAAI8D,EAAON,EAASA,EAAS1Q,OAAS,GAClB,iBAATgR,EACPN,EAASA,EAAS1Q,OAAS,GAAKgR,EAAO,GAGvCF,GAAkB,EAClBJ,EAASA,EAAS1Q,OAAS,GAAK,IAEpC4Q,OAAevN,MAK/B,MAAOwL,GACH,GAAIA,IAAM8B,EACN,MAAM9B,EAGd,MAAO,CACH5P,KAAMyR,EACNE,aAAcA,EACdE,gBAAiBA,EACjBG,QAAS,SAAUC,GAEf,IADA,IAAIC,EAAI,EACCzU,EAAI,EAAGyU,EAAID,EAAQlR,QAAUtD,EAAIgU,EAAS1Q,OAAQtD,IACvD,GAAIwU,EAAQC,KAAOT,EAAShU,IAAqB,MAAfwU,EAAQC,GACtCA,SAEC,GAAmB,OAAfD,EAAQC,GACb,OAAO,EAGf,OAAOA,IAAMD,EAAQlR,UEzGtB,EFiHJ,SAAekH,EAAM+E,EAAQlN,QACjB,IAAXkN,IAAqBA,EAAS,SAClB,IAAZlN,IAAsBA,EAAUgN,EAAaG,SACjD,IAAIkF,EAAkB,KAClBjF,EAAgB,GAChBkF,EAAkB,GACtB,SAAS9E,EAAQ5O,GACT+H,MAAMC,QAAQwG,GACdA,EAAc7I,KAAK3F,GAEM,OAApByT,IACLjF,EAAciF,GAAmBzT,GAiCzC,OADA8O,EAAMvF,EA7BQ,CACVwF,cAAe,WACX,IAAItO,EAAS,GACbmO,EAAQnO,GACRiT,EAAgB/N,KAAK6I,GACrBA,EAAgB/N,EAChBgT,EAAkB,MAEtBzE,iBAAkB,SAAU1P,GACxBmU,EAAkBnU,GAEtB2P,YAAa,WACTT,EAAgBkF,EAAgB/B,OAEpCzC,aAAc,WACV,IAAIyE,EAAQ,GACZ/E,EAAQ+E,GACRD,EAAgB/N,KAAK6I,GACrBA,EAAgBmF,EAChBF,EAAkB,MAEtBtE,WAAY,WACRX,EAAgBkF,EAAgB/B,OAEpCvC,eAAgBR,EAChBa,QAAS,SAAUxM,EAAOsJ,EAAQlK,GAC9BiM,EAAO3I,KAAK,CAAE1C,MAAOA,EAAOsJ,OAAQA,EAAQlK,OAAQA,MAGvCjB,GACdoN,EAAc,IEzJd,EAAY,EAIZ,EAAqB,EAIrB,EF6SJ,SAASoF,EAAiBjE,EAAMpD,EAAQsH,GAE3C,QAD0B,IAAtBA,IAAgCA,GAAoB,GARrD,SAAkBlE,EAAMpD,EAAQsH,GAEnC,YAD0B,IAAtBA,IAAgCA,GAAoB,GAChDtH,GAAUoD,EAAKpD,QAAUA,EAAUoD,EAAKpD,OAASoD,EAAKtN,QAAYwR,GAAsBtH,IAAYoD,EAAKpD,OAASoD,EAAKtN,OAO3HyR,CAASnE,EAAMpD,EAAQsH,GAAoB,CAC3C,IAAInF,EAAWiB,EAAKjB,SACpB,GAAI3G,MAAMC,QAAQ0G,GACd,IAAK,IAAI3P,EAAI,EAAGA,EAAI2P,EAASrM,QAAUqM,EAAS3P,GAAGwN,QAAUA,EAAQxN,IAAK,CACtE,IAAIgV,EAAOH,EAAiBlF,EAAS3P,GAAIwN,EAAQsH,GACjD,GAAIE,EACA,OAAOA,EAInB,OAAOpE,IErTJ,EFuPJ,SAASqE,EAAYrE,GACxB,IAAKA,EAAKrI,SAAWqI,EAAKrI,OAAOoH,SAC7B,MAAO,GAEX,IAAIpN,EAAO0S,EAAYrE,EAAKrI,QAC5B,GAAyB,aAArBqI,EAAKrI,OAAOmH,KAAqB,CACjC,IAAInO,EAAMqP,EAAKrI,OAAOoH,SAAS,GAAG1O,MAClCsB,EAAKqE,KAAKrF,QAET,GAAyB,UAArBqP,EAAKrI,OAAOmH,KAAkB,CACnC,IAAIjM,EAAQmN,EAAKrI,OAAOoH,SAASP,QAAQwB,IAC1B,IAAXnN,GACAlB,EAAKqE,KAAKnD,GAGlB,OAAOlB,GElQA,EFuQJ,SAAS2S,EAAatE,GACzB,OAAQA,EAAKlB,MACT,IAAK,QACD,OAAOkB,EAAKjB,SAASyD,IAAI8B,GAC7B,IAAK,SAED,IADA,IAAIC,EAAMzU,OAAOY,OAAO,MACfyC,EAAK,EAAGkG,EAAK2G,EAAKjB,SAAU5L,EAAKkG,EAAG3G,OAAQS,IAAM,CACvD,IAAIqR,EAAOnL,EAAGlG,GACV+L,EAAYsF,EAAKzF,SAAS,GAC1BG,IACAqF,EAAIC,EAAKzF,SAAS,GAAG1O,OAASiU,EAAapF,IAGnD,OAAOqF,EACX,IAAK,OACL,IAAK,SACL,IAAK,SACL,IAAK,UACD,OAAOvE,EAAK3P,MAChB,QACI,SEvRD,EAAQ,EAMR,EFwhBJ,SAAuBuJ,EAAM6K,GAChC,IAAgDC,EAAkB3K,EAA9DwG,EAAW5G,EAAcC,GAAO+K,EAAQ,GAAU/H,EAAS,EAC/D,GAGI,OAFA7C,EAAMwG,EAAS3E,cACf8I,EAAOnE,EAAS1E,QAEZ,KAAK,GACL,KAAK,GACL,KAAK,GACGe,IAAW7C,GACX4K,EAAM3O,KAAK4D,EAAK3C,UAAU2F,EAAQ7C,SAEpBhE,IAAd0O,GACAE,EAAM3O,KAAKuK,EAASxE,gBAAgBtJ,QAAQ,WAAYgS,IAE5D7H,EAAS2D,EAAS3E,qBAGZ,KAAT8I,GACT,OAAOC,EAAMzQ,KAAK,KE1iBf,SAAS0Q,EAAoB/P,GAChC,OAAQA,GACJ,KAAK,EAAuB,MAAO,gBACnC,KAAK,EAA6B,MAAO,sBACzC,KAAK,EAA8B,MAAO,uBAC1C,KAAK,EAAuB,MAAO,gBACnC,KAAK,EAAuB,MAAO,gBACnC,KAAK,EAAuB,MAAO,gBACnC,KAAK,EAA4B,MAAO,qBACxC,KAAK,EAA8B,MAAO,uBAC1C,KAAK,EAA2B,MAAO,oBACvC,KAAK,GAA8B,MAAO,sBAC1C,KAAK,GAAiC,MAAO,yBAC7C,KAAK,GAAgC,MAAO,wBAC5C,KAAK,GAAgC,MAAO,wBAC5C,KAAK,GAAyB,MAAO,iBACrC,KAAK,GAAiC,MAAO,yBAC7C,KAAK,GAA2B,MAAO,mBAE3C,MAAO,2BAcJ,SAAS,EAAOwH,EAAcC,EAAO7K,GACxC,OAAOa,EAAiB+J,EAAcC,EAAO7K,GAiB1C,SAASoT,EAAOjL,EAAMjI,EAAMtB,EAAOoB,GACtC,OAAO,EAAiBmI,EAAMjI,EAAMtB,EAAOoB,EAAQmQ,kBAAmBnQ,EAAQoQ,mBAK3E,SAASiD,EAAWlL,EAAMmJ,GAC7B,IAAK,IAAI3T,EAAI2T,EAAMrQ,OAAS,EAAGtD,GAAK,EAAGA,IACnCwK,EAAO,EAAeA,EAAMmJ,EAAM3T,IAEtC,OAAOwK,I,gGC7GX,aACA,OACA,OACA,OACA,OACM,EAAW,EAAI,kBAAiB,oDA2BtC,SAAS,EAA4B,GACpC,OAAO,EAAO,UAAU,+BAA+B,CAAE,SAAU,QAAS,WAAW,CACtF,uBAAuB,EAAU,EAAU,GAC1C,MAAM,EAAW,cAAY,EAAS,UAAW,EAAS,SAAS,IACnE,IAAK,EAAS,iBAAmB,EAAS,cAA+C,WAA/B,EAAS,aAAa,KAAmB,CAClG,MAAM,EAAW,EAAS,OAAO,EAAS,MAAM,KAAK,QAAQ,KACvD,EAAgB,GAAY,EAAI,IAAI,EAAO,SAAS,EAAS,KAAM,GAAY,EAErF,MAAO,CACN,CAAE,MAAO,kBAAmB,OAAQ,EAAS,EAAmB,OAChE,CAAE,MAAO,0BAA2B,OAAQ,EAAS,EAA2B,OAChF,CAAE,MAAO,eAAgB,OAAQ,EAAS,EAAgB,OAC1D,CAAE,MAAO,sBAAuB,OAAQ,EAAS,EAAuB,OACxE,CAAE,MAAO,OAAQ,OAAQ,EAAS,EAAQ,OAC1C,CAAE,MAAO,MAAO,OAAQ,EAAS,EAAO,OACxC,CAAE,MAAO,aAAc,OAAQ,EAAS,EAAc,OACtD,CAAE,MAAO,eAAgB,OAAQ,EAAS,EAAgB,OAC1D,CAAE,MAAO,cAAe,OAAQ,EAAS,EAAe,OACxD,CAAE,MAAO,cAAe,OAAQ,EAAS,EAAe,OACxD,CAAE,MAAO,eAAgB,OAAQ,EAAS,GAAgB,OAC1D,CAAE,MAAO,0BAA2B,OAAQ,EAAS,GAA2B,OAChF,CAAE,MAAO,mBAAoB,OAAQ,EAAS,GAAoB,QACjE,IAAI,IAAY,CACjB,MAAO,KAAO,EAAS,MAAQ,IAC/B,MAAO,IAAI,EAAO,MAAM,EAAe,GACvC,OAAQ,EAAS,UAInB,MAAO,MAtDV,oBAAyB,GAExB,EAAQ,cAAc,KAgBf,EAAO,UAAU,+BAA+B,CAAE,SAAU,QAAS,QAAS,oBAAsB,CAC1G,uBAAsB,CAAC,EAAU,EAAU,IACnC,IAAI,mBAAiB,GAAU,uBAAuB,EAAU,MAfzE,EAAQ,cAAc,KA+Df,EAAO,UAAU,+BAA+B,CAAE,QAAS,sBAAwB,CACzF,uBAAuB,EAAU,EAAU,GAC1C,MAAM,EAAW,cAAY,EAAS,UAAW,EAAS,SAAS,IAC7D,EAAQ,EAAS,uBAAuB,IAAa,IAAI,EAAO,MAAM,EAAU,GACtF,GAAyB,oBAArB,EAAS,KAAK,GAA0B,CAC3C,MAAM,EAAwC,QAAM,EAAS,WAC7D,OAAO,qCAAmC,GAAqB,EAAkB,iBAAmB,GAAI,GAAI,GAAO,GAEpH,MAAO,MAMF,EAAO,UAAU,+BAA+B,CAAE,QAAS,uBAAyB,CAC1F,uBAAuB,EAAU,EAAU,GAC1C,MAAM,EAAW,cAAY,EAAS,UAAW,EAAS,SAAS,IAC7D,EAAQ,EAAS,uBAAuB,IAAa,IAAI,EAAO,MAAM,EAAU,GACtF,GAAyB,eAArB,EAAS,KAAK,IAA4C,oBAArB,EAAS,KAAK,GAA0B,CAChF,MAAM,EAAwC,QAAM,EAAS,WAAuB,WACpF,OAAO,qCAAmC,GAAqB,EAAkB,iBAAmB,GAAI,GAAI,GAAO,GAEpH,MAAO,OAlFT,EAAQ,cAAc,KAAK,EAA4B,mBAGvD,EAAQ,cAAc,KAAK,EAA4B,kBAGvD,EAAQ,cAAc,KAoHvB,WAGC,MAAM,EAAQ,IAAI,IAAuC,CACxD,CAAC,CAAE,SAAU,QAAS,QAAS,uBAAyB,CACvD,CAAC,IAAK,UAEP,CAAC,CAAE,SAAU,OAAQ,QAAS,mBAAqB,CAClD,CAAC,cAAe,QAAS,IAAK,IAAK,QACnC,CAAC,cAAe,QAAS,IAAK,IAAK,QACnC,CAAC,cAAe,eAAgB,IAAK,QACrC,CAAC,cAAe,cAAe,IAAK,QACpC,CAAC,cAAe,cAAe,YAIjC,OAAO,EAAO,UAAU,+BACvB,IAAI,EAAM,QACV,CACC,6BAA6B,EAA+B,EAA2B,GAEtF,MAAM,EAAW,cAAY,EAAS,UAAW,EAAS,SAAS,IAEnE,GAAI,EAAS,gBACZ,OAGD,IAAI,GAAkB,EACtB,IAAK,MAAO,EAAK,KAAU,EAC1B,GAAI,EAAO,UAAU,MAAM,EAAK,IAC3B,EAAM,KAAK,EAAS,QAAQ,KAAK,IAAY,CAChD,GAAkB,EAClB,MAKH,IAAK,EACJ,OAID,MAAM,EAAW,EAAS,uBAAuB,GACjD,IAAK,GAAY,EAAS,MAAM,QAAQ,IAAa,EAAS,IAAI,QAAQ,GAEzE,OAGD,IAAI,EAQJ,GALC,EAFG,EAAS,IAAI,UAAY,EAAS,MAAM,WAAc,GAAK,EAAS,uBAAuB,EAAU,OAE5F,IAAI,EAAO,MAAM,EAAU,GAE3B,EAAS,uBAAuB,EAAU,eAGlD,EACJ,OAED,MAAM,EAAY,EAAU,UAAK,EAAW,GAEtC,QAAa,EAAO,SAAS,eAAiC,qBACpE,GAAI,EAAM,0BAA4B,EACrC,OAGD,MAAM,EAAS,IAAI,EAAO,eAC1B,IAAK,MAAM,KAAQ,EAAM,CACxB,MAAM,EAAa,IAAI,EAAO,eAAe,EAAK,IAAK,EAAO,mBAAmB,UACjF,EAAW,OAAS,EAAK,KACzB,EAAW,MAAQ,CAAE,YAAW,aAChC,EAAW,cAAgB,EAAK,YAChC,EAAO,MAAM,KAAK,GAEnB,OAAO,KA9LiB,KAiF5B,EAAO,UAAU,+BAA+B,CAAE,QAAS,iBAAkB,SAAU,SAAW,CACjG,uBAAuB,EAA+B,GACrD,MAAM,EAAqC,GAC3C,IAAI,EAAe,GACf,EAAe,GACf,EAAc,EACd,EAAiB,EAyBrB,OAvBA,QAAM,EAAS,UAAW,CACzB,iBAAkB,CAAC,EAAU,EAAS,KACrC,EAAe,GAEhB,eAAgB,CAAC,EAAY,EAAiB,KACxB,SAAjB,IACH,EAAO,IAGT,cAAe,CAAC,EAAgB,KAC/B,IACuB,IAAnB,IACH,EAAc,IAGhB,YAAa,CAAC,EAAgB,KACzB,GAA2B,IAAnB,GACX,EAAO,KAAK,IAAI,EAAO,kBAAkB,EAAM,EAAO,WAAW,OAAQ,IAAI,EAAO,MAAM,EAAS,WAAW,GAAc,EAAS,WAAW,MAEjJ,OAIK,IAEN,CAAE,MAAO,oB,cC5IZzK,EAAOD,QAAUkC,QAAQ,O,wGCKzB,aACA,OACA,OACA,OAEM,EAAW,EAAI,kBAAiB,kDAEtC,yBAEC,YAAoB,mBAEb,uBAAuB,EAA2B,GACxD,MAAM,EAAW,cAAY,KAAK,SAAS,UAAW,KAAK,SAAS,SAAS,IACvE,EAAQ,KAAK,SAAS,uBAAuB,IAAa,IAAI,EAAO,MAAM,EAAU,GAG3F,GAAyB,iBAArB,EAAS,KAAK,GACjB,OAAO,KAAK,kCAAkC,EAAU,GAIzD,GAAyB,uBAArB,EAAS,KAAK,GACjB,OAAO,KAAK,wCAAwC,EAAU,GAI/D,GAAyB,kBAArB,EAAS,KAAK,IAA+C,mBAArB,EAAS,KAAK,GACzD,OAAO,KAAK,8BAA8B,EAAU,GAIrD,GAAyB,0BAArB,EAAS,KAAK,GACjB,OAAO,KAAK,+BAA+B,EAAU,GAAO,KAAK,GAGzD,CAAC,KAAK,wBAAwB,KAAK,UAAU,2BAA4B,EAAO,EAAS,EAAgB,UAAoE,IAKtL,GAAyB,mCAArB,EAAS,KAAK,GAAyC,CAC1D,IAAI,EAAoB,GACxB,IACC,EAAoB,QAAM,KAAK,SAAS,WAAW,kCAClD,MAAO,IACT,OAAO,qCAAmC,EAAmB,GAAI,GAAO,GAIzE,GAAyB,yBAArB,EAAS,KAAK,IAA0D,IAAzB,EAAS,KAAK,QAAgB,EAAS,gBAAiB,CAC1G,IAAI,EAA8B,GAClC,IACC,EAAoB,OAAO,KAAK,QAAM,KAAK,SAAS,WAAW,yBAC9D,MAAO,IACT,OAAO,qCAAmC,EAAmB,iBAAkB,GAAO,GAIvF,MAAyB,2BAArB,EAAS,KAAK,IAA4D,IAAzB,EAAS,KAAK,QAAgB,EAAS,gBACpF,KAAK,qCAAqC,GAG3C,KAAK,wCAAwC,EAAU,GAGvD,kCAAkC,EAAqB,GAC9D,MAAM,EAAuC,GAiB7C,OAfA,EAAY,KAAK,KAAK,wBAAwB,uBAAwB,EAAO,EAAS,EAAqB,QAC3G,EAAY,KAAK,KAAK,wBAAwB,wBAAyB,EAAO,EAAS,EAAsB,QAC7G,EAAY,KAAK,KAAK,wBAAwB,sBAAuB,EAAO,EAAS,EAAoB,QACzG,EAAY,KAAK,KAAK,wBAAwB,uBAAwB,EAAO,EAAS,EAAqB,QAC3G,EAAY,KAAK,KAAK,wBAAwB,wBAAyB,EAAO,EAAS,EAAsB,QAC7G,EAAY,KAAK,KAAK,wBAAwB,sBAAuB,EAAO,EAAS,EAAoB,QACzG,EAAY,KAAK,KAAK,wBAAwB,cAAe,EAAO,EAAS,EAAY,QACzF,EAAY,KAAK,KAAK,wBAAwB,cAAe,EAAO,EAAS,EAAY,QACzF,EAAY,KAAK,KAAK,wBAAwB,gBAAiB,EAAO,EAAS,EAAc,QAC7F,EAAY,KAAK,KAAK,wBAAwB,gBAAiB,EAAO,EAAS,GAAc,QAC7F,EAAY,KAAK,KAAK,wBAAwB,aAAc,EAAO,EAAS,GAAW,QACvF,EAAY,KAAK,KAAK,wBAAwB,gBAAiB,EAAO,EAAS,GAAc,QAC7F,EAAY,KAAK,KAAK,wBAAwB,WAAY,EAAO,EAAS,GAAS,QACnF,EAAY,KAAK,KAAK,wBAAwB,eAAgB,EAAO,EAAS,GAAa,QAEpF,QAAQ,QAAQ,GAGhB,wCAAwC,EAAoB,GACnE,MAAM,EAAuC,GAE7C,GAA6B,IAAzB,EAAS,KAAK,OAAc,CAE/B,GAAK,EAAS,iBAAwC,KAArB,EAAS,KAAK,GAgB9C,OAAO,KAAK,mDAAmD,EAAU,GAfzE,EAAY,KAAK,KAAK,yBAAyB,CAC9C,MAAO,EAAS,GAAkB,MAClC,cAAe,EAAS,GAAwB,MAChD,QAAS,EAAS,gBAAkB,sCAAwC,0CAC5E,WAGD,EAAY,KAAK,KAAK,yBAAyB,CAC9C,MAAO,EAAS,GAAkB,MAClC,cAAe,EAAS,GAAwB,MAChD,QAAS,EAAS,gBAAkB,yDAA2D,6DAC/F,WAQH,OAAO,QAAQ,QAAQ,GAGhB,8BAA8B,EAAoB,GACzD,MAAM,EAAuC,GA4D7C,OAzD6B,IAAzB,EAAS,KAAK,QACjB,EAAY,KAAK,KAAK,yBAAyB,CAC9C,MAAO,EAAS,GAAa,MAC7B,cAAe,EAAS,GAAmB,MAC3C,QAAS,EAAS,gBAAkB,8BAAgC,kCACpE,WAGD,EAAY,KAAK,KAAK,yBAAyB,CAC9C,MAAO,EAAS,GAAc,MAC9B,cAAe,EAAS,GAAoB,MAC5C,QAAS,EAAS,gBAAkB,gCAAkC,oCACtE,WAGD,EAAY,KAAK,KAAK,yBAAyB,CAC9C,MAAO,EAAS,GAAgB,MAChC,cAAe,EAAS,GAAsB,MAC9C,QAAS,EAAS,gBAAkB,gFAAkF,oFACtH,WAGD,EAAY,KAAK,KAAK,yBAAyB,CAC9C,MAAO,EAAS,GAAkB,MAClC,cAAe,EAAS,GAAwB,MAChD,QAAS,EAAS,gBAAkB,oBAAsB,wBAC1D,WAGD,EAAY,KAAK,KAAK,yBAAyB,CAC9C,MAAO,EAAS,GAAmB,MACnC,cAAe,EAAS,GAAyB,MACjD,QAAS,EAAS,gBAAkB,oCAAsC,wCAC1E,WAGD,EAAY,KAAK,KAAK,yBAAyB,CAC9C,MAAO,EAAS,GAAe,MAC/B,cAAe,EAAS,GAAqB,MAC7C,QAAS,EAAS,gBAAkB,uBAAyB,2BAC7D,aAMD,EAAY,KAAK,KAAK,wBAAwB,QAAS,EAAO,EAAS,GAAoB,QAC3F,EAAY,KAAK,KAAK,wBAAwB,OAAQ,EAAO,EAAS,GAAmB,QAEzF,EAAY,KAAK,KAAK,yBAAyB,CAC9C,MAAO,EAAS,GAAgB,MAChC,cAAe,EAAS,GAAuB,MAC/C,QAAS,2CACT,YAIK,QAAQ,QAAQ,GAGhB,+BAA+B,EAAqB,EAAqB,EAAyC,CAAC,GAAM,KAAK,UAAU,KAC/I,OAAO,EAAO,UAAU,eACtB,KAAK,GAAa,EAAU,IAAI,GAAK,KAAK,wBAAwB,EAAW,GAAI,KAG5E,mDAAmD,EAAqB,EAAqB,EAAyC,CAAC,GAAM,KAAK,UAAU,KACnK,OAAO,EAAO,UAAU,eAAe,KAAK,IAC3C,MAAM,EAAkB,GAClB,EAAgB,EAAO,UAAU,mBACvC,IAAK,MAAM,KAAY,EAAW,CACjC,MAAM,EAAU,EAAc,QAAQ,IAAI,MAC1C,IAAK,IAAY,EAAQ,aAAc,CACtC,MAAM,EAAO,IAAI,EAAO,eAAe,EAAW,IAClD,EAAK,KAAO,EAAO,mBAAmB,SACtC,EAAK,MAAQ,EACb,EAAgB,KAAK,IAGvB,OAAO,IAID,wCAAwC,EAAoB,GAEnE,GAA6B,IAAzB,EAAS,KAAK,OAAc,CAE/B,IAAI,EAAQ,KAAK,SAAS,uBAAuB,EAAU,eAAiB,IAAI,EAAO,MAAM,EAAU,GACnG,EAAO,KAAK,SAAS,QAAQ,GACjC,GAAI,GAAQ,EAAK,OAAO,WAAW,KAElC,OADA,EAAQ,IAAI,EAAO,MAAM,IAAI,EAAO,SAAS,EAAM,MAAM,KAAM,EAAM,MAAM,UAAY,EAAK,QAAQ,MAAO,EAAM,KAC1G,KAAK,mDAAmD,EAAU,EAAO,GAAY,KAAK,OAGlG,EAAQ,KAAK,SAAS,uBAAuB,IAAa,IAAI,EAAO,MAAM,EAAU,GACrF,EAAO,KAAK,SAAS,QAAQ,GAC7B,IAAI,EAAU,kCAUd,OALI,GAAQ,EAAK,WAAW,OAC3B,EAAQ,IAAI,EAAO,MAAM,IAAI,EAAO,SAAS,EAAM,MAAM,KAAM,EAAM,MAAM,UAAY,GAAI,EAAM,KACjG,EAAU,EAAQ,UAAU,IAGtB,QAAQ,QAAQ,CAAC,KAAK,yBAAyB,CACrD,MAAO,EAAS,GAAkC,MAClD,cAAe,EAAS,GAA6C,MACrE,UACA,YAIF,GAA6B,IAAzB,EAAS,KAAK,QAAgB,EAAS,cAAuD,iBAAhC,EAAS,aAAa,OAAsB,EAAS,aAAa,MAAM,WAAW,KAAM,CAG1J,MAAM,EAAQ,KAAK,SAAS,uBAAuB,IAAa,IAAI,EAAO,MAAM,EAAU,GAC3F,OAAO,KAAK,mDAAmD,EAAU,EAAO,GAAY,KAAK,OAElG,OAAO,QAAQ,QAAQ,IAGhB,qCAAqC,GAC5C,MAAO,CAAC,KAAK,yBACZ,CACC,MAAO,SACP,cAAe,wBACf,QACA,QAAS,yGAEX,KAAK,yBACJ,CACC,MAAO,cACP,cAAe,wBACf,QACA,QAAS,yEAEX,KAAK,yBACJ,CACC,MAAO,qBACP,cAAe,+BACf,QACA,QAAS,sHAKJ,wBAAwB,EAAc,EAAqB,EAAsB,GACxF,MAAM,EAAO,IAAI,EAAO,eAAe,GAKvC,OAJA,EAAK,KAAO,EAAO,mBAAmB,MACtC,EAAK,OAAS,EACd,EAAK,WAAa,GAA0B,EAC5C,EAAK,MAAQ,EACN,EAGA,yBAAyB,GAChC,MAAM,EAAO,IAAI,EAAO,eAAe,EAAE,OAKzC,OAJA,EAAK,KAAO,EAAO,mBAAmB,MACtC,EAAK,cAAgB,EAAE,cACvB,EAAK,WAAa,IAAI,EAAO,cAAc,EAAE,SAC7C,EAAK,MAAQ,EAAE,MACR","file":"configurationEditingMain.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = require(\"path\");","module.exports = require(\"vscode\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar path = require(\"path\");\r\nvar fs = require(\"fs\");\r\nvar toString = Object.prototype.toString;\r\nfunction isDefined(value) {\r\n    return typeof value !== 'undefined';\r\n}\r\nfunction isNumber(value) {\r\n    return toString.call(value) === '[object Number]';\r\n}\r\nfunction isString(value) {\r\n    return toString.call(value) === '[object String]';\r\n}\r\nfunction isBoolean(value) {\r\n    return value === true || value === false;\r\n}\r\nfunction readJsonFileSync(filename) {\r\n    return JSON.parse(fs.readFileSync(filename, 'utf8'));\r\n}\r\nvar MessageFormat;\r\n(function (MessageFormat) {\r\n    MessageFormat[\"file\"] = \"file\";\r\n    MessageFormat[\"bundle\"] = \"bundle\";\r\n    MessageFormat[\"both\"] = \"both\";\r\n})(MessageFormat = exports.MessageFormat || (exports.MessageFormat = {}));\r\nvar BundleFormat;\r\n(function (BundleFormat) {\r\n    // the nls.bundle format\r\n    BundleFormat[\"standalone\"] = \"standalone\";\r\n    BundleFormat[\"languagePack\"] = \"languagePack\";\r\n})(BundleFormat = exports.BundleFormat || (exports.BundleFormat = {}));\r\nvar LocalizeInfo;\r\n(function (LocalizeInfo) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && isDefined(candidate.key) && isDefined(candidate.comment);\r\n    }\r\n    LocalizeInfo.is = is;\r\n})(LocalizeInfo || (LocalizeInfo = {}));\r\nvar resolvedLanguage;\r\nvar resolvedBundles;\r\nvar options;\r\nvar isPseudo;\r\nfunction initializeSettings() {\r\n    options = { locale: undefined, language: undefined, languagePackSupport: false, cacheLanguageResolution: true, messageFormat: MessageFormat.bundle };\r\n    if (isString(process.env.VSCODE_NLS_CONFIG)) {\r\n        try {\r\n            var vscodeOptions = JSON.parse(process.env.VSCODE_NLS_CONFIG);\r\n            var language = void 0;\r\n            var locale = void 0;\r\n            if (vscodeOptions.availableLanguages) {\r\n                var value = vscodeOptions.availableLanguages['*'];\r\n                if (isString(value)) {\r\n                    language = value;\r\n                }\r\n            }\r\n            if (isString(vscodeOptions.locale)) {\r\n                options.locale = vscodeOptions.locale.toLowerCase();\r\n            }\r\n            if (language === undefined) {\r\n                options.language = options.locale;\r\n            }\r\n            else if (language !== 'en') {\r\n                options.language = language;\r\n            }\r\n            if (isBoolean(vscodeOptions._languagePackSupport)) {\r\n                options.languagePackSupport = vscodeOptions._languagePackSupport;\r\n            }\r\n            if (isString(vscodeOptions._cacheRoot)) {\r\n                options.cacheRoot = vscodeOptions._cacheRoot;\r\n            }\r\n            if (isString(vscodeOptions._languagePackId)) {\r\n                options.languagePackId = vscodeOptions._languagePackId;\r\n            }\r\n            if (isString(vscodeOptions._translationsConfigFile)) {\r\n                options.translationsConfigFile = vscodeOptions._translationsConfigFile;\r\n                try {\r\n                    options.translationsConfig = readJsonFileSync(options.translationsConfigFile);\r\n                }\r\n                catch (error) {\r\n                    // We can't read the translation config file. Mark the cache as corrupted.\r\n                    if (vscodeOptions._corruptedFile) {\r\n                        fs.writeFile(vscodeOptions._corruptedFile, 'corrupted', 'utf8', function (err) {\r\n                            console.error(err);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // Do nothing.\r\n        }\r\n    }\r\n    isPseudo = options.locale === 'pseudo';\r\n    resolvedLanguage = undefined;\r\n    resolvedBundles = Object.create(null);\r\n}\r\ninitializeSettings();\r\nfunction supportsLanguagePack() {\r\n    return options.languagePackSupport === true && options.cacheRoot !== undefined && options.languagePackId !== undefined && options.translationsConfigFile !== undefined\r\n        && options.translationsConfig !== undefined;\r\n}\r\nfunction format(message, args) {\r\n    var result;\r\n    if (isPseudo) {\r\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\r\n        message = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\r\n    }\r\n    if (args.length === 0) {\r\n        result = message;\r\n    }\r\n    else {\r\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\r\n            var index = rest[0];\r\n            var arg = args[index];\r\n            var replacement = match;\r\n            if (typeof arg === 'string') {\r\n                replacement = arg;\r\n            }\r\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\r\n                replacement = String(arg);\r\n            }\r\n            return replacement;\r\n        });\r\n    }\r\n    return result;\r\n}\r\nfunction createScopedLocalizeFunction(messages) {\r\n    return function (key, message) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (isNumber(key)) {\r\n            if (key >= messages.length) {\r\n                console.error(\"Broken localize call found. Index out of bounds. Stacktrace is\\n: \" + new Error('').stack);\r\n                return;\r\n            }\r\n            return format(messages[key], args);\r\n        }\r\n        else {\r\n            if (isString(message)) {\r\n                console.warn(\"Message \" + message + \" didn't get externalized correctly.\");\r\n                return format(message, args);\r\n            }\r\n            else {\r\n                console.error(\"Broken localize call found. Stacktrace is\\n: \" + new Error('').stack);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction localize(key, message) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    return format(message, args);\r\n}\r\nfunction resolveLanguage(file) {\r\n    var resolvedLanguage;\r\n    if (options.cacheLanguageResolution && resolvedLanguage) {\r\n        resolvedLanguage = resolvedLanguage;\r\n    }\r\n    else {\r\n        if (isPseudo || !options.language) {\r\n            resolvedLanguage = '.nls.json';\r\n        }\r\n        else {\r\n            var locale = options.language;\r\n            while (locale) {\r\n                var candidate = '.nls.' + locale + '.json';\r\n                if (fs.existsSync(file + candidate)) {\r\n                    resolvedLanguage = candidate;\r\n                    break;\r\n                }\r\n                else {\r\n                    var index = locale.lastIndexOf('-');\r\n                    if (index > 0) {\r\n                        locale = locale.substring(0, index);\r\n                    }\r\n                    else {\r\n                        resolvedLanguage = '.nls.json';\r\n                        locale = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (options.cacheLanguageResolution) {\r\n            resolvedLanguage = resolvedLanguage;\r\n        }\r\n    }\r\n    return file + resolvedLanguage;\r\n}\r\nfunction findInTheBoxBundle(root) {\r\n    var language = options.language;\r\n    while (language) {\r\n        var candidate = path.join(root, \"nls.bundle.\" + language + \".json\");\r\n        if (fs.existsSync(candidate)) {\r\n            return candidate;\r\n        }\r\n        else {\r\n            var index = language.lastIndexOf('-');\r\n            if (index > 0) {\r\n                language = language.substring(0, index);\r\n            }\r\n            else {\r\n                language = undefined;\r\n            }\r\n        }\r\n    }\r\n    // Test if we can reslove the default bundle.\r\n    if (language === undefined) {\r\n        var candidate = path.join(root, 'nls.bundle.json');\r\n        if (fs.existsSync(candidate)) {\r\n            return candidate;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nfunction mkdir(directory) {\r\n    try {\r\n        fs.mkdirSync(directory);\r\n    }\r\n    catch (err) {\r\n        if (err.code === 'EEXIST') {\r\n            return;\r\n        }\r\n        else if (err.code === 'ENOENT') {\r\n            var parent = path.dirname(directory);\r\n            if (parent !== directory) {\r\n                mkdir(parent);\r\n                fs.mkdirSync(directory);\r\n            }\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nfunction createDefaultNlsBundle(folder) {\r\n    var metaData = readJsonFileSync(path.join(folder, 'nls.metadata.json'));\r\n    var result = Object.create(null);\r\n    for (var module_1 in metaData) {\r\n        var entry = metaData[module_1];\r\n        result[module_1] = entry.messages;\r\n    }\r\n    return result;\r\n}\r\nfunction createNLSBundle(header, metaDataPath) {\r\n    var languagePackLocation = options.translationsConfig[header.id];\r\n    if (!languagePackLocation) {\r\n        return undefined;\r\n    }\r\n    var languagePack = readJsonFileSync(languagePackLocation).contents;\r\n    var metaData = readJsonFileSync(path.join(metaDataPath, 'nls.metadata.json'));\r\n    var result = Object.create(null);\r\n    for (var module_2 in metaData) {\r\n        var entry = metaData[module_2];\r\n        var translations = languagePack[header.outDir + \"/\" + module_2];\r\n        if (translations) {\r\n            var resultMessages = [];\r\n            for (var i = 0; i < entry.keys.length; i++) {\r\n                var messageKey = entry.keys[i];\r\n                var key = isString(messageKey) ? messageKey : messageKey.key;\r\n                var translatedMessage = translations[key];\r\n                if (translatedMessage === undefined) {\r\n                    translatedMessage = entry.messages[i];\r\n                }\r\n                resultMessages.push(translatedMessage);\r\n            }\r\n            result[module_2] = resultMessages;\r\n        }\r\n        else {\r\n            result[module_2] = entry.messages;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction touch(file) {\r\n    var d = new Date();\r\n    fs.utimes(file, d, d, function () {\r\n        // Do nothing. Ignore\r\n    });\r\n}\r\nfunction cacheBundle(key, bundle) {\r\n    resolvedBundles[key] = bundle;\r\n    return bundle;\r\n}\r\nfunction loadNlsBundleOrCreateFromI18n(header, bundlePath) {\r\n    var result;\r\n    var bundle = path.join(options.cacheRoot, header.id + \"-\" + header.hash + \".json\");\r\n    var useMemoryOnly = false;\r\n    var writeBundle = false;\r\n    try {\r\n        result = JSON.parse(fs.readFileSync(bundle, { encoding: 'utf8', flag: 'r' }));\r\n        touch(bundle);\r\n        return result;\r\n    }\r\n    catch (err) {\r\n        if (err.code === 'ENOENT') {\r\n            writeBundle = true;\r\n        }\r\n        else if (err instanceof SyntaxError) {\r\n            // We have a syntax error. So no valid JSON. Use\r\n            console.log(\"Syntax error parsing message bundle: \" + err.message + \".\");\r\n            fs.unlink(bundle, function (err) {\r\n                if (err) {\r\n                    console.error(\"Deleting corrupted bundle \" + bundle + \" failed.\");\r\n                }\r\n            });\r\n            useMemoryOnly = true;\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    result = createNLSBundle(header, bundlePath);\r\n    if (!result || useMemoryOnly) {\r\n        return result;\r\n    }\r\n    if (writeBundle) {\r\n        try {\r\n            fs.writeFileSync(bundle, JSON.stringify(result), { encoding: 'utf8', flag: 'wx' });\r\n        }\r\n        catch (err) {\r\n            if (err.code === 'EEXIST') {\r\n                return result;\r\n            }\r\n            throw err;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction loadDefaultNlsBundle(bundlePath) {\r\n    try {\r\n        return createDefaultNlsBundle(bundlePath);\r\n    }\r\n    catch (err) {\r\n        console.log(\"Generating default bundle from meta data failed.\", err);\r\n        return undefined;\r\n    }\r\n}\r\nfunction loadNlsBundle(header, bundlePath) {\r\n    var result;\r\n    // Core decided to use a language pack. Do the same in the extension\r\n    if (supportsLanguagePack()) {\r\n        try {\r\n            result = loadNlsBundleOrCreateFromI18n(header, bundlePath);\r\n        }\r\n        catch (err) {\r\n            console.log(\"Load or create bundle failed \", err);\r\n        }\r\n    }\r\n    if (!result) {\r\n        // No language pack found, but core is running in language pack mode\r\n        // Don't try to use old in the box bundles since the might be stale\r\n        // Fall right back to the default bundle.\r\n        if (options.languagePackSupport) {\r\n            return loadDefaultNlsBundle(bundlePath);\r\n        }\r\n        var candidate = findInTheBoxBundle(bundlePath);\r\n        if (candidate) {\r\n            try {\r\n                return readJsonFileSync(candidate);\r\n            }\r\n            catch (err) {\r\n                console.log(\"Loading in the box message bundle failed.\", err);\r\n            }\r\n        }\r\n        result = loadDefaultNlsBundle(bundlePath);\r\n    }\r\n    return result;\r\n}\r\nfunction tryFindMetaDataHeaderFile(file) {\r\n    var result;\r\n    var dirname = path.dirname(file);\r\n    while (true) {\r\n        result = path.join(dirname, 'nls.metadata.header.json');\r\n        if (fs.existsSync(result)) {\r\n            break;\r\n        }\r\n        var parent = path.dirname(dirname);\r\n        if (parent === dirname) {\r\n            result = undefined;\r\n            break;\r\n        }\r\n        else {\r\n            dirname = parent;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction loadMessageBundle(file) {\r\n    if (!file) {\r\n        // No file. We are in dev mode. Return the default\r\n        // localize function.\r\n        return localize;\r\n    }\r\n    // Remove extension since we load json files.\r\n    var ext = path.extname(file);\r\n    if (ext) {\r\n        file = file.substr(0, file.length - ext.length);\r\n    }\r\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.bundle) {\r\n        var headerFile = tryFindMetaDataHeaderFile(file);\r\n        if (headerFile) {\r\n            var bundlePath = path.dirname(headerFile);\r\n            var bundle = resolvedBundles[bundlePath];\r\n            if (bundle === undefined) {\r\n                try {\r\n                    var header = JSON.parse(fs.readFileSync(headerFile, 'utf8'));\r\n                    try {\r\n                        var nlsBundle = loadNlsBundle(header, bundlePath);\r\n                        bundle = cacheBundle(bundlePath, nlsBundle ? { header: header, nlsBundle: nlsBundle } : null);\r\n                    }\r\n                    catch (err) {\r\n                        console.error('Failed to load nls bundle', err);\r\n                        bundle = cacheBundle(bundlePath, null);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.error('Failed to read header file', err);\r\n                    bundle = cacheBundle(bundlePath, null);\r\n                }\r\n            }\r\n            if (bundle) {\r\n                var module_3 = file.substr(bundlePath.length + 1).replace(/\\\\/g, '/');\r\n                var messages = bundle.nlsBundle[module_3];\r\n                if (messages === undefined) {\r\n                    console.error(\"Messages for file \" + file + \" not found. See console for details.\");\r\n                    return function () {\r\n                        return 'Messages not found.';\r\n                    };\r\n                }\r\n                return createScopedLocalizeFunction(messages);\r\n            }\r\n        }\r\n    }\r\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.file) {\r\n        // Try to load a single file bundle\r\n        try {\r\n            var json = readJsonFileSync(resolveLanguage(file));\r\n            if (Array.isArray(json)) {\r\n                return createScopedLocalizeFunction(json);\r\n            }\r\n            else {\r\n                if (isDefined(json.messages) && isDefined(json.keys)) {\r\n                    return createScopedLocalizeFunction(json.messages);\r\n                }\r\n                else {\r\n                    console.error(\"String bundle '\" + file + \"' uses an unsupported format.\");\r\n                    return function () {\r\n                        return 'File bundle has unsupported format. See console for details';\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        catch (err) {\r\n            if (err.code !== 'ENOENT') {\r\n                console.error('Failed to load single file bundle', err);\r\n            }\r\n        }\r\n    }\r\n    console.error(\"Failed to load message bundle for file \" + file);\r\n    return function () {\r\n        return 'Failed to load message bundle. See console for details.';\r\n    };\r\n}\r\nexports.loadMessageBundle = loadMessageBundle;\r\nfunction config(opts) {\r\n    if (opts) {\r\n        if (isString(opts.locale)) {\r\n            options.locale = opts.locale.toLowerCase();\r\n            options.language = options.locale;\r\n            resolvedLanguage = undefined;\r\n            resolvedBundles = Object.create(null);\r\n        }\r\n        if (opts.messageFormat !== undefined) {\r\n            options.messageFormat = opts.messageFormat;\r\n        }\r\n        if (opts.bundleFormat === BundleFormat.standalone && options.languagePackSupport === true) {\r\n            options.languagePackSupport = false;\r\n        }\r\n    }\r\n    isPseudo = options.locale === 'pseudo';\r\n    return loadMessageBundle;\r\n}\r\nexports.config = config;\r\n//# sourceMappingURL=main.js.map",null,"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var len = text.length;\n    var pos = 0, value = '', tokenOffset = 0, token = 16 /* Unknown */, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                var ch2 = text.charCodeAt(pos++);\n                switch (ch2) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch3 = scanHexDigits(4, true);\n                        if (ch3 >= 0) {\n                            result += String.fromCharCode(ch3);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        lineStartOffset = lineNumber;\n        prevTokenLineStartOffset = tokenLineStartOffset;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            lineNumber++;\n            tokenLineStartOffset = pos;\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var safeLength = len - 1; // For lookahead.\n                    var commentClosed = false;\n                    while (pos < safeLength) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                        if (isLineBreak(ch)) {\n                            if (ch === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                                pos++;\n                            }\n                            lineNumber++;\n                            tokenLineStartOffset = pos;\n                        }\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n            case 47 /* slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenStartLine: function () { return lineStartOffset; },\n        getTokenStartCharacter: function () { return tokenOffset - prevTokenLineStartOffset; },\n        getTokenError: function () { return scanError; },\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nexport function format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = createScanner(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nvar ParseOptions;\n(function (ParseOptions) {\n    ParseOptions.DEFAULT = {\n        allowTrailingComma: false\n    };\n})(ParseOptions || (ParseOptions = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = undefined;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: undefined\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = undefined;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = undefined;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = undefined;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty !== null) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            ensurePropertyComplete(offset + length); // in case of a missing value for a property: make sure property is complete\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return undefined;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return undefined;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return undefined;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return undefined;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    var path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        var key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        var index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            var obj = Object.create(null);\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var prop = _a[_i];\n                var valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return undefined;\n    }\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    if (contains(node, offset, includeRightBound)) {\n        var children = node.children;\n        if (Array.isArray(children)) {\n            for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\n                var item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return undefined;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        if (options.allowEmptyContent) {\n            return true;\n        }\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== undefined) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nexport function getNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        case 'object': {\n            if (!value) {\n                return 'null';\n            }\n            else if (Array.isArray(value)) {\n                return 'array';\n            }\n            return 'object';\n        }\n        default: return 'null';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format, isEOL } from './format';\nimport { parseTree, findNodeAtLocation } from './parser';\nexport function removeProperty(text, path, formattingOptions) {\n    return setProperty(text, path, void 0, formattingOptions);\n}\nexport function setProperty(text, originalPath, value, formattingOptions, getInsertionIndex) {\n    var _a;\n    var path = originalPath.slice();\n    var errors = [];\n    var root = parseTree(text, errors);\n    var parent = void 0;\n    var lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = (_a = {}, _a[lastSegment] = value, _a);\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) { // delete\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        var existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) { // delete\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                var propertyIndex = parent.children.indexOf(existing.parent);\n                var removeBegin = void 0;\n                var removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    var previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        var next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n            }\n        }\n        else {\n            if (value === void 0) { // delete\n                return []; // property does not exist, nothing to do\n            }\n            var newProperty = JSON.stringify(lastSegment) + \": \" + JSON.stringify(value);\n            var index = getInsertionIndex ? getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\n            var edit = void 0;\n            if (index > 0) {\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        var insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            var newProperty = \"\" + JSON.stringify(value);\n            var edit = void 0;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                var previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n        else {\n            if (value === void 0 && parent.children.length >= 0) {\n                //Removal\n                var removalIndex = lastSegment;\n                var toRemove = parent.children[removalIndex];\n                var edit = void 0;\n                if (parent.children.length === 1) {\n                    // only item\n                    edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n                }\n                else if (parent.children.length - 1 === removalIndex) {\n                    // last item\n                    var previous = parent.children[removalIndex - 1];\n                    var offset = previous.offset + previous.length;\n                    var parentEndOffset = parent.offset + parent.length;\n                    edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\n                }\n                else {\n                    edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n                }\n                return withFormatting(text, edit, formattingOptions);\n            }\n            else {\n                throw new Error('Array modification not supported yet');\n            }\n        }\n    }\n    else {\n        throw new Error(\"Can not add \" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \" to parent of type \" + parent.type);\n    }\n}\nfunction withFormatting(text, edit, formattingOptions) {\n    // apply the edit\n    var newText = applyEdit(text, edit);\n    // format the new text\n    var begin = edit.offset;\n    var end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) { // insert or remove\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    var edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (var i = edits.length - 1; i >= 0; i--) {\n        var edit_1 = edits[i];\n        newText = applyEdit(newText, edit_1);\n        begin = Math.min(begin, edit_1.offset);\n        end = Math.max(end, edit_1.offset + edit_1.length);\n        end += edit_1.content.length - edit_1.length;\n    }\n    // create a single edit with all changes\n    var editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format';\nimport * as edit from './impl/edit';\nimport * as scanner from './impl/scanner';\nimport * as parser from './impl/parser';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore, always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the innermost node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport var findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport var getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\nexport function printParseErrorCode(code) {\n    switch (code) {\n        case 1 /* InvalidSymbol */: return 'InvalidSymbol';\n        case 2 /* InvalidNumberFormat */: return 'InvalidNumberFormat';\n        case 3 /* PropertyNameExpected */: return 'PropertyNameExpected';\n        case 4 /* ValueExpected */: return 'ValueExpected';\n        case 5 /* ColonExpected */: return 'ColonExpected';\n        case 6 /* CommaExpected */: return 'CommaExpected';\n        case 7 /* CloseBraceExpected */: return 'CloseBraceExpected';\n        case 8 /* CloseBracketExpected */: return 'CloseBracketExpected';\n        case 9 /* EndOfFileExpected */: return 'EndOfFileExpected';\n        case 10 /* InvalidCommentToken */: return 'InvalidCommentToken';\n        case 11 /* UnexpectedEndOfComment */: return 'UnexpectedEndOfComment';\n        case 12 /* UnexpectedEndOfString */: return 'UnexpectedEndOfString';\n        case 13 /* UnexpectedEndOfNumber */: return 'UnexpectedEndOfNumber';\n        case 14 /* InvalidUnicode */: return 'InvalidUnicode';\n        case 15 /* InvalidEscapeCharacter */: return 'InvalidEscapeCharacter';\n        case 16 /* InvalidCharacter */: return 'InvalidCharacter';\n    }\n    return '<unknown ParseErrorCode>';\n}\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`.\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`.\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n",null,"module.exports = require(\"fs\");",null],"sourceRoot":""}