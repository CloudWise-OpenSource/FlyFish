{"version":3,"sources":["webpack://xterm/webpack/universalModuleDefinition","webpack://xterm/./src/browser/AccessibilityManager.ts","webpack://xterm/./src/browser/Clipboard.ts","webpack://xterm/./src/browser/Color.ts","webpack://xterm/./src/browser/ColorContrastCache.ts","webpack://xterm/./src/browser/ColorManager.ts","webpack://xterm/./src/browser/Dom.ts","webpack://xterm/./src/browser/Lifecycle.ts","webpack://xterm/./src/browser/Linkifier.ts","webpack://xterm/./src/browser/Linkifier2.ts","webpack://xterm/./src/browser/LocalizableStrings.ts","webpack://xterm/./src/browser/MouseZoneManager.ts","webpack://xterm/./src/browser/RenderDebouncer.ts","webpack://xterm/./src/browser/ScreenDprMonitor.ts","webpack://xterm/./src/browser/Terminal.ts","webpack://xterm/./src/browser/Viewport.ts","webpack://xterm/./src/browser/input/CompositionHelper.ts","webpack://xterm/./src/browser/input/Mouse.ts","webpack://xterm/./src/browser/input/MoveToCell.ts","webpack://xterm/./src/browser/public/AddonManager.ts","webpack://xterm/./src/browser/public/Terminal.ts","webpack://xterm/./src/browser/renderer/BaseRenderLayer.ts","webpack://xterm/./src/browser/renderer/CursorRenderLayer.ts","webpack://xterm/./src/browser/renderer/GridCache.ts","webpack://xterm/./src/browser/renderer/LinkRenderLayer.ts","webpack://xterm/./src/browser/renderer/Renderer.ts","webpack://xterm/./src/browser/renderer/RendererUtils.ts","webpack://xterm/./src/browser/renderer/SelectionRenderLayer.ts","webpack://xterm/./src/browser/renderer/TextRenderLayer.ts","webpack://xterm/./src/browser/renderer/atlas/BaseCharAtlas.ts","webpack://xterm/./src/browser/renderer/atlas/CharAtlasCache.ts","webpack://xterm/./src/browser/renderer/atlas/CharAtlasUtils.ts","webpack://xterm/./src/browser/renderer/atlas/Constants.ts","webpack://xterm/./src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack://xterm/./src/browser/renderer/atlas/LRUMap.ts","webpack://xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://xterm/./src/browser/selection/SelectionModel.ts","webpack://xterm/./src/browser/services/CharSizeService.ts","webpack://xterm/./src/browser/services/CharacterJoinerService.ts","webpack://xterm/./src/browser/services/CoreBrowserService.ts","webpack://xterm/./src/browser/services/MouseService.ts","webpack://xterm/./src/browser/services/RenderService.ts","webpack://xterm/./src/browser/services/SelectionService.ts","webpack://xterm/./src/browser/services/Services.ts","webpack://xterm/./src/browser/services/SoundService.ts","webpack://xterm/./src/common/CircularList.ts","webpack://xterm/./src/common/Clone.ts","webpack://xterm/./src/common/CoreTerminal.ts","webpack://xterm/./src/common/EventEmitter.ts","webpack://xterm/./src/common/InputHandler.ts","webpack://xterm/./src/common/Lifecycle.ts","webpack://xterm/./src/common/Platform.ts","webpack://xterm/./src/common/TypedArrayUtils.ts","webpack://xterm/./src/common/WindowsMode.ts","webpack://xterm/./src/common/buffer/AttributeData.ts","webpack://xterm/./src/common/buffer/Buffer.ts","webpack://xterm/./src/common/buffer/BufferLine.ts","webpack://xterm/./src/common/buffer/BufferReflow.ts","webpack://xterm/./src/common/buffer/BufferSet.ts","webpack://xterm/./src/common/buffer/CellData.ts","webpack://xterm/./src/common/buffer/Constants.ts","webpack://xterm/./src/common/buffer/Marker.ts","webpack://xterm/./src/common/data/Charsets.ts","webpack://xterm/./src/common/data/EscapeSequences.ts","webpack://xterm/./src/common/input/Keyboard.ts","webpack://xterm/./src/common/input/TextDecoder.ts","webpack://xterm/./src/common/input/UnicodeV6.ts","webpack://xterm/./src/common/input/WriteBuffer.ts","webpack://xterm/./src/common/parser/Constants.ts","webpack://xterm/./src/common/parser/DcsParser.ts","webpack://xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://xterm/./src/common/parser/OscParser.ts","webpack://xterm/./src/common/parser/Params.ts","webpack://xterm/./src/common/services/BufferService.ts","webpack://xterm/./src/common/services/CharsetService.ts","webpack://xterm/./src/common/services/CoreMouseService.ts","webpack://xterm/./src/common/services/CoreService.ts","webpack://xterm/./src/common/services/DirtyRowService.ts","webpack://xterm/./src/common/services/InstantiationService.ts","webpack://xterm/./src/common/services/LogService.ts","webpack://xterm/./src/common/services/OptionsService.ts","webpack://xterm/./src/common/services/ServiceRegistry.ts","webpack://xterm/./src/common/services/Services.ts","webpack://xterm/./src/common/services/UnicodeService.ts","webpack://xterm/webpack/bootstrap","webpack://xterm/webpack/startup"],"names":["root","factory","exports","module","define","amd","a","i","self","_terminal","_renderService","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","classList","add","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_onBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","RenderDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_onResize","onRender","start","end","onScroll","onA11yChar","char","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","onKey","_onKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","window","dispose","removeElementFromParent","this","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","tabIndex","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","actualCellHeight","style","height","Disposable","AccessibilityManager","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","channels","rgb","rgba","toPaddedHex","c","s","contrastRatio","l1","l2","toCss","r","g","b","undefined","toRgba","color","blend","bg","fg","css","fgR","fgG","fgB","bgR","bgG","bgB","Math","round","isOpaque","ensureContrastRatio","ratio","result","toColor","opaque","rgbaColor","toChannels","opacity","parseInt","slice","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","max","ceil","increaseLuminance","min","bgL","fgL","_color","_rgba","clear","setCss","getCss","setColor","getColor","ColorContrastCache","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","foreground","background","cursor","cursorAccent","selectionTransparent","selectionOpaque","ansi","contrastCache","onOptionsChange","setTheme","theme","_parseColor","selection","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","fallback","fillStyle","console","warn","fillRect","data","getImageData","substring","split","map","component","Number","alpha","ColorManager","elements","parentElement","node","type","handler","options","disposed","_bufferService","_logService","_unicodeService","_linkMatchers","_nextLinkMatcherId","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","_onLinkTooltip","_rowsToLinkify","event","attachToDom","mouseZoneManager","_element","_mouseZoneManager","linkifyRows","clearAll","_rowsTimeoutId","clearTimeout","_linkifyRows","Linkifier","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","cols","iterator","hasNext","next","_doLinkifyRow","range","first","content","debug","registerLinkMatcher","regex","matcher","id","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","splice","deregisterLinkMatcher","matcherId","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","indexOf","lastIndex","bufferIndex","stringIndexToBufferIndex","line","get","attr","getFg","isValid","_addLink","exec","x","y","getStringCellWidth","x1","y1","floor","x2","y2","MouseZone","newWindow","open","opener","location","href","fire","_createLinkHoverEvent","remove","IBufferService","ILogService","IUnicodeService","clickCallback","hoverCallback","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","_currentLink","registerLinkProvider","linkProvider","providerIndex","mouseService","renderService","_mouseService","_clearCurrentLink","_onMouseMove","_onClick","_lastMouseEvent","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","_onHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","_checkLinkProviderResult","provideLinks","links","linksWithState","set","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","endX","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedBufferChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","Linkifier2","promptLabel","_screenElement","_selectionService","_optionsService","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseMoveListener","_mouseLeaveListener","_onMouseLeave","_clickListener","_deactivate","zone","_activate","_currentZone","pageX","pageY","_findZoneEventAt","_tooltipTimeout","_onTooltip","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","IMouseService","ISelectionService","IOptionsService","MouseZoneManager","_renderCallback","_animationFrame","cancelAnimationFrame","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","browser","Browser","_keyDownHandled","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","linkifier2","_inputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onAnsiColorChange","_changeAnsiColor","forwardEvent","onCursorMove","onTitleChange","_afterResize","optionsService","_colorManager","ansiColor","colorIndex","setColors","viewport","onThemeChange","_isDisposed","_customKeyEventHandler","write","buffers","active","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","_coreService","sendFocus","C0","ESC","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","actualCellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","parent","isConnected","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","coreBrowserService","CoreBrowserService","setService","ICoreBrowserService","CharSizeService","ICharSizeService","_theme","onOptionChange","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","renderer","RenderService","IRenderService","resize","_compositionView","CompositionHelper","_soundService","SoundService","ISoundService","MouseService","Viewport","amount","onRequestSyncScrollBar","onFocus","SelectionService","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","onMouseDown","_coreMouseService","areMouseEventsActive","disable","enable","bindMouse","rendererType","Renderer","DomRenderer","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","normal","column","setSelection","getSelection","getSelectionPosition","startColumn","selectionStart","endColumn","selectionEnd","clearSelection","selectAll","selectLines","keydown","scrollToBottom","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","ETX","CR","domEvent","thirdLevelKey","metaKey","isWindows","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","_soundBell","playBellSound","hasValidSize","getBlankLine","DEFAULT_ATTR_DATA","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","scaledCellWidth","scaledCellHeight","force","cancelEvents","_visualBell","bellStyle","CoreTerminal","Terminal","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","scrollTop","newScrollTop","offsetParent","diff","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","_textarea","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","colCount","hasValidCharSize","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","isWrapped","wrappedRowsCount","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","_addons","instance","loadAddon","terminal","loadedAddon","isDisposed","_wrappedAddonDispose","apply","AddonManager","_core","_addonManager","_checkProposedApi","allowProposedApi","onData","onBinary","onBell","_parser","ParserApi","UnicodeApi","_buffer","BufferNamespaceApi","columns","_verifyIntegers","registerMarker","scrollPages","pageCount","scrollToTop","scrollToLine","callback","writeUtf8","writeln","getOption","setOption","addon","values","Infinity","isNaN","init","getLine","BufferLineApiView","getNullCell","CellData","_onBufferChange","_normal","BufferApiView","_alternate","onBufferActivate","alternate","_line","getCell","cell","loadCell","translateToString","trimRight","registerCsiHandler","params","toArray","addCsiHandler","registerDcsHandler","addDcsHandler","registerEscHandler","addEscHandler","registerOscHandler","ident","addOscHandler","provider","unicodeService","versions","activeVersion","version","_container","_alpha","_colors","_rendererId","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","code","bold","dim","italic","_canvas","_initCanvas","_charAtlas","throwIfFalsy","_clearAll","onOptionsChanged","onGridChanged","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","warmUp","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","_fillCells","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","_clearCells","_fillCharTrueColor","font","_getFont","textBaseline","_clipRow","fillText","getChars","_drawChars","contrastColor","_getContrastColor","isFgRGB","isBgRGB","_drawUncachedChars","isInverse","isBgDefault","INVERTED_DEFAULT_COLOR","getBgColor","isFgDefault","getFgColor","DEFAULT_COLOR","drawBoldTextInBrightColors","isBold","WHITESPACE_CELL_CHAR","getCode","WHITESPACE_CELL_CODE","isDim","isItalic","draw","fgOverride","save","AttributeData","toColorRGB","join","globalAlpha","DIM_OPACITY","restore","beginPath","clip","fontWeightBold","fontWeight","minimumContrastRatio","adjustedColor","fgColor","fgColorMode","getFgColorMode","bgColor","bgColorMode","getBgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","inverse","BaseRenderLayer","BLINK_INTERVAL","container","rendererId","_onRequestRedraw","_coreBrowserService","_cell","_state","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","cursorBlink","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","isCursorHidden","viewportRelativeCursorY","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","CursorRenderLayer","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","Date","now","timeToStart","time","setInterval","cache","GridCache","onShowLinkUnderline","onHideLinkUnderline","middleRowCount","is256Color","LinkRenderLayer","nextRendererId","instantiationService","_id","_renderLayers","TextRenderLayer","SelectionRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","l","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","IInstantiationService","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_characterWidth","_characterFont","_characterOverlapCache","_workCell","terminalFont","_forEachCell","firstRow","lastRow","joinedRanges","getJoinedCharacters","isJoined","lastCharX","JoinedCellData","_isOverlapping","getCodePoint","NULL_CELL_CODE","_drawBackground","prevFillStyle","nextFillStyle","isBgPalette","_drawForeground","isInvisible","isUnderline","beginFrame","hasOwnProperty","overlaps","measureText","_didWarmUp","_doWarmUp","BaseCharAtlas","charAtlasCache","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","colorCode","CHAR_ATLAS_CELL_SPACING","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_width","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","idx","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","offset","clearColor","putImageData","_addGlyphToBitmap","isSafari","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","NoneCharAtlas","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","nodePool","peekValue","head","TERMINAL_CLASS_PREFIX","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","isCursorRow","lineLength","charElement","display","_applyMinimumContrast","_addStyle","padStart","padChar","isSelectAllActive","selectionStartLength","areSelectionValuesReversed","startPlusLength","onTrim","SelectionModel","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","firstCell","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","getBg","getTrimmedLength","_getJoinedRanges","startIndex","endIndex","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","getRootNode","activeElement","hasFocus","_renderer","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","_fullRefresh","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","changeOptions","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","_onTrim","_onBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","_selectWordAt","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","activeBuffer","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","last","createDecorator","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","len","bytes","Uint8Array","charCodeAt","dataURI","_maxLength","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","Array","_startIndex","_length","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","CircularList","clone","val","depth","clonedObject","isArray","hasWriteSyncWarnHappened","_onBinary","_onData","_onLineFeed","InstantiationService","OptionsService","BufferService","LogService","CoreService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","UnicodeService","_charsetService","CharsetService","ICharsetService","InputHandler","markRangeDirty","scrollBottom","_writeBuffer","WriteBuffer","promiseResult","parse","_onScrollApi","_windowsMode","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","hook","put","concat","subarray","unhook","success","utf32ToString","pt","EscapeSequenceParser","_parseBuffer","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onAnsiColorChange","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","setCsiHandlerFallback","identifier","identToString","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","BEL","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setAnsiColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","error","DECRQSS","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","wasPaused","clearRange","decode","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","extended","wcwidth","ch","stringFromCodePoint","_eraseAttrData","insertCells","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","hasContent","DcsHandler","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","origin","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","replaceCells","_resetBufferLine","fill","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","underlineStyle","updateExtended","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","_parseAnsiColorChange","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","_disposables","d","unregister","disposables","array","isNode","navigator","userAgent","platform","includes","test","isIpad","isIphone","fillFallback","constructor","lastChar","CHAR_DATA_CODE_INDEX","ExtendedAttrs","newObj","isBlink","isFgPalette","isAttributeDefault","hasExtendedAttrs","getUnderlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_cols","_rows","_getCorrectBufferLength","getWhitespaceCell","BufferLine","maxLength","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","trimmedLines","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","marker","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","Buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","keys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_alt","_activeBuffer","inactiveBuffer","BufferSet","obj","combined","DEFAULT_ATTR","_nextId","_onDispose","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","DEL","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","modifiers","keyMapping","codepoint","_interim","startPos","interim","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","table","BMP_COMBINING","HIGH_COMBINING","num","ucs","mid","bisearch","UnicodeV6","qmt","queueMicrotask","cb","resolve","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","chunk","_innerWrite","lastTime","startTime","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","handlerResult","DcsParser","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","setDefault","addMany","codes","TransitionTable","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_start","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","k","newParams","prototype","getSubParamsAll","store","cur","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","isFull","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","name","protocol","encoding","_compareEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","wasUserInput","disableStdin","_end","_entries","entries","service","ServiceCollection","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","args","optionsKeyToLogLevel","DEBUG","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","altClickMovesCursor","FONT_WEIGHT_OPTIONS","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","newValue","_sanitizeAndValidateOption","storeServiceDependency","serviceRegistry","decorator","arguments","_providers","_onChange","defaultProvider","_activeProvider","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"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","file":"xterm.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    switch (css.length) {\n      case 7: // #rrggbb\n        return {\n          css,\n          rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n        };\n      case 9: // #rrggbbaa\n        return {\n          css,\n          rgba: parseInt(css.slice(1), 16) >>> 0\n        };\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'click', this._onClick.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    this._linkProviders.forEach((linkProvider, i) => {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    });\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _onClick(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedBufferChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.options.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    zone?.tooltipCallback(e);\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2, CharacterJoinerHandler } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IAnsiColorChangeEvent } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService, ICharacterJoinerService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { ITerminalOptions as IInitializedTerminalOptions } from 'common/services/Services';\nimport { rgba } from 'browser/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): IInitializedTerminalOptions { return this.optionsService.options; }\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell  = new EventEmitter<void>();\n  public get onBell (): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onAnsiColorChange((event) => this._changeAnsiColor(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  private _changeAnsiColor(event: IAnsiColorChangeEvent): void {\n    if (!this._colorManager) { return; }\n\n    for (const ansiColor of event.colors) {\n      const color = rgba.toColor(ansiColor.red, ansiColor.green, ansiColor.blue);\n\n      this._colorManager!.colors.ansi[ansiColor.colorIndex] = color;\n    }\n\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.options.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.options.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this._coreService.decPrivateModes.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this._coreService.decPrivateModes.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this._coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    this.element.setAttribute('role', 'document');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedBufferChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.element, this._mouseService, this._renderService);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this._coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self._coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        ev.preventDefault();\n        return this.cancel(ev);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this._coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.options.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this._coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this._coreMouseService.activeProtocol = this._coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this._coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!requestedEvents.wheel) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport!.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this._coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this._coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n    }, { passive: true }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (requestedEvents.wheel) return;\n      if (!this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this._coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this._coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this._coreService.isCursorInitialized) {\n      this._coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this._coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this._coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this._coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this._coreService.triggerDataEvent(key, true);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService!.playBellSound();\n    }\n\n    this._onBell.fire();\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this._coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this._coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.options.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.options.fastScrollSensitivity * this._optionsService.options.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.options.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(<any>terminal);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi, IParser, IFunctionIdentifier, ILinkProvider, IUnicodeHandling, IUnicodeVersionProvider, FontWeight } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../LocalizableStrings';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\nimport { IParams } from 'common/parser/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.options.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n\nclass BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ITerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, <ICellData>cell);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass ParserApi implements IParser {\n  constructor(private _core: ITerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n\nclass UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ITerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = 'ideographic';\n    this._clipRow(y);\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'ideographic';\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.options.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.options.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n      this.onOptionsChanged();\n    }\n  }\n\n  public onBlur(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume();\n    } else {\n      this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n    }\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.options.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService, IInstantiationService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.options.allowTransparency;\n    this._renderLayers = [\n      instantiationService.createInstance(TextRenderLayer, this._screenElement, 0, this._colors, allowTransparency, this._id),\n      instantiationService.createInstance(SelectionRenderLayer, this._screenElement, 1, this._colors, this._id),\n      instantiationService.createInstance(LinkRenderLayer, this._screenElement, 2, this._colors, this._id, linkifier, linkifier2),\n      instantiationService.createInstance(CursorRenderLayer, this._screenElement, 3, this._colors, this._id, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    alpha: boolean,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this._fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IPartialColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: colors.ansi\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', { alpha: true }));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'ideographic';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e));\n\n    this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.options.fontFamily};` +\n      ` font-size: ${this._optionsService.options.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.options.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.options.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.options.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionTransparent.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.options.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.options.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerService._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedBufferChange(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(e => this._fullRefresh()));\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRender.fire({ start, end });\n    }\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICharSizeService, IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine && bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionEnd = [range.end.x, range.end.y - 1];\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedBufferChange: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] ? clone(val[key], depth - 1) : val[key]);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ITerminalOptions, IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _coreService: ICoreService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _coreMouseService: ICoreMouseService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n\n  constructor(\n    options: ITerminalOptions\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this._coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this._coreService);\n    this._coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this._coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this._coreService, this._dirtyRowService, this._logService, this.optionsService, this._coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this._coreService.onData, this._onData));\n    this.register(forwardEvent(this._coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.options.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this._coreService.reset();\n    this._coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.options.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IAnsiColorChangeEvent, IParseStack } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onAnsiColorChange = new EventEmitter<IAnsiColorChangeEvent>();\n  public get onAnsiColorChange(): IEvent<IAnsiColorChangeEvent> { return this._onAnsiColorChange.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setAnsiColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let buffer = this._bufferService.buffer;\n    let cursorStartX = buffer.x;\n    let cursorStartY = buffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    this._logService.debug('parsing data', data);\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._bufferService.buffer;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = buffer.lines.get(buffer.ybase + buffer.y)!;\n\n    this._dirtyRowService.markDirty(buffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (buffer.x && end - start > 0 && bufferRow.getWidth(buffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(buffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (buffer.x < cols) {\n            bufferRow.setCellFromCodePoint(buffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y === buffer.scrollBottom + 1) {\n            buffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (buffer.y >= this._bufferService.rows) {\n              buffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.ybase + buffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.ybase + buffer.y)!;\n        } else {\n          buffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (buffer.x < cols && end - start > 0 && bufferRow.getWidth(buffer.x) === 0 && !bufferRow.hasContent(buffer.x)) {\n      bufferRow.setCellFromCodePoint(buffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(buffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    this._dirtyRowService.markDirty(buffer.y);\n    if (this._optionsService.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._bufferService.cols) {\n      buffer.x--;\n    }\n    this._dirtyRowService.markDirty(buffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._bufferService.buffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    const buffer = this._bufferService.buffer;\n\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (buffer.x > 0) {\n        buffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (buffer.x > 0) {\n      buffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (buffer.x === 0\n          && buffer.y > buffer.scrollTop\n          && buffer.y <= buffer.scrollBottom\n          && buffer.lines.get(buffer.ybase + buffer.y)?.isWrapped)\n      {\n        buffer.lines.get(buffer.ybase + buffer.y)!.isWrapped = false;\n        buffer.y--;\n        buffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = buffer.lines.get(buffer.ybase + buffer.y)!;\n        if (line.hasWidth(buffer.x) && !line.hasContent(buffer.x)) {\n          buffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._bufferService.buffer.x;\n    this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._onA11yTab.fire(this._bufferService.buffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._bufferService.buffer.x = Math.min(maxCol, Math.max(0, this._bufferService.buffer.x));\n    this._bufferService.buffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._bufferService.buffer.scrollBottom, Math.max(this._bufferService.buffer.scrollTop, this._bufferService.buffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._bufferService.buffer.y));\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = this._bufferService.buffer.scrollTop + y;\n    } else {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._bufferService.buffer.x + x, this._bufferService.buffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._bufferService.buffer.y - this._bufferService.buffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._bufferService.buffer.scrollBottom - this._bufferService.buffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._bufferService.buffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._bufferService.buffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._bufferService.buffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._bufferService.buffer.tabs[this._bufferService.buffer.x];\n    } else if (param === 3) {\n      this._bufferService.buffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y)!;\n    line.fill(this._bufferService.buffer.getNullCell(this._eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor();\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._bufferService.buffer.x, this._bufferService.cols, this._bufferService.buffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._bufferService.buffer.x + 1, true);\n        if (this._bufferService.buffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._bufferService.buffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._bufferService.buffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._bufferService.buffer.lines.trimStart(scrollBackSize);\n          this._bufferService.buffer.ybase = Math.max(this._bufferService.buffer.ybase - scrollBackSize, 0);\n          this._bufferService.buffer.ydisp = Math.max(this._bufferService.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor();\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._bufferService.buffer.y, this._bufferService.buffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = buffer.ybase + buffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = buffer.ybase + buffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - buffer.scrollBottom;\n    j = this._bufferService.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + this._bufferService.buffer.y);\n    if (line) {\n      line.insertCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + this._bufferService.buffer.y);\n    if (line) {\n      line.deleteCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y)!;\n      line.deleteCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y)!;\n      line.insertCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = this._bufferService.buffer.lines.get(buffer.ybase + y)!;\n      line.insertCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y)!;\n      line.deleteCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + this._bufferService.buffer.y);\n    if (line) {\n      line.replaceCells(\n        this._bufferService.buffer.x,\n        this._bufferService.buffer.x + (params.params[0] || 1),\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters.                                  | #N      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out.                                         | #N      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._bufferService.buffer.scrollTop = 0;\n    this._bufferService.buffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._bufferService.buffer.savedX = 0;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._bufferService.buffer.scrollTop = top - 1;\n      this._bufferService.buffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._bufferService.buffer.savedX = this._bufferService.buffer.x;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._bufferService.buffer.x = this._bufferService.buffer.savedX || 0;\n    this._bufferService.buffer.y = Math.max(this._bufferService.buffer.savedY - this._bufferService.buffer.ybase, 0);\n    this._curAttrData.fg = this._bufferService.buffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._bufferService.buffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._bufferService.buffer.savedCharset) {\n      this._charsetService.charset = this._bufferService.buffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  protected _parseAnsiColorChange(data: string): IAnsiColorChangeEvent | null {\n    const result: IAnsiColorChangeEvent = { colors: [] };\n    // example data: 5;rgb:aa/bb/cc\n    const regex = /(\\d+);rgb:([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})/gi;\n    let match;\n\n    while ((match = regex.exec(data)) !== null) {\n      result.colors.push({\n        colorIndex: parseInt(match[1]),\n        red: parseInt(match[2], 16),\n        green: parseInt(match[3], 16),\n        blue: parseInt(match[4], 16)\n      });\n    }\n\n    if (result.colors.length === 0) {\n      return null;\n    }\n\n    return result;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. `spec` color format is 'rgb:hh/hh/hh' where `h` are hexadecimal digits.\n   * There may be multipe c ; spec elements present in the same instruction, e.g. 1;rgb:10/20/30;2;rgb:a0/b0/c0.\n   */\n  public setAnsiColor(data: string): boolean {\n    const event = this._parseAnsiColorChange(data);\n    if (event) {\n      this._onAnsiColorChange.fire(event);\n    }\n    else {\n      this._logService.warn(`Expected format <num>;rgb:<rr>/<gg>/<bb> but got data: ${data}`);\n    }\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._bufferService.buffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    this._bufferService.buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._bufferService.buffer.tabs[this._bufferService.buffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    if (buffer.y === buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = buffer.scrollBottom - buffer.scrollTop;\n      buffer.lines.shiftElements(buffer.ybase + buffer.y, scrollRegionHeight, 1);\n      buffer.lines.set(buffer.ybase + buffer.y, buffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    } else {\n      buffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n    const buffer = this._bufferService.buffer;\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = buffer.ybase + buffer.y + yOffset;\n      const line = buffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.options.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n});\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    for (const k of Object.keys(options)) {\n      if (k in this.options) {\n        try {\n          const newValue = options[k as keyof IPartialTerminalOptions] as any;\n          this.options[k] = this._sanitizeAndValidateOption(k, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(key)) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface IPartialTerminalOptions {\n  altClickMovesCursor?: boolean;\n  allowTransparency?: boolean;\n  bellSound?: string;\n  bellStyle?: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols?: number;\n  cursorBlink?: boolean;\n  cursorStyle?: 'block' | 'underline' | 'bar';\n  cursorWidth?: number;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  rendererType?: RendererType;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollSensitivity?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  wordSeparator?: string;\n  windowOptions?: IWindowOptions;\n}\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(4389);\n"],"sourceRoot":""}