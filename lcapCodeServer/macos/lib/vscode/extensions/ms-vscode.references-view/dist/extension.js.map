{
  "version": 3,
  "sources": ["../src/extension.ts", "../src/calls/index.ts", "../src/utils.ts", "../src/calls/model.ts", "../src/references/index.ts", "../src/references/model.ts", "../src/tree.ts", "../src/highlights.ts", "../src/navigation.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport * as calls from './calls';\nimport * as references from './references';\nimport { SymbolTree, SymbolTreeInput } from './references-view';\nimport { SymbolsTree } from './tree';\n\nexport function activate(context: vscode.ExtensionContext): SymbolTree {\n\n\tconst tree = new SymbolsTree();\n\n\treferences.register(tree, context);\n\tcalls.register(tree, context);\n\n\tfunction setInput(input: SymbolTreeInput<unknown>) {\n\t\ttree.setInput(input);\n\t}\n\n\treturn { setInput };\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { ContextKey } from '../utils';\nimport { CallItem, CallsDirection, CallsTreeInput } from './model';\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tconst direction = new RichCallsDirection(context.workspaceState, CallsDirection.Incoming);\n\n\tfunction showCallHierarchy() {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new CallsTreeInput(new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), direction.value);\n\t\t\ttree.setInput(input);\n\t\t}\n\t};\n\n\tfunction setCallsDirection(value: CallsDirection, anchor: CallItem | unknown) {\n\t\tdirection.value = value;\n\n\t\tlet newInput: CallsTreeInput | undefined;\n\t\tconst oldInput = tree.getInput();\n\t\tif (anchor instanceof CallItem) {\n\t\t\tnewInput = new CallsTreeInput(new vscode.Location(anchor.item.uri, anchor.item.selectionRange.start), direction.value);\n\t\t} else if (oldInput instanceof CallsTreeInput) {\n\t\t\tnewInput = new CallsTreeInput(oldInput.location, direction.value);\n\t\t}\n\t\tif (newInput) {\n\t\t\ttree.setInput(newInput);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.showCallHierarchy', showCallHierarchy),\n\t\tvscode.commands.registerCommand('references-view.showOutgoingCalls', (item: CallItem | unknown) => setCallsDirection(CallsDirection.Outgoing, item)),\n\t\tvscode.commands.registerCommand('references-view.showIncomingCalls', (item: CallItem | unknown) => setCallsDirection(CallsDirection.Incoming, item)),\n\t\tvscode.commands.registerCommand('references-view.removeCallItem', removeCallItem)\n\t);\n}\n\nfunction removeCallItem(item: CallItem | unknown): void {\n\tif (item instanceof CallItem) {\n\t\titem.remove();\n\t}\n}\n\nclass RichCallsDirection {\n\n\tprivate static _key = 'references-view.callHierarchyMode';\n\n\tprivate _ctxMode = new ContextKey<'showIncoming' | 'showOutgoing'>('references-view.callHierarchyMode');\n\n\tconstructor(\n\t\tprivate _mem: vscode.Memento,\n\t\tprivate _value: CallsDirection = CallsDirection.Outgoing,\n\t) {\n\t\tconst raw = _mem.get<number>(RichCallsDirection._key);\n\t\tif (typeof raw === 'number' && raw >= 0 && raw <= 1) {\n\t\t\tthis.value = raw;\n\t\t} else {\n\t\t\tthis.value = _value;\n\t\t}\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: CallsDirection) {\n\t\tthis._value = value;\n\t\tthis._ctxMode.set(this._value === CallsDirection.Incoming ? 'showIncoming' : 'showOutgoing');\n\t\tthis._mem.update(RichCallsDirection._key, value);\n\t}\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\n\nexport function del<T>(array: T[], e: T): void {\n\tconst idx = array.indexOf(e);\n\tif (idx >= 0) {\n\t\tarray.splice(idx, 1);\n\t}\n}\n\nexport function tail<T>(array: T[]): T | undefined {\n\treturn array[array.length - 1];\n}\n\nexport async function isValidRequestPosition(uri: vscode.Uri, position: vscode.Position) {\n\tconst doc = await vscode.workspace.openTextDocument(uri);\n\tlet range = doc.getWordRangeAtPosition(position);\n\tif (!range) {\n\t\trange = doc.getWordRangeAtPosition(position, /[^\\s]+/);\n\t}\n\treturn Boolean(range);\n}\n\nexport function getPreviewChunks(doc: vscode.TextDocument, range: vscode.Range, beforeLen: number = 8, trim: boolean = true) {\n\tlet previewStart = range.start.with({ character: Math.max(0, range.start.character - beforeLen) });\n\tlet wordRange = doc.getWordRangeAtPosition(previewStart);\n\tlet before = doc.getText(new vscode.Range(wordRange ? wordRange.start : previewStart, range.start));\n\tlet inside = doc.getText(range);\n\tlet previewEnd = range.end.translate(0, 331);\n\tlet after = doc.getText(new vscode.Range(range.end, previewEnd));\n\tif (trim) {\n\t\tbefore = before.replace(/^\\s*/g, '');\n\t\tafter = after.replace(/\\s*$/g, '');\n\t}\n\treturn { before, inside, after };\n}\n\nexport class ContextKey<V> {\n\n\tconstructor(readonly name: string) { }\n\n\tasync set(value: V) {\n\t\tawait vscode.commands.executeCommand('setContext', this.name, value);\n\t}\n\n\tasync reset() {\n\t\tawait vscode.commands.executeCommand('setContext', this.name, undefined);\n\t}\n}\n\nexport class WordAnchor {\n\n\tprivate readonly _version: number;\n\tprivate readonly _word: string | undefined;\n\n\tconstructor(private readonly _doc: vscode.TextDocument, private readonly _position: vscode.Position) {\n\t\tthis._version = _doc.version;\n\t\tthis._word = this._getAnchorWord(_doc, _position);\n\t}\n\n\tprivate _getAnchorWord(doc: vscode.TextDocument, pos: vscode.Position): string | undefined {\n\t\tconst range = doc.getWordRangeAtPosition(pos) || doc.getWordRangeAtPosition(pos, /[^\\s]+/);\n\t\treturn range && doc.getText(range);\n\t}\n\n\tguessedTrackedPosition(): vscode.Position | undefined {\n\t\t// funky entry\n\t\tif (!this._word) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// no changes\n\t\tif (this._version === this._doc.version) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// no changes here...\n\t\tconst wordNow = this._getAnchorWord(this._doc, this._position);\n\t\tif (this._word === wordNow) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// changes: search _word downwards and upwards\n\t\tconst startLine = this._position.line;\n\t\tlet i = 0;\n\t\tlet line: number;\n\t\tlet checked: boolean;\n\t\tdo {\n\t\t\tchecked = false;\n\t\t\t// nth line down\n\t\t\tline = startLine + i;\n\t\t\tif (line < this._doc.lineCount) {\n\t\t\t\tchecked = true;\n\t\t\t\tlet ch = this._doc.lineAt(line).text.indexOf(this._word);\n\t\t\t\tif (ch >= 0) {\n\t\t\t\t\treturn new vscode.Position(line, ch);\n\t\t\t\t}\n\t\t\t}\n\t\t\ti += 1;\n\t\t\t// nth line up\n\t\t\tline = startLine - i;\n\t\t\tif (line >= 0) {\n\t\t\t\tchecked = true;\n\t\t\t\tlet ch = this._doc.lineAt(line).text.indexOf(this._word);\n\t\t\t\tif (ch >= 0) {\n\t\t\t\t\treturn new vscode.Position(line, ch);\n\t\t\t\t}\n\t\t\t}\n\t\t} while (i < 100 && checked);\n\n\t\t// fallback\n\t\treturn this._position;\n\t}\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput } from '../references-view';\nimport { del, tail } from '../utils';\n\n\nexport class CallsTreeInput implements SymbolTreeInput<CallItem> {\n\n\treadonly title: string;\n\treadonly contextValue: string = 'callHierarchy';\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly direction: CallsDirection,\n\t) {\n\t\tthis.title = direction === CallsDirection.Incoming\n\t\t\t? 'Callers Of'\n\t\t\t: 'Calls From';\n\t}\n\n\tasync resolve() {\n\n\t\tconst items = await Promise.resolve(vscode.commands.executeCommand<vscode.CallHierarchyItem[]>('vscode.prepareCallHierarchy', this.location.uri, this.location.range.start));\n\t\tconst model = new CallsModel(this.direction, items ?? []);\n\t\tconst provider = new CallItemDataProvider(model);\n\n\t\tif (model.roots.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.roots.length === 0 ? 'No results.' : undefined; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdispose() {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): CallsTreeInput {\n\t\treturn new CallsTreeInput(location, this.direction);\n\t}\n}\n\n\nexport const enum CallsDirection {\n\tIncoming,\n\tOutgoing\n}\n\n\n\nexport class CallItem {\n\n\tchildren?: CallItem[];\n\n\tconstructor(\n\t\treadonly model: CallsModel,\n\t\treadonly item: vscode.CallHierarchyItem,\n\t\treadonly parent: CallItem | undefined,\n\t\treadonly locations: vscode.Location[] | undefined\n\t) { }\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n}\n\nclass CallsModel implements SymbolItemNavigation<CallItem>, SymbolItemEditorHighlights<CallItem> {\n\n\treadonly roots: CallItem[] = [];\n\n\tprivate readonly _onDidChange = new vscode.EventEmitter<CallsModel>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tconstructor(readonly direction: CallsDirection, items: vscode.CallHierarchyItem[]) {\n\t\tthis.roots = items.map(item => new CallItem(this, item, undefined, undefined));\n\t}\n\n\tprivate async _resolveCalls(call: CallItem): Promise<CallItem[]> {\n\t\tif (this.direction === CallsDirection.Incoming) {\n\t\t\tconst calls = await vscode.commands.executeCommand<vscode.CallHierarchyIncomingCall[]>('vscode.provideIncomingCalls', call.item);\n\t\t\treturn calls ? calls.map(item => new CallItem(this, item.from, call, item.fromRanges.map(range => new vscode.Location(item.from.uri, range)))) : [];\n\t\t} else {\n\t\t\tconst calls = await vscode.commands.executeCommand<vscode.CallHierarchyOutgoingCall[]>('vscode.provideOutgoingCalls', call.item);\n\t\t\treturn calls ? calls.map(item => new CallItem(this, item.to, call, item.fromRanges.map(range => new vscode.Location(call.item.uri, range)))) : [];\n\t\t}\n\t}\n\n\tasync getCallChildren(call: CallItem): Promise<CallItem[]> {\n\t\tif (!call.children) {\n\t\t\tcall.children = await this._resolveCalls(call);\n\t\t}\n\t\treturn call.children;\n\t}\n\n\t// -- navigation \n\n\tlocation(item: CallItem) {\n\t\treturn new vscode.Location(item.item.uri, item.item.range);\n\t}\n\n\tnearest(uri: vscode.Uri, _position: vscode.Position): CallItem | undefined {\n\t\treturn this.roots.find(item => item.item.uri.toString() === uri.toString()) ?? this.roots[0];\n\t}\n\n\tnext(from: CallItem): CallItem {\n\t\treturn this._move(from, true) ?? from;\n\t}\n\n\tprevious(from: CallItem): CallItem {\n\t\treturn this._move(from, false) ?? from;\n\t}\n\n\tprivate _move(item: CallItem, fwd: boolean) {\n\t\tif (item.children?.length) {\n\t\t\treturn fwd ? item.children[0] : tail(item.children);\n\t\t}\n\t\tconst array = this.roots.includes(item) ? this.roots : item.parent?.children;\n\t\tif (array?.length) {\n\t\t\tconst idx = array.indexOf(item);\n\t\t\tconst delta = fwd ? 1 : -1;\n\t\t\treturn array[idx + delta + array.length % array.length];\n\t\t}\n\t}\n\n\t// --- highlights\n\n\tgetEditorHighlights(item: CallItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\tif (!item.locations) {\n\t\t\treturn item.item.uri.toString() === uri.toString() ? [item.item.selectionRange] : undefined;\n\t\t}\n\t\treturn item.locations\n\t\t\t.filter(loc => loc.uri.toString() === uri.toString())\n\t\t\t.map(loc => loc.range);\n\t}\n\n\tremove(item: CallItem) {\n\t\tconst isInRoot = this.roots.includes(item);\n\t\tconst siblings = isInRoot ? this.roots : item.parent?.children;\n\t\tif (siblings) {\n\t\t\tdel(siblings, item);\n\t\t\tthis._onDidChange.fire(this);\n\t\t}\n\t}\n}\n\nclass CallItemDataProvider implements vscode.TreeDataProvider<CallItem> {\n\n\tprivate readonly _emitter = new vscode.EventEmitter<CallItem | undefined>();\n\treadonly onDidChangeTreeData = this._emitter.event;\n\n\tprivate readonly _modelListener: vscode.Disposable;\n\n\tconstructor(private _model: CallsModel) {\n\t\tthis._modelListener = _model.onDidChange(e => this._emitter.fire(e instanceof CallItem ? e : undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis._emitter.dispose();\n\t\tthis._modelListener.dispose();\n\t}\n\n\tgetTreeItem(element: CallItem): vscode.TreeItem {\n\n\t\tconst item = new vscode.TreeItem(element.item.name);\n\t\titem.description = element.item.detail;\n\t\titem.contextValue = 'call-item';\n\t\titem.iconPath = CallItemDataProvider._getThemeIcon(element.item.kind);\n\t\titem.command = {\n\t\t\tcommand: 'vscode.open',\n\t\t\ttitle: 'Open Call',\n\t\t\targuments: [\n\t\t\t\telement.item.uri,\n\t\t\t\t<vscode.TextDocumentShowOptions>{ selection: element.item.selectionRange.with({ end: element.item.selectionRange.start }) }\n\t\t\t]\n\t\t};\n\t\titem.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\treturn item;\n\t}\n\n\tgetChildren(element?: CallItem | undefined) {\n\t\treturn element\n\t\t\t? this._model.getCallChildren(element)\n\t\t\t: this._model.roots;\n\t}\n\n\tgetParent(element: CallItem) {\n\t\treturn element.parent;\n\t}\n\n\t// vscode.SymbolKind.File === 0, Module === 1, etc...\n\tprivate static _themeIconIds = [\n\t\t'symbol-file', 'symbol-module', 'symbol-namespace', 'symbol-package', 'symbol-class', 'symbol-method',\n\t\t'symbol-property', 'symbol-field', 'symbol-constructor', 'symbol-enum', 'symbol-interface',\n\t\t'symbol-function', 'symbol-variable', 'symbol-constant', 'symbol-string', 'symbol-number', 'symbol-boolean',\n\t\t'symbol-array', 'symbol-object', 'symbol-key', 'symbol-null', 'symbol-enum-member', 'symbol-struct',\n\t\t'symbol-event', 'symbol-operator', 'symbol-type-parameter'\n\t];\n\n\tprivate static _getThemeIcon(kind: vscode.SymbolKind): vscode.ThemeIcon | undefined {\n\t\tlet id = CallItemDataProvider._themeIconIds[kind];\n\t\treturn id ? new vscode.ThemeIcon(id) : undefined;\n\t}\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { FileItem, ReferenceItem, ReferencesModel, ReferencesTreeInput } from './model';\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tfunction findLocations(title: string, command: string) {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new ReferencesTreeInput(title, new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), command);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.findReferences', () => findLocations('References', 'vscode.executeReferenceProvider')),\n\t\tvscode.commands.registerCommand('references-view.findImplementations', () => findLocations('Implementations', 'vscode.executeImplementationProvider')),\n\t\t// --- legacy name\n\t\tvscode.commands.registerCommand('references-view.find', (...args: any[]) => vscode.commands.executeCommand('references-view.findReferences', ...args)),\n\t\tvscode.commands.registerCommand('references-view.removeReferenceItem', removeReferenceItem),\n\t\tvscode.commands.registerCommand('references-view.copy', copyCommand),\n\t\tvscode.commands.registerCommand('references-view.copyAll', copyAllCommand),\n\t\tvscode.commands.registerCommand('references-view.copyPath', copyPathCommand),\n\t);\n\n\n\t// --- references.preferredLocation setting\n\n\tlet showReferencesDisposable: vscode.Disposable | undefined;\n\tconst config = 'references.preferredLocation';\n\tfunction updateShowReferences(event?: vscode.ConfigurationChangeEvent) {\n\t\tif (event && !event.affectsConfiguration(config)) {\n\t\t\treturn;\n\t\t}\n\t\tconst value = vscode.workspace.getConfiguration().get<string>(config);\n\n\t\tshowReferencesDisposable?.dispose();\n\t\tshowReferencesDisposable = undefined;\n\n\t\tif (value === 'view') {\n\t\t\tshowReferencesDisposable = vscode.commands.registerCommand('editor.action.showReferences', async (uri: vscode.Uri, position: vscode.Position, locations: vscode.Location[]) => {\n\t\t\t\tconst input = new ReferencesTreeInput('References', new vscode.Location(uri, position), 'vscode.executeReferenceProvider', locations);\n\t\t\t\ttree.setInput(input);\n\t\t\t});\n\t\t}\n\t};\n\tcontext.subscriptions.push(vscode.workspace.onDidChangeConfiguration(updateShowReferences));\n\tcontext.subscriptions.push({ dispose: () => showReferencesDisposable?.dispose() });\n\tupdateShowReferences();\n}\n\nconst copyAllCommand = async (item: ReferenceItem | FileItem | unknown) => {\n\tif (item instanceof ReferenceItem) {\n\t\tcopyCommand(item.file.model);\n\t} else if (item instanceof FileItem) {\n\t\tcopyCommand(item.model);\n\t}\n};\n\nfunction removeReferenceItem(item: FileItem | ReferenceItem | unknown) {\n\tif (item instanceof FileItem) {\n\t\titem.remove();\n\t} else if (item instanceof ReferenceItem) {\n\t\titem.remove();\n\t}\n}\n\n\nasync function copyCommand(item: ReferencesModel | ReferenceItem | FileItem | unknown) {\n\tlet val: string | undefined;\n\tif (item instanceof ReferencesModel) {\n\t\tval = await item.asCopyText();\n\t} else if (item instanceof ReferenceItem) {\n\t\tval = await item.asCopyText();\n\t} else if (item instanceof FileItem) {\n\t\tval = await item.asCopyText();\n\t}\n\tif (val) {\n\t\tawait vscode.env.clipboard.writeText(val);\n\t}\n};\n\nasync function copyPathCommand(item: FileItem | unknown) {\n\tif (item instanceof FileItem) {\n\t\tif (item.uri.scheme === 'file') {\n\t\t\tvscode.env.clipboard.writeText(item.uri.fsPath);\n\t\t} else {\n\t\t\tvscode.env.clipboard.writeText(item.uri.toString(true));\n\t\t}\n\t}\n};\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput } from '../references-view';\nimport { del, getPreviewChunks, tail } from '../utils';\n\nexport class ReferencesTreeInput implements SymbolTreeInput<FileItem | ReferenceItem> {\n\n\treadonly contextValue: string;\n\n\tconstructor(\n\t\treadonly title: string,\n\t\treadonly location: vscode.Location,\n\t\tprivate readonly _command: string,\n\t\tprivate readonly _result?: vscode.Location[] | vscode.LocationLink[]\n\t) {\n\t\tthis.contextValue = _command;\n\t}\n\n\tasync resolve() {\n\n\t\tlet model: ReferencesModel;\n\t\tif (this._result) {\n\t\t\tmodel = new ReferencesModel(this._result);\n\t\t} else {\n\t\t\tconst resut = await Promise.resolve(vscode.commands.executeCommand<vscode.Location[] | vscode.LocationLink[]>(this._command, this.location.uri, this.location.range.start));\n\t\t\tmodel = new ReferencesModel(resut ?? []);\n\t\t}\n\n\t\tif (model.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = new ReferencesTreeDataProvider(model);\n\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.message; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdispose(): void {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): ReferencesTreeInput {\n\t\treturn new ReferencesTreeInput(this.title, location, this._command);\n\t}\n}\n\nexport class ReferencesModel implements SymbolItemNavigation<FileItem | ReferenceItem>, SymbolItemEditorHighlights<FileItem | ReferenceItem> {\n\n\tprivate _onDidChange = new vscode.EventEmitter<FileItem | ReferenceItem | undefined>();\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\treadonly items: FileItem[] = [];\n\n\tconstructor(locations: vscode.Location[] | vscode.LocationLink[]) {\n\t\tlet last: FileItem | undefined;\n\t\tfor (const item of locations.sort(ReferencesModel._compareLocations)) {\n\t\t\tconst loc = item instanceof vscode.Location\n\t\t\t\t? item\n\t\t\t\t: new vscode.Location(item.targetUri, item.targetRange);\n\n\t\t\tif (!last || ReferencesModel._compareUriIgnoreFragment(last.uri, loc.uri) !== 0) {\n\t\t\t\tlast = new FileItem(loc.uri.with({ fragment: '' }), [], this);\n\t\t\t\tthis.items.push(last);\n\t\t\t}\n\t\t\tlast.references.push(new ReferenceItem(loc, last));\n\t\t}\n\t}\n\n\tprivate static _compareUriIgnoreFragment(a: vscode.Uri, b: vscode.Uri): number {\n\t\tlet aStr = a.with({ fragment: '' }).toString();\n\t\tlet bStr = b.with({ fragment: '' }).toString();\n\t\tif (aStr < bStr) {\n\t\t\treturn -1;\n\t\t} else if (aStr > bStr) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate static _compareLocations(a: vscode.Location | vscode.LocationLink, b: vscode.Location | vscode.LocationLink): number {\n\t\tlet aUri = a instanceof vscode.Location ? a.uri : a.targetUri;\n\t\tlet bUri = b instanceof vscode.Location ? b.uri : b.targetUri;\n\t\tif (aUri.toString() < bUri.toString()) {\n\t\t\treturn -1;\n\t\t} else if (aUri.toString() > bUri.toString()) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tlet aRange = a instanceof vscode.Location ? a.range : a.targetRange;\n\t\tlet bRange = b instanceof vscode.Location ? b.range : b.targetRange;\n\t\tif (aRange.start.isBefore(bRange.start)) {\n\t\t\treturn -1;\n\t\t} else if (aRange.start.isAfter(bRange.start)) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// --- adapter\n\n\tget message() {\n\t\tif (this.items.length === 0) {\n\t\t\treturn 'No results.';\n\t\t}\n\t\tconst total = this.items.reduce((prev, cur) => prev + cur.references.length, 0);\n\t\tconst files = this.items.length;\n\t\tif (total === 1 && files === 1) {\n\t\t\treturn `${total} result in ${files} file`;\n\t\t} else if (total === 1) {\n\t\t\treturn `${total} result in ${files} files`;\n\t\t} else if (files === 1) {\n\t\t\treturn `${total} results in ${files} file`;\n\t\t} else {\n\t\t\treturn `${total} results in ${files} files`;\n\t\t}\n\t}\n\n\tlocation(item: FileItem | ReferenceItem) {\n\t\treturn item instanceof ReferenceItem ? item.location : undefined;\n\t}\n\n\tnearest(uri: vscode.Uri, position: vscode.Position): FileItem | ReferenceItem | undefined {\n\n\t\tif (this.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\t// NOTE: this.items is sorted by location (uri/range)\n\t\tfor (const item of this.items) {\n\t\t\tif (item.uri.toString() === uri.toString()) {\n\t\t\t\t// (1) pick the item at the request position\n\t\t\t\tfor (const ref of item.references) {\n\t\t\t\t\tif (ref.location.range.contains(position)) {\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// (2) pick the first item after or last before the request position\n\t\t\t\tlet lastBefore: ReferenceItem | undefined;\n\t\t\t\tfor (const ref of item.references) {\n\t\t\t\t\tif (ref.location.range.end.isAfter(position)) {\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t\tlastBefore = ref;\n\t\t\t\t}\n\t\t\t\tif (lastBefore) {\n\t\t\t\t\treturn lastBefore;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// (3) pick the file with the longest common prefix\n\t\tlet best = 0;\n\t\tlet bestValue = ReferencesModel._prefixLen(this.items[best].toString(), uri.toString());\n\n\t\tfor (let i = 1; i < this.items.length; i++) {\n\t\t\tlet value = ReferencesModel._prefixLen(this.items[i].uri.toString(), uri.toString());\n\t\t\tif (value > bestValue) {\n\t\t\t\tbest = i;\n\t\t\t}\n\t\t}\n\n\t\treturn this.items[best].references[0];\n\t}\n\n\tprivate static _prefixLen(a: string, b: string): number {\n\t\tlet pos = 0;\n\t\twhile (pos < a.length && pos < b.length && a.charCodeAt(pos) === b.charCodeAt(pos)) {\n\t\t\tpos += 1;\n\t\t}\n\t\treturn pos;\n\t}\n\n\tnext(item: FileItem | ReferenceItem): FileItem | ReferenceItem {\n\t\treturn this._move(item, true) ?? item;\n\t}\n\n\tprevious(item: FileItem | ReferenceItem): FileItem | ReferenceItem {\n\t\treturn this._move(item, false) ?? item;\n\t}\n\n\tprivate _move(item: FileItem | ReferenceItem, fwd: boolean): ReferenceItem | undefined {\n\n\t\tconst delta = fwd ? +1 : -1;\n\n\t\tconst _move = (item: FileItem): FileItem => {\n\t\t\tconst idx = (this.items.indexOf(item) + delta + this.items.length) % this.items.length;\n\t\t\treturn this.items[idx];\n\t\t};\n\n\t\tif (item instanceof FileItem) {\n\t\t\tif (fwd) {\n\t\t\t\treturn _move(item).references[0];\n\t\t\t} else {\n\t\t\t\treturn tail(_move(item).references);\n\t\t\t}\n\t\t}\n\n\t\tif (item instanceof ReferenceItem) {\n\t\t\tconst idx = item.file.references.indexOf(item) + delta;\n\t\t\tif (idx < 0) {\n\t\t\t\treturn tail(_move(item.file).references);\n\t\t\t} else if (idx >= item.file.references.length) {\n\t\t\t\treturn _move(item.file).references[0];\n\t\t\t} else {\n\t\t\t\treturn item.file.references[idx];\n\t\t\t}\n\t\t}\n\t}\n\n\tgetEditorHighlights(_item: FileItem | ReferenceItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\tconst file = this.items.find(file => file.uri.toString() === uri.toString());\n\t\treturn file?.references.map(ref => ref.location.range);\n\t}\n\n\tremove(item: FileItem | ReferenceItem) {\n\t\tif (item instanceof FileItem) {\n\t\t\tdel(this.items, item);\n\t\t\tthis._onDidChange.fire(undefined);\n\t\t} else {\n\t\t\tdel(item.file.references, item);\n\t\t\tif (item.file.references.length === 0) {\n\t\t\t\tdel(this.items, item.file);\n\t\t\t\tthis._onDidChange.fire(undefined);\n\t\t\t} else {\n\t\t\t\tthis._onDidChange.fire(item.file);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync asCopyText() {\n\t\tlet result = '';\n\t\tfor (const item of this.items) {\n\t\t\tresult += `${await item.asCopyText()}\\n`;\n\t\t}\n\t\treturn result;\n\t}\n\n}\n\nclass ReferencesTreeDataProvider implements vscode.TreeDataProvider<FileItem | ReferenceItem>{\n\n\tprivate readonly _listener: vscode.Disposable;\n\tprivate readonly _onDidChange = new vscode.EventEmitter<FileItem | ReferenceItem | undefined>();\n\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\tconstructor(private readonly _model: ReferencesModel) {\n\t\tthis._listener = _model.onDidChangeTreeData(e => this._onDidChange.fire(undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t\tthis._listener.dispose();\n\t}\n\n\tasync getTreeItem(element: FileItem | ReferenceItem) {\n\t\tif (element instanceof FileItem) {\n\t\t\t// files\n\t\t\tconst result = new vscode.TreeItem(element.uri);\n\t\t\tresult.contextValue = 'file-item';\n\t\t\tresult.description = true;\n\t\t\tresult.iconPath = vscode.ThemeIcon.File;\n\t\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\t\treturn result;\n\n\t\t} else {\n\t\t\t// references\n\t\t\tconst { range } = element.location;\n\t\t\tconst doc = await element.getDocument(true);\n\t\t\tconst { before, inside, after } = getPreviewChunks(doc, range);\n\n\t\t\tconst label: vscode.TreeItemLabel = {\n\t\t\t\tlabel: before + inside + after,\n\t\t\t\thighlights: [[before.length, before.length + inside.length]]\n\t\t\t};\n\n\t\t\tconst result = new vscode.TreeItem(label);\n\t\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.None;\n\t\t\tresult.contextValue = 'reference-item';\n\t\t\tresult.command = {\n\t\t\t\tcommand: 'vscode.open',\n\t\t\t\ttitle: 'Open Reference',\n\t\t\t\targuments: [\n\t\t\t\t\telement.location.uri,\n\t\t\t\t\t<vscode.TextDocumentShowOptions>{ selection: range.with({ end: range.start }) }\n\t\t\t\t]\n\t\t\t};\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tasync getChildren(element?: FileItem | ReferenceItem) {\n\t\tif (!element) {\n\t\t\treturn this._model.items;\n\t\t}\n\t\tif (element instanceof FileItem) {\n\t\t\treturn element.references;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetParent(element: FileItem | ReferenceItem) {\n\t\treturn element instanceof ReferenceItem ? element.file : undefined;\n\t}\n}\n\nexport class FileItem {\n\n\tconstructor(\n\t\treadonly uri: vscode.Uri,\n\t\treadonly references: Array<ReferenceItem>,\n\t\treadonly model: ReferencesModel\n\t) { }\n\n\t// --- adapter\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n\n\tasync asCopyText() {\n\t\tlet result = `${vscode.workspace.asRelativePath(this.uri)}\\n`;\n\t\tfor (let ref of this.references) {\n\t\t\tresult += `  ${await ref.asCopyText()}\\n`;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class ReferenceItem {\n\n\tprivate _document: Thenable<vscode.TextDocument> | undefined;\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly file: FileItem,\n\t) { }\n\n\tasync getDocument(warmUpNext?: boolean) {\n\t\tif (!this._document) {\n\t\t\tthis._document = vscode.workspace.openTextDocument(this.location.uri);\n\t\t}\n\t\tif (warmUpNext) {\n\t\t\t// load next document once this document has been loaded\n\t\t\tconst next = this.file.model.next(this.file);\n\t\t\tif (next instanceof FileItem && next !== this.file) {\n\t\t\t\tvscode.workspace.openTextDocument(next.uri);\n\t\t\t} else if (next instanceof ReferenceItem) {\n\t\t\t\tvscode.workspace.openTextDocument(next.location.uri);\n\t\t\t}\n\t\t}\n\t\treturn this._document;\n\t}\n\n\t// --- adapter\n\n\tremove(): void {\n\t\tthis.file.model.remove(this);\n\t}\n\n\tasync asCopyText() {\n\t\tlet doc = await this.getDocument();\n\t\tlet chunks = getPreviewChunks(doc, this.location.range, 21, false);\n\t\treturn `${this.location.range.start.line + 1}, ${this.location.range.start.character + 1}: ${chunks.before + chunks.inside + chunks.after}`;\n\t}\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { EditorHighlights } from './highlights';\nimport { Navigation } from './navigation';\nimport { SymbolTreeInput } from './references-view';\nimport { ContextKey, isValidRequestPosition, WordAnchor } from './utils';\n\nexport class SymbolsTree {\n\n\treadonly viewId = 'references-view.tree';\n\n\tprivate readonly _ctxIsActive = new ContextKey<boolean>('reference-list.isActive');\n\tprivate readonly _ctxHasResult = new ContextKey<boolean>('reference-list.hasResult');\n\tprivate readonly _ctxInputSource = new ContextKey<string>('reference-list.source');\n\n\tprivate readonly _history = new TreeInputHistory(this);\n\tprivate readonly _provider = new TreeDataProviderDelegate();\n\tprivate readonly _tree: vscode.TreeView<unknown>;\n\tprivate readonly _navigation: Navigation;\n\n\tprivate _input?: SymbolTreeInput<unknown>;\n\tprivate _sessionDisposable?: vscode.Disposable;\n\n\tconstructor() {\n\t\tthis._tree = vscode.window.createTreeView<unknown>(this.viewId, {\n\t\t\ttreeDataProvider: this._provider,\n\t\t\tshowCollapseAll: true\n\t\t});\n\t\tthis._navigation = new Navigation(this._tree);\n\t}\n\n\tdispose(): void {\n\t\tthis._history.dispose();\n\t\tthis._tree.dispose();\n\t\tthis._sessionDisposable?.dispose();\n\t}\n\n\tgetInput(): SymbolTreeInput<unknown> | undefined {\n\t\treturn this._input;\n\t}\n\n\tasync setInput(input: SymbolTreeInput<unknown>) {\n\n\t\tif (!await isValidRequestPosition(input.location.uri, input.location.range.start)) {\n\t\t\tthis.clearInput();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._ctxInputSource.set(input.contextValue);\n\t\tthis._ctxIsActive.set(true);\n\t\tthis._ctxHasResult.set(true);\n\t\tvscode.commands.executeCommand(`${this.viewId}.focus`);\n\n\t\tconst newInputKind = !this._input || Object.getPrototypeOf(this._input) !== Object.getPrototypeOf(input);\n\t\tthis._input = input;\n\t\tthis._sessionDisposable?.dispose();\n\n\t\tthis._tree.title = input.title;\n\t\tthis._tree.message = newInputKind ? undefined : this._tree.message;\n\n\t\tconst modelPromise = Promise.resolve(input.resolve());\n\n\t\t// set promise to tree data provider to trigger tree loading UI\n\t\tthis._provider.update(modelPromise.then(model => model?.provider ?? this._history));\n\n\t\tconst model = await modelPromise;\n\t\tif (this._input !== input) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!model) {\n\t\t\tthis.clearInput();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._history.add(input);\n\t\tthis._tree.message = model.message;\n\n\t\t// navigation\n\t\tthis._navigation.update(model.navigation);\n\n\t\t// reveal & select\n\t\tconst selection = model.navigation?.nearest(input.location.uri, input.location.range.start);\n\t\tif (selection && this._tree.visible) {\n\t\t\tawait this._tree.reveal(selection, { select: true, focus: true, expand: true });\n\t\t}\n\n\t\tconst disposables: vscode.Disposable[] = [];\n\n\t\t// editor highlights\n\t\tlet highlights: EditorHighlights<unknown> | undefined;\n\t\tif (model.highlights) {\n\t\t\thighlights = new EditorHighlights(this._tree, model.highlights);\n\t\t\tdisposables.push(highlights);\n\t\t}\n\n\t\t// listener\n\t\tif (model.provider.onDidChangeTreeData) {\n\t\t\tdisposables.push(model.provider.onDidChangeTreeData(() => {\n\t\t\t\tthis._tree.title = input.title;\n\t\t\t\tthis._tree.message = model.message;\n\t\t\t\thighlights?.update();\n\t\t\t}));\n\t\t}\n\t\tif (typeof model.dispose === 'function') {\n\t\t\tdisposables.push(new vscode.Disposable(() => model.dispose!()));\n\t\t}\n\t\tthis._sessionDisposable = vscode.Disposable.from(...disposables);\n\t}\n\n\tclearInput(): void {\n\t\tthis._sessionDisposable?.dispose();\n\t\tthis._input = undefined;\n\t\tthis._ctxHasResult.set(false);\n\t\tthis._ctxInputSource.reset();\n\t\tthis._tree.title = 'References';\n\t\tthis._tree.message = this._history.size === 0 ? 'No results.' : 'No results. Try running a previous search again:';\n\t\tthis._provider.update(Promise.resolve(this._history));\n\t}\n}\n\n// --- tree data\n\ninterface ActiveTreeDataProviderWrapper {\n\tprovider: Promise<vscode.TreeDataProvider<any>>;\n}\n\nclass TreeDataProviderDelegate implements vscode.TreeDataProvider<undefined> {\n\n\tprovider?: Promise<vscode.TreeDataProvider<any>>;\n\n\tprivate _sessionDispoables?: vscode.Disposable;\n\tprivate _onDidChange = new vscode.EventEmitter<any>();\n\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\tupdate(provider: Promise<vscode.TreeDataProvider<any>>) {\n\n\t\tthis._sessionDispoables?.dispose();\n\t\tthis._sessionDispoables = undefined;\n\n\t\tthis._onDidChange.fire(undefined);\n\n\t\tthis.provider = provider;\n\n\t\tprovider.then(value => {\n\t\t\tif (this.provider === provider && value.onDidChangeTreeData) {\n\t\t\t\tthis._sessionDispoables = value.onDidChangeTreeData(this._onDidChange.fire, this._onDidChange);\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\tthis.provider = undefined;\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tasync getTreeItem(element: unknown) {\n\t\tthis._assertProvider();\n\t\treturn (await this.provider).getTreeItem(element);\n\t}\n\n\tasync getChildren(parent?: unknown | undefined) {\n\t\tthis._assertProvider();\n\t\treturn (await this.provider).getChildren(parent);\n\t}\n\n\tasync getParent(element: unknown) {\n\t\tthis._assertProvider();\n\t\tconst provider = await this.provider;\n\t\treturn provider.getParent ? provider.getParent(element) : undefined;\n\t}\n\n\tprivate _assertProvider(): asserts this is ActiveTreeDataProviderWrapper {\n\t\tif (!this.provider) {\n\t\t\tthrow new Error('MISSING provider');\n\t\t}\n\t}\n}\n\n// --- history\n\nclass HistoryItem {\n\n\treadonly description: string;\n\n\tconstructor(\n\t\treadonly key: string,\n\t\treadonly word: string,\n\t\treadonly anchor: WordAnchor,\n\t\treadonly input: SymbolTreeInput<unknown>,\n\t) {\n\t\tthis.description = `${vscode.workspace.asRelativePath(input.location.uri)} \u2022 ${input.title.toLocaleLowerCase()}`;\n\t}\n}\n\nclass TreeInputHistory implements vscode.TreeDataProvider<HistoryItem>{\n\n\tprivate readonly _onDidChangeTreeData = new vscode.EventEmitter<HistoryItem | undefined>();\n\treadonly onDidChangeTreeData = this._onDidChangeTreeData.event;\n\n\tprivate readonly _disposables: vscode.Disposable[] = [];\n\tprivate readonly _ctxHasHistory = new ContextKey<boolean>('reference-list.hasHistory');\n\tprivate readonly _inputs = new Map<string, HistoryItem>();\n\n\tconstructor(private readonly _tree: SymbolsTree) {\n\n\t\tthis._disposables.push(\n\t\t\tvscode.commands.registerCommand('references-view.clear', () => _tree.clearInput()),\n\t\t\tvscode.commands.registerCommand('references-view.clearHistory', () => {\n\t\t\t\tthis.clear();\n\t\t\t\t_tree.clearInput();\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.refind', (item) => {\n\t\t\t\tif (item instanceof HistoryItem) {\n\t\t\t\t\tthis._reRunHistoryItem(item);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.refresh', () => {\n\t\t\t\tconst item = Array.from(this._inputs.values()).pop();\n\t\t\t\tif (item) {\n\t\t\t\t\tthis._reRunHistoryItem(item);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('_references-view.showHistoryItem', (item) => {\n\t\t\t\tif (item instanceof HistoryItem) {\n\t\t\t\t\tconst position = item.anchor.guessedTrackedPosition() ?? item.input.location.range.start;\n\t\t\t\t\treturn vscode.commands.executeCommand('vscode.open', item.input.location.uri, { selection: new vscode.Range(position, position) });\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.pickFromHistory', async () => {\n\t\t\t\tinterface HistoryPick extends vscode.QuickPickItem {\n\t\t\t\t\titem: HistoryItem;\n\t\t\t\t}\n\t\t\t\tconst entries = await this.getChildren();\n\t\t\t\tconst picks = entries.map(item => <HistoryPick>{\n\t\t\t\t\tlabel: item.word,\n\t\t\t\t\tdescription: item.description,\n\t\t\t\t\titem\n\t\t\t\t});\n\t\t\t\tconst pick = await vscode.window.showQuickPick(picks, { placeHolder: 'Select previous reference search' });\n\t\t\t\tif (pick) {\n\t\t\t\t\tthis._reRunHistoryItem(pick.item);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tvscode.Disposable.from(...this._disposables).dispose();\n\t\tthis._onDidChangeTreeData.dispose();\n\t}\n\n\tprivate _reRunHistoryItem(item: HistoryItem): void {\n\t\tthis._inputs.delete(item.key);\n\t\tconst newPosition = item.anchor.guessedTrackedPosition();\n\t\tlet newInput = item.input;\n\t\t// create a new input when having a tracked position which is\n\t\t// different than the original position.\n\t\tif (newPosition && !item.input.location.range.start.isEqual(newPosition)) {\n\t\t\tnewInput = item.input.with(new vscode.Location(item.input.location.uri, newPosition));\n\t\t}\n\t\tthis._tree.setInput(newInput);\n\t}\n\n\tasync add(input: SymbolTreeInput<unknown>) {\n\n\t\tconst doc = await vscode.workspace.openTextDocument(input.location.uri);\n\n\t\tconst anchor = new WordAnchor(doc, input.location.range.start);\n\t\tconst range = doc.getWordRangeAtPosition(input.location.range.start) ?? doc.getWordRangeAtPosition(input.location.range.start, /[^\\s]+/);\n\t\tconst word = range ? doc.getText(range) : '???';\n\n\t\tconst item = new HistoryItem(JSON.stringify([range?.start ?? input.location.range.start, input.location.uri, input.title]), word, anchor, input);\n\t\t// use filo-ordering of native maps\n\t\tthis._inputs.delete(item.key);\n\t\tthis._inputs.set(item.key, item);\n\t\tthis._ctxHasHistory.set(true);\n\t}\n\n\tclear(): void {\n\t\tthis._inputs.clear();\n\t\tthis._ctxHasHistory.set(false);\n\t\tthis._onDidChangeTreeData.fire(undefined);\n\t}\n\n\tget size() {\n\t\treturn this._inputs.size;\n\t}\n\n\t// --- tree data provider\n\n\tgetTreeItem(item: HistoryItem): vscode.TreeItem {\n\t\tconst result = new vscode.TreeItem(item.word);\n\t\tresult.description = item.description;\n\t\tresult.command = { command: '_references-view.showHistoryItem', arguments: [item], title: 'Rerun' };\n\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.None;\n\t\tresult.contextValue = 'history-item';\n\t\treturn result;\n\t}\n\n\tgetChildren() {\n\t\treturn Promise.all([...this._inputs.values()].reverse());\n\t}\n\n\tgetParent() {\n\t\treturn undefined;\n\t}\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemEditorHighlights } from './references-view';\n\nexport class EditorHighlights<T> {\n\n\tprivate readonly _decorationType = vscode.window.createTextEditorDecorationType({\n\t\tbackgroundColor: new vscode.ThemeColor('editor.findMatchHighlightBackground'),\n\t\trangeBehavior: vscode.DecorationRangeBehavior.ClosedClosed,\n\t\toverviewRulerLane: vscode.OverviewRulerLane.Center,\n\t\toverviewRulerColor: new vscode.ThemeColor('editor.findMatchHighlightBackground'),\n\t});\n\n\tprivate readonly disposables: vscode.Disposable[] = [];\n\tprivate readonly _ignore = new Set<string>();\n\n\tconstructor(private readonly _view: vscode.TreeView<T>, private readonly _delegate: SymbolItemEditorHighlights<T>) {\n\t\tthis.disposables.push(\n\t\t\tvscode.workspace.onDidChangeTextDocument(e => this._ignore.add(e.document.uri.toString())),\n\t\t\tvscode.window.onDidChangeActiveTextEditor(() => _view.visible && this.update()),\n\t\t\t_view.onDidChangeVisibility(e => e.visible ? this._show() : this._hide()),\n\t\t\t_view.onDidChangeSelection(() => _view.visible && this.update())\n\t\t);\n\t\tthis._show();\n\t}\n\n\tdispose() {\n\t\tvscode.Disposable.from(...this.disposables).dispose();\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\teditor.setDecorations(this._decorationType, []);\n\t\t}\n\t}\n\n\tprivate _show(): void {\n\t\tconst { activeTextEditor: editor } = vscode.window;\n\t\tif (!editor || !editor.viewColumn) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._ignore.has(editor.document.uri.toString())) {\n\t\t\treturn;\n\t\t}\n\t\tconst [anchor] = this._view.selection;\n\t\tif (!anchor) {\n\t\t\treturn;\n\t\t}\n\t\tconst ranges = this._delegate.getEditorHighlights(anchor, editor.document.uri);\n\t\tif (ranges) {\n\t\t\teditor.setDecorations(this._decorationType, ranges);\n\t\t}\n\t}\n\n\tprivate _hide(): void {\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\teditor.setDecorations(this._decorationType, []);\n\t\t}\n\t}\n\n\tupdate(): void {\n\t\tthis._hide();\n\t\tthis._show();\n\t}\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemNavigation } from './references-view';\nimport { ContextKey } from './utils';\n\nexport class Navigation {\n\n\tprivate readonly _disposables: vscode.Disposable[] = [];\n\tprivate readonly _ctxCanNavigate = new ContextKey<boolean>('references-view.canNavigate');\n\n\tprivate _delegate?: SymbolItemNavigation<unknown>;\n\n\tconstructor(private readonly _view: vscode.TreeView<unknown>) {\n\t\tthis._disposables.push(\n\t\t\tvscode.commands.registerCommand('references-view.next', () => this.next(false)),\n\t\t\tvscode.commands.registerCommand('references-view.prev', () => this.previous(false)),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tvscode.Disposable.from(...this._disposables).dispose();\n\t}\n\n\tupdate(delegate: SymbolItemNavigation<unknown> | undefined) {\n\t\tthis._delegate = delegate;\n\t\tthis._ctxCanNavigate.set(Boolean(this._delegate));\n\t}\n\n\tprivate _anchor(): undefined | unknown {\n\t\tif (!this._delegate) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst [sel] = this._view.selection;\n\t\tif (sel) {\n\t\t\treturn sel;\n\t\t}\n\t\tif (!vscode.window.activeTextEditor) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._delegate.nearest(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active);\n\t}\n\n\tprivate _open(loc: vscode.Location, preserveFocus: boolean) {\n\t\tvscode.commands.executeCommand('vscode.open', loc.uri, {\n\t\t\tselection: new vscode.Selection(loc.range.start, loc.range.start),\n\t\t\tpreserveFocus\n\t\t});\n\t}\n\n\tprevious(preserveFocus: boolean): void {\n\t\tif (!this._delegate) {\n\t\t\treturn;\n\t\t}\n\t\tconst item = this._anchor();\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = this._delegate.previous(item);\n\t\tconst newLocation = this._delegate.location(newItem);\n\t\tif (newLocation) {\n\t\t\tthis._view.reveal(newItem, { select: true, focus: true });\n\t\t\tthis._open(newLocation, preserveFocus);\n\t\t}\n\t}\n\n\tnext(preserveFocus: boolean): void {\n\t\tif (!this._delegate) {\n\t\t\treturn;\n\t\t}\n\t\tconst item = this._anchor();\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = this._delegate.next(item);\n\t\tconst newLocation = this._delegate.location(newItem);\n\t\tif (newLocation) {\n\t\t\tthis._view.reveal(newItem, { select: true, focus: true });\n\t\t\tthis._open(newLocation, preserveFocus);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
