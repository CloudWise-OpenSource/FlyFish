{"version":3,"sources":["out-vscode/vs/base/common/performance.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\n(function () {\n\n\t/**\n\t * @returns {{mark(name:string):void, getMarks():{name:string, startTime:number}[]}}\n\t */\n\tfunction _definePolyfillMarks(timeOrigin) {\n\n\t\tconst _data = [];\n\t\tif (typeof timeOrigin === 'number') {\n\t\t\t_data.push('code/timeOrigin', timeOrigin);\n\t\t}\n\n\t\tfunction mark(name) {\n\t\t\t_data.push(name, Date.now());\n\t\t}\n\t\tfunction getMarks() {\n\t\t\tconst result = [];\n\t\t\tfor (let i = 0; i < _data.length; i += 2) {\n\t\t\t\tresult.push({\n\t\t\t\t\tname: _data[i],\n\t\t\t\t\tstartTime: _data[i + 1],\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn { mark, getMarks };\n\t}\n\n\t/**\n\t * @returns {{mark(name:string):void, getMarks():{name:string, startTime:number}[]}}\n\t */\n\tfunction _define() {\n\n\t\tif (typeof performance === 'object' && typeof performance.mark === 'function') {\n\t\t\t// in a browser context, reuse performance-util\n\n\t\t\tif (typeof performance.timeOrigin !== 'number' && !performance.timing) {\n\t\t\t\t// safari & webworker: because there is no timeOrigin and no workaround\n\t\t\t\t// we use the `Date.now`-based polyfill.\n\t\t\t\treturn _definePolyfillMarks();\n\n\t\t\t} else {\n\t\t\t\t// use \"native\" performance for mark and getMarks\n\t\t\t\treturn {\n\t\t\t\t\tmark(name) {\n\t\t\t\t\t\tperformance.mark(name);\n\t\t\t\t\t},\n\t\t\t\t\tgetMarks() {\n\t\t\t\t\t\tlet timeOrigin = performance.timeOrigin;\n\t\t\t\t\t\tif (typeof timeOrigin !== 'number') {\n\t\t\t\t\t\t\t// safari: there is no timerOrigin but in renderers there is the timing-property\n\t\t\t\t\t\t\t// see https://bugs.webkit.org/show_bug.cgi?id=174862\n\t\t\t\t\t\t\ttimeOrigin = performance.timing.navigationStart || performance.timing.redirectStart || performance.timing.fetchStart;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst result = [{ name: 'code/timeOrigin', startTime: Math.round(timeOrigin) }];\n\t\t\t\t\t\tfor (const entry of performance.getEntriesByType('mark')) {\n\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\tname: entry.name,\n\t\t\t\t\t\t\t\tstartTime: Math.round(timeOrigin + entry.startTime)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t} else if (typeof process === 'object') {\n\t\t\t// node.js: use the normal polyfill but add the timeOrigin\n\t\t\t// from the node perf_hooks API as very first mark\n\t\t\tconst timeOrigin = Math.round((require.nodeRequire || require)('perf_hooks').performance.timeOrigin);\n\t\t\treturn _definePolyfillMarks(timeOrigin);\n\n\t\t} else {\n\t\t\t// unknown environment\n\t\t\tconsole.trace('perf-util loaded in UNKNOWN environment');\n\t\t\treturn _definePolyfillMarks();\n\t\t}\n\t}\n\n\tfunction _factory(sharedObj) {\n\t\tif (!sharedObj.MonacoPerformanceMarks) {\n\t\t\tsharedObj.MonacoPerformanceMarks = _define();\n\t\t}\n\t\treturn sharedObj.MonacoPerformanceMarks;\n\t}\n\n\t// This module can be loaded in an amd and commonjs-context.\n\t// Because we want both instances to use the same perf-data\n\t// we store them globally\n\n\t// eslint-disable-next-line no-var\n\tvar sharedObj;\n\tif (typeof global === 'object') {\n\t\t// nodejs\n\t\tsharedObj = global;\n\t} else if (typeof self === 'object') {\n\t\t// browser\n\t\tsharedObj = self;\n\t} else {\n\t\tsharedObj = {};\n\t}\n\n\tif (typeof define === 'function') {\n\t\t// amd\n\t\tdefine([], function () { return _factory(sharedObj); });\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t\t// commonjs\n\t\tmodule.exports = _factory(sharedObj);\n\t} else {\n\t\tconsole.trace('perf-util defined in UNKNOWN context (neither requirejs or commonjs)');\n\t\tsharedObj.perf = _factory(sharedObj);\n\t}\n\n})();\n"],"mappings":"aASA,AAAC,YAKA,WAA8B,GAE7B,KAAM,GAAQ,GACd,AAAI,MAAO,IAAe,UACzB,EAAM,KAAK,kBAAmB,GAG/B,WAAc,GACb,EAAM,KAAK,EAAM,KAAK,OAEvB,aACC,KAAM,GAAS,GACf,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,GAAK,EACtC,EAAO,KAAK,CACX,KAAM,EAAM,GACZ,UAAW,EAAM,EAAI,KAGvB,MAAO,GAER,MAAO,CAAE,OAAM,YAMhB,aAEC,GAAI,MAAO,cAAgB,UAAY,MAAO,aAAY,MAAS,WAGlE,MAAI,OAAO,aAAY,YAAe,UAAY,CAAC,YAAY,OAGvD,IAIA,CACN,KAAK,GACJ,YAAY,KAAK,IAElB,WACC,GAAI,GAAa,YAAY,WAC7B,AAAI,MAAO,IAAe,UAGzB,GAAa,YAAY,OAAO,iBAAmB,YAAY,OAAO,eAAiB,YAAY,OAAO,YAE3G,KAAM,GAAS,CAAC,CAAE,KAAM,kBAAmB,UAAW,KAAK,MAAM,KACjE,SAAW,KAAS,aAAY,iBAAiB,QAChD,EAAO,KAAK,CACX,KAAM,EAAM,KACZ,UAAW,KAAK,MAAM,EAAa,EAAM,aAG3C,MAAO,KAKJ,GAAI,MAAO,UAAY,UAG7B,KAAM,GAAa,KAAK,MAAO,SAAQ,aAAe,SAAS,cAAc,YAAY,YACzF,MAAO,GAAqB,OAI5B,gBAAQ,MAAM,2CACP,IAIT,WAAkB,GACjB,MAAK,GAAU,wBACd,GAAU,uBAAyB,KAE7B,EAAU,uBAQlB,GAAI,GACJ,AAAI,MAAO,SAAW,SAErB,EAAY,OACN,AAAI,MAAO,OAAS,SAE1B,EAAY,KAEZ,EAAY,GAGb,AAAI,MAAO,SAAW,WAErB,OAAO,GAAI,WAAc,MAAO,GAAS,KACnC,AAAI,MAAO,SAAW,UAAY,MAAO,QAAO,SAAY,SAElE,OAAO,QAAU,EAAS,GAE1B,SAAQ,MAAM,wEACd,EAAU,KAAO,EAAS","names":[],"file":"performance.js"}