{"version":3,"sources":["out-vscode/vs/workbench/services/extensions/worker/extensionHostWorkerMain.js"],"sourcesContent":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n(function () {\n    var _a, _b;\n    const MonacoEnvironment = self.MonacoEnvironment;\n    const monacoBaseUrl = MonacoEnvironment && MonacoEnvironment.baseUrl ? MonacoEnvironment.baseUrl : '../../../../../';\n    const trustedTypesPolicy = (typeof ((_a = self.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy) === 'function'\n        ? (_b = self.trustedTypes) === null || _b === void 0 ? void 0 : _b.createPolicy('amdLoader', {\n            createScriptURL: value => value,\n            createScript: (_, ...args) => {\n                // workaround a chrome issue not allowing to create new functions\n                // see https://github.com/w3c/webappsec-trusted-types/wiki/Trusted-Types-for-function-constructor\n                const fnArgs = args.slice(0, -1).join(',');\n                const fnBody = args.pop().toString();\n                const body = `(function anonymous(${fnArgs}) {\\n${fnBody}\\n})`;\n                return body;\n            }\n        })\n        : undefined);\n    function loadAMDLoader() {\n        return new Promise((resolve, reject) => {\n            if (typeof self.define === 'function' && self.define.amd) {\n                return resolve();\n            }\n            const loaderSrc = monacoBaseUrl + 'vs/loader.js';\n            const isCrossOrigin = (/^((http:)|(https:)|(file:))/.test(loaderSrc) && loaderSrc.substring(0, self.origin.length) !== self.origin);\n            if (!isCrossOrigin) {\n                // use `fetch` if possible because `importScripts`\n                // is synchronous and can lead to deadlocks on Safari\n                fetch(loaderSrc).then((response) => {\n                    if (response.status !== 200) {\n                        throw new Error(response.statusText);\n                    }\n                    return response.text();\n                }).then((text) => {\n                    text = `${text}\\n//# sourceURL=${loaderSrc}`;\n                    const func = (trustedTypesPolicy\n                        ? self.eval(trustedTypesPolicy.createScript('', text))\n                        : new Function(text));\n                    func.call(self);\n                    resolve();\n                }).then(undefined, reject);\n                return;\n            }\n            if (trustedTypesPolicy) {\n                importScripts(trustedTypesPolicy.createScriptURL(loaderSrc));\n            }\n            else {\n                importScripts(loaderSrc);\n            }\n            resolve();\n        });\n    }\n    loadAMDLoader().then(() => {\n        require.config({\n            baseUrl: monacoBaseUrl,\n            catchError: true,\n            trustedTypesPolicy\n        });\n        require(['vs/workbench/services/extensions/worker/extensionHostWorker'], () => { }, err => console.error(err));\n    }).then(undefined, (err) => console.error(err));\n})();\n//# sourceMappingURL=extensionHostWorkerMain.js.map"],"mappings":"aAKA,AAAC,YACG,GAAI,GAAI,EACR,KAAM,GAAoB,KAAK,kBACzB,EAAgB,GAAqB,EAAkB,QAAU,EAAkB,QAAU,kBAC7F,EAAsB,MAAS,IAAK,KAAK,gBAAkB,MAAQ,IAAO,OAAS,OAAS,EAAG,eAAkB,WAChH,GAAK,KAAK,gBAAkB,MAAQ,IAAO,OAAS,OAAS,EAAG,aAAa,YAAa,CACzF,gBAAiB,GAAS,EAC1B,aAAc,CAAC,KAAM,KAGjB,KAAM,GAAS,EAAK,MAAM,EAAG,IAAI,KAAK,KAChC,EAAS,EAAK,MAAM,WAE1B,MADa,uBAAuB;AAAA,EAAc;AAAA,OAIxD,OACN,aACI,MAAO,IAAI,SAAQ,CAAC,EAAS,KACzB,GAAI,MAAO,MAAK,QAAW,YAAc,KAAK,OAAO,IACjD,MAAO,KAEX,KAAM,GAAY,EAAgB,eAElC,GAAI,CADmB,+BAA8B,KAAK,IAAc,EAAU,UAAU,EAAG,KAAK,OAAO,UAAY,KAAK,SAIxH,MAAM,GAAW,KAAK,AAAC,IACnB,GAAI,EAAS,SAAW,IACpB,KAAM,IAAI,OAAM,EAAS,YAE7B,MAAO,GAAS,SACjB,KAAK,AAAC,IACL,EAAO,GAAG;AAAA,gBAAuB,IAIjC,AAHc,GACR,KAAK,KAAK,EAAmB,aAAa,GAAI,IAC9C,GAAI,UAAS,IACd,KAAK,MACV,MACD,KAAK,OAAW,GACnB,OAEJ,AAAI,EACA,cAAc,EAAmB,gBAAgB,IAGjD,cAAc,GAElB,MAGR,IAAgB,KAAK,KACjB,QAAQ,OAAO,CACX,QAAS,EACT,WAAY,GACZ,uBAEJ,QAAQ,CAAC,+DAAgE,OAAW,GAAO,QAAQ,MAAM,MAC1G,KAAK,OAAW,AAAC,GAAQ,QAAQ,MAAM","names":[],"file":"extensionHostWorkerMain.js"}